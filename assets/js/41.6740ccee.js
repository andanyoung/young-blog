(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{366:function(s,n,e){"use strict";e.r(n);var a=e(4),t=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("blockquote",[n("p",[n("code",[s._v("Ningx")]),s._v(" 使用 "),n("code",[s._v("worker_cpu_affinity")]),s._v(" 绑定 "),n("code",[s._v("CPU")]),s._v("，提高 "),n("code",[s._v("Nginx")]),s._v(" 工作效率。")])]),s._v(" "),n("h2",{attrs:{id:"环境说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#环境说明"}},[s._v("#")]),s._v(" 环境说明")]),s._v(" "),n("ul",[n("li",[s._v("CentOS 7 4c4g")])]),s._v(" "),n("h2",{attrs:{id:"默认的配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#默认的配置"}},[s._v("#")]),s._v(" 默认的配置")]),s._v(" "),n("p",[s._v("修改 "),n("code",[s._v("/etc/nginx/nginx.conf")]),s._v("，默认的 "),n("code",[s._v("CPU")]),s._v(" 参数为：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("worker_processes auto;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"cpu-绑定关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cpu-绑定关系"}},[s._v("#")]),s._v(" CPU 绑定关系")]),s._v(" "),n("p",[s._v("启动服务后，"),n("code",[s._v("Nginx")]),s._v(" 进程与 "),n("code",[s._v("CPU")]),s._v(" 亲和关系：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ systemctl start nginx\n$ ps -ef|grep nginx\nroot       1889      1  0 10:02 ?        00:00:00 nginx: master process /usr/sbin/nginx\nnginx      1890   1889  0 10:02 ?        00:00:00 nginx: worker process\nnginx      1891   1889  0 10:02 ?        00:00:00 nginx: worker process\nnginx      1892   1889  0 10:02 ?        00:00:00 nginx: worker process\nnginx      1893   1889  0 10:02 ?        00:00:00 nginx: worker process\nroot       1896   1745  0 10:02 pts/0    00:00:00 grep --color=auto nginx\n$ taskset -c -p 1890\npid 1890's current affinity list: 0-2\n$ taskset -c -p 1891\npid 1891's current affinity list: 0-2\n$ taskset -c -p 1892\npid 1892's current affinity list: 0-2\n$ taskset -c -p 1893\npid 1893's current affinity list: 0-2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("通过 "),n("code",[s._v("taskset")]),s._v(" 命令，我们可以看到每一个 "),n("code",[s._v("nginx")]),s._v(" 子进程都 0-2 的 "),n("code",[s._v("CPU")]),s._v(" 和绑定。")]),s._v(" "),n("h2",{attrs:{id:"配置-worker-cpu-affinity"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置-worker-cpu-affinity"}},[s._v("#")]),s._v(" 配置 worker_cpu_affinity")]),s._v(" "),n("p",[s._v("修改 "),n("code",[s._v("worker_processes auto")]),s._v(" 为：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("worker_processes    4;\nworker_cpu_affinity 0001 0010 0100 1000;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("说明：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("worker_processes")]),s._v(" 分配给 Nginx 的 CPU 数量")]),s._v(" "),n("li",[n("code",[s._v("worker_cpu_affinity")]),s._v(" 二进制，"),n("code",[s._v("0001")]),s._v(" 表示启用第一个 CPU，依次类推")])]),s._v(" "),n("h3",{attrs:{id:"cpu-绑定关系-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cpu-绑定关系-2"}},[s._v("#")]),s._v(" CPU 绑定关系")]),s._v(" "),n("p",[n("code",[s._v("Nginx")]),s._v(" 进程与 "),n("code",[s._v("CPU")]),s._v(" 亲和关系：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ ps -ef|grep nginx\nroot       1930      1  0 10:03 ?        00:00:00 nginx: master process /usr/sbin/nginx\nnginx      1931   1930  0 10:03 ?        00:00:00 nginx: worker process\nnginx      1932   1930  0 10:03 ?        00:00:00 nginx: worker process\nnginx      1933   1930  0 10:03 ?        00:00:00 nginx: worker process\nnginx      1934   1930  0 10:03 ?        00:00:00 nginx: worker process\nroot       1936   1745  0 10:03 pts/0    00:00:00 grep --color=auto nginx\n$ taskset -c -p 1931\npid 1931's current affinity list: 0\n$ taskset -c -p 1932\npid 1932's current affinity list: 1\n$ taskset -c -p 1933\npid 1933's current affinity list: 2\n$ taskset -c -p 1934\npid 1934's current affinity list: 3\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("通过 "),n("code",[s._v("taskset")]),s._v(" 命令，我们可以看到每一个 "),n("code",[s._v("nginx")]),s._v(" 子进程都和指定的 "),n("code",[s._v("CPU")]),s._v(" 核绑定。")]),s._v(" "),n("h2",{attrs:{id:"压测验证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#压测验证"}},[s._v("#")]),s._v(" 压测验证")]),s._v(" "),n("p",[s._v("用 "),n("code",[s._v("wrk")]),s._v(" 工具，进行性能测试，在服务器上执行 "),n("code",[s._v("top")]),s._v("，然后按 "),n("code",[s._v("1")]),s._v("，可以看到 4 个 "),n("code",[s._v("cpu")]),s._v(" 内核的利用率差不多，证明 "),n("code",[s._v("nginx")]),s._v(" 已经成功利用了多核 cpu。")])])}),[],!1,null,null,null);n.default=t.exports}}]);