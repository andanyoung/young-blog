(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{1052:function(t,a,n){"use strict";n.r(a);var s=n(4),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://blog.csdn.net/m0_53157173/article/details/125052623?ops_request_misc=%7B%22request%5Fid%22%3A%22166624625716782248575826%22%2C%22scm%22%3A%2220140713.130102334.pc%5Fblog.%22%7D&request_id=166624625716782248575826&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-9-125052623-null-null.article_score_rank_blog&utm_term=%E4%BA%8B%E5%8A%A1&spm=1018.2226.3001.4450",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring 事务王国概览"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://cjdhy.blog.csdn.net/article/details/125130078",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring 事务管理—上"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://cjdhy.blog.csdn.net/article/details/125196276",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring 事务管理—中"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://cjdhy.blog.csdn.net/article/details/125223905",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring 事务管理—下"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://cjdhy.blog.csdn.net/article/details/125232126",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring 事务扩展篇"),a("OutboundLink")],1)]),t._v(" "),a("h1",{attrs:{id:"事务创建涉及到一些属性的配置-如"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务创建涉及到一些属性的配置-如"}},[t._v("#")]),t._v(" 事务创建涉及到一些属性的配置,如:")]),t._v(" "),a("p",[a("img",{attrs:{src:n(636),alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("事务的隔离级别")]),t._v(" "),a("li",[t._v("事务的传播行为")]),t._v(" "),a("li",[t._v("事务的超时时间")]),t._v(" "),a("li",[t._v("是否为只读事务")])]),t._v(" "),a("h1",{attrs:{id:"事务家族"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务家族"}},[t._v("#")]),t._v(" 事务家族")]),t._v(" "),a("p",[t._v("事务的大家族中常会出现下面几个重要的家庭成员:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Resource Manager")]),t._v(": 简称 RM，可以将其看做是数据的管理员，例如,数据库服务器(mysql),消息服务器等")]),t._v(" "),a("li",[a("strong",[t._v("Transaction Processing Monitor")]),t._v(": 简称 TPM 或者 TP Monitor,他负责在分布式场景下协调多个 RM 的事务处理。")]),t._v(" "),a("li",[a("strong",[t._v("Transaction Manager")]),t._v(": 简称 TM，它可以认为是 TP Monitor 的核心模块,直接负责多 RM 之间事务处理的协调工作,并提供事务界定，事务上下文传播等功能接口。")])]),t._v(" "),a("h1",{attrs:{id:"三大主要类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三大主要类"}},[t._v("#")]),t._v(" 三大主要类")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("PlatformTransactionManager")]),t._v("： 负责界定事务边界")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public interface PlatformTransactionManager extends TransactionManager {\n\tTransactionStatus getTransaction(@Nullable TransactionDefinition definition)\n\t\t\tthrows TransactionException;\n\tvoid commit(TransactionStatus status) throws TransactionException;\n\tvoid rollback(TransactionStatus status) throws TransactionException;\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("TransactionStatus")]),t._v(" ： 记录整个事务处理过程中的事务状态")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("SavepointManager:")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("mysql 中 savepoint 的用法吧:")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ET autocommit=0;\nSTART TRANSACTION;\nDELETE FROM test1 WHERE  NAME='大忽悠';\nSAVEPOINT a;#设置保存点\nDELETE FROM test1 WHERE  NAME='小朋友';\nROLLBACK TO a;#回滚到保存点\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("blockquote",[a("p",[a("strong",[a("code",[t._v("SAVEPOINT的好处在于可以选择回滚一部分事务")])])])])])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("TransactionDefinition")]),t._v(" ：主要定义了事务属性相关配置:")]),t._v(" "),a("ul",[a("li",[t._v("事务的隔离级别")]),t._v(" "),a("li",[t._v("事务的传播行为")]),t._v(" "),a("li",[t._v("事务的超时时间")]),t._v(" "),a("li",[t._v("是否为只读事务")])]),t._v(" "),a("blockquote",[a("h5",{attrs:{id:"transactiontemplate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transactiontemplate"}},[t._v("#")]),t._v(" TransactionTemplate:")]),t._v(" "),a("p",[t._v("是 Spring 提供的进行编程式事务管理的模板方法类,他直接继承了 DefaultTransactionDefinition。")]),t._v(" "),a("p",[a("strong",[t._v("TransactionTemplate 的设计思想和 JDBCTemplate 一致,是通过模板方法加回调接口的方式，将通用的事务处理代码，和资源管理封装为模板方法，而将需要变化的，并且需要被事务包裹的代码，以回调接口的形式传递出去。")])])])])])])}),[],!1,null,null,null);a.default=r.exports},636:function(t,a,n){t.exports=n.p+"assets/img/3062258fdfd647e5a5d844183ffffa82.22fc3966.png"}}]);