(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{1506:function(a,s,e){"use strict";e.r(s);var t=e(4),n=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"第-1-章-kafka-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-1-章-kafka-概述"}},[a._v("#")]),a._v(" 第 1 章 Kafka 概述")]),a._v(" "),s("h2",{attrs:{id:"_1-1-定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-定义"}},[a._v("#")]),a._v(" 1.1 定义")]),a._v(" "),s("p",[s("strong",[a._v("Kafka 传统定义")]),a._v("：Kafka 是一个"),s("strong",[a._v("分布式")]),a._v("的基于"),s("strong",[a._v("发布/订阅模式")]),a._v("的"),s("strong",[a._v("消息队列")]),a._v("（Message Queue），主要应用于大数据实时处理领域。")]),a._v(" "),s("p",[s("strong",[a._v("发布/订阅")]),a._v("：消息的发布者不会将消息直接发送给特定的订阅者，而是将发布的消息 分为不同的类别，订阅者只接收感兴趣的消息。")]),a._v(" "),s("p",[s("strong",[a._v("Kafka 最新定义")]),a._v("： Kafka 是一个"),s("strong",[a._v("开源的分布式事件流平台")]),a._v("（Event Streaming Platform），被数千家公司用于高性能数据管道、流分析、数据集成和关键任务应用。")]),a._v(" "),s("h2",{attrs:{id:"_1-2-消息队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-消息队列"}},[a._v("#")]),a._v(" 1.2 消息队列")]),a._v(" "),s("p",[a._v("目前企业中比较常见的消息队列产品主要有 Kafka、ActiveMQ 、RabbitMQ 、 RocketMQ 等。在大数据场景主要采用 Kafka 作为消息队列。在 JavaEE 开发中主要采用 ActiveMQ、 RabbitMQ、RocketMQ。")]),a._v(" "),s("h3",{attrs:{id:"_1-2-1-传统消息队列的应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-传统消息队列的应用场景"}},[a._v("#")]),a._v(" 1.2.1 传统消息队列的应用场景")]),a._v(" "),s("p",[a._v("传统的消息队列的主要应用场景包括："),s("strong",[a._v("缓存/消峰、解耦和异步通信")])]),a._v(" "),s("h3",{attrs:{id:"_1-2-2-消息队列的两种模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-消息队列的两种模式"}},[a._v("#")]),a._v(" 1.2.2 消息队列的两种模式")]),a._v(" "),s("h5",{attrs:{id:"_1-点对点模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-点对点模式"}},[a._v("#")]),a._v(" 1）点对点模式")]),a._v(" "),s("ul",[s("li",[a._v("消费者主动拉取数据，消息收到后清除消息")])]),a._v(" "),s("p",[s("img",{attrs:{src:e(987),alt:"点对点"}})]),a._v(" "),s("p",[a._v("2）发布/订阅模式")]),a._v(" "),s("ul",[s("li",[a._v("可以有多个 topic 主题（浏览、点赞、收藏、评论等）")]),a._v(" "),s("li",[a._v("消费者消费数据之后，不删除数据")]),a._v(" "),s("li",[a._v("每个消费者相互独立，都可以消费到数据")])]),a._v(" "),s("p",[s("img",{attrs:{src:e(988),alt:"发布/订阅模式"}})]),a._v(" "),s("h2",{attrs:{id:"_1-3-kafka-基础架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-kafka-基础架构"}},[a._v("#")]),a._v(" 1.3 Kafka 基础架构")]),a._v(" "),s("p",[s("img",{attrs:{src:e(989),alt:"Kafka 基础架构"}})]),a._v(" "),s("ul",[s("li",[a._v("（1）"),s("strong",[a._v("Producer")]),a._v("：消息生产者，就是向 Kafka broker 发消息的客户端。")]),a._v(" "),s("li",[a._v("（2）"),s("strong",[a._v("Consumer")]),a._v("：消息消费者，向 Kafka broker 取消息的客户端。")]),a._v(" "),s("li",[a._v("（3）"),s("strong",[a._v("Consumer Group（CG）")]),a._v("：消费者组，由多个 consumer 组成。消费者组内每个消费者负责消费不同分区的数据，一个分区只能由一个组内消费者消费；消费者组之间互不影响。所有的消费者都属于某个消费者组，即消费者组是逻辑上的一个订阅者。")]),a._v(" "),s("li",[a._v("（4）"),s("strong",[a._v("Broker")]),a._v("：一台 Kafka 服务器就是一个 broker。一个集群由多个 broker 组成。一个 broker 可以容纳多个 topic。")]),a._v(" "),s("li",[a._v("（5）"),s("strong",[a._v("Topic")]),a._v("：可以理解为一个队列**，生产者和消费者面向的都是一个 topic**。")]),a._v(" "),s("li",[a._v("（6）"),s("strong",[a._v("Partition")]),a._v("：为了实现扩展性，一个非常大的 topic 可以分布到多个 broker（即服务器）上，一个 topic 可以分为多个 partition，每个 partition 是一个有序的队列。")]),a._v(" "),s("li",[a._v("（7）"),s("strong",[a._v("Replica")]),a._v("：副本。一个 topic 的每个分区都有若干个副本，一个 Leader 和若干个 Follower。")]),a._v(" "),s("li",[a._v("（8）"),s("strong",[a._v("Leader")]),a._v("：每个分区多个副本的“主”，生产者发送数据的对象，以及消费者消费数据的对象都是 Leader。")]),a._v(" "),s("li",[a._v("（9）"),s("strong",[a._v("Follower")]),a._v("：每个分区多个副本中的“从”，实时从 Leader 中同步数据，保持和 Leader 数据的同步。Leader 发生故障时，某个 Follower 会成为新的 Leader。")])]),a._v(" "),s("h1",{attrs:{id:"第-2-章-kafka-快速入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-2-章-kafka-快速入门"}},[a._v("#")]),a._v(" 第 2 章 Kafka 快速入门")]),a._v(" "),s("h2",{attrs:{id:"_2-1-安装部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-安装部署"}},[a._v("#")]),a._v(" 2.1 安装部署")]),a._v(" "),s("h3",{attrs:{id:"_2-1-1-集群规划"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-集群规划"}},[a._v("#")]),a._v(" 2.1.1 集群规划")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("hadoop102")]),a._v(" "),s("th",[a._v("hadoop103")]),a._v(" "),s("th",[a._v("hadoop104")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("zk")]),a._v(" "),s("td",[a._v("zk")]),a._v(" "),s("td",[a._v("zk")])]),a._v(" "),s("tr",[s("td",[a._v("zk")]),a._v(" "),s("td",[a._v("zk")]),a._v(" "),s("td",[a._v("zk")])])])]),a._v(" "),s("h3",{attrs:{id:"_2-1-2-集群部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-集群部署"}},[a._v("#")]),a._v(" 2.1.2 集群部署")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("0）官方下载地址：http://kafka.apache.org/downloads.html")])]),a._v(" "),s("li",[s("p",[a._v("1）解压安装包")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 software]$ tar -zxvf kafka_2.12-3.0.0.tgz -C\n/opt/module/\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("2）修改解压后的文件名称")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 module]$ mv kafka_2.12-3.0.0/ kafka\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("3）进入到/opt/module/kafka 目录，修改配置文件")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ cd config/\n[andanyoung@hadoop102 config]$ vim server.properties\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("输入以下内容：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('#> broker 的全局唯一编号，不能重复，只能是数字。\nbroker.id=0\n#处理网络请求的线程数量\nnum.network.threads=3\n#用来处理磁盘 IO 的线程数量\nnum.io.threads=8\n#发送套接字的缓冲区大小\nsocket.send.buffer.bytes=102400\n#接收套接字的缓冲区大小\nsocket.receive.buffer.bytes=102400\n#请求套接字的缓冲区大小\nsocket.request.max.bytes=104857600\n#> kafka 运行日志(数据)存放的路径，路径不需要提前创建，kafka 自动帮你创建，可以配置多个磁盘路径，路径与路径之间可以用"，"分隔\nlog.dirs=/opt/module/kafka/datas\n#topic 在当前 broker 上的分区个数\nnum.partitions=1\n#用来恢复和清理 data 下数据的线程数量\nnum.recovery.threads.per.data.dir=1\n# 每个 topic 创建时的副本数，默认时 1 个副本\noffsets.topic.replication.factor=1\n#segment 文件保留的最长时间，超时将被删除\nlog.retention.hours=168\n#每个 segment 文件的大小，默认最大 1G\nlog.segment.bytes=1073741824\n# 检查过期数据的时间，默认 5 分钟检查一次是否数据过期\nlog.retention.check.interval.ms=300000\n#> 配置连接 Zookeeper 集群地址（在 zk 根目录下创建/kafka，方便管理）\nzookeeper.connect=hadoop102:2181,hadoop103:2181,hadoop104:2181/kafka\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("4）分发安装包")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 module]$ xsync kafka/\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("5）分别在 hadoop103 和 hadoop104 上修改配置文件/opt/module/kafka/config/server.properties 中的 broker.id=1、broker.id=2")]),a._v(" "),s("blockquote",[s("p",[a._v("注：broker.id 不得重复，整个集群中唯一。")])])]),a._v(" "),s("li",[s("p",[a._v("6）配置环境变量")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("（1）在/etc/profile.d/my_env.sh 文件中增加 kafka 环境变量配置")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 module]$ sudo vim /etc/profile.d/my_env.sh\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("增加如下内容：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#KAFKA_HOME\nexport KAFKA_HOME=/opt/module/kafka\nexport PATH=$PATH:$KAFKA_HOME/bin\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("（2）刷新一下环境变量。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 module]$ source /etc/profile\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("（3）分发环境变量文件到其他节点，并 source。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 module]$ sudo /home/andanyoung/bin/xsync/etc/profile.d/my_env.sh\n[andanyoung@hadoop103 module]$ source /etc/profile\n[andanyoung@hadoop104 module]$ source /etc/profile\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])])])])]),a._v(" "),s("li",[s("p",[a._v("7）启动集群")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("（1）先启动 Zookeeper 集群，然后启动 Kafka。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ zk.sh start\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("（2）依次在 hadoop102、hadoop103、hadoop104 节点上启动 Kafka。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ bin/kafka-server-start.sh -daemon config/server.properties\n[andanyoung@hadoop103 kafka]$ bin/kafka-server-start.sh -daemon config/server.properties\n[andanyoung@hadoop104 kafka]$ bin/kafka-server-start.sh -daemon config/server.properties\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("blockquote",[s("p",[a._v("注意：配置文件的路径要能够到 server.properties。")])])])])]),a._v(" "),s("li",[s("p",[a._v("8）关闭集群")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ bin/kafka-server-stop.sh\n[andanyoung@hadoop103 kafka]$ bin/kafka-server-stop.sh\n[andanyoung@hadoop104 kafka]$ bin/kafka-server-stop.sh\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])])])]),a._v(" "),s("h3",{attrs:{id:"_2-1-3-集群启停脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-集群启停脚本"}},[a._v("#")]),a._v(" 2.1.3 集群启停脚本")]),a._v(" "),s("p",[a._v("1）在/home/andanyoung/bin 目录下创建文件 kf.sh 脚本文件")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 bin]$ vim kf.sh\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("脚本如下：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('#! /bin/bash\ncase $1 in\n"start"){\n for i in hadoop102 hadoop103 hadoop104\n do\n \techo " --------启动 $i Kafka-------"\n \tssh $i "/opt/module/kafka/bin/kafka-server-start.sh -daemon /opt/module/kafka/config/server.properties"\n done\n};;\n"stop"){\n for i in hadoop102 hadoop103 hadoop104\n do\n \techo " --------停止 $i Kafka-------"\n \tssh $i "/opt/module/kafka/bin/kafka-server-stop.sh "\n done\n};;\nesac\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br")])]),s("p",[a._v("2）添加执行权限")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 bin]$ chmod +x kf.sh\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("3）启动集群命令")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 ~]$ kf.sh start\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("4）停止集群命令")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 ~]$ kf.sh stop\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("blockquote",[s("p",[a._v("注意：停止 Kafka 集群时，一定要等 Kafka 所有节点进程全部停止后再停止 Zookeeper 集群。因为 Zookeeper 集群当中记录着 Kafka 集群相关信息，Zookeeper 集群一旦先停止， Kafka 集群就没有办法再获取停止进程的信息，只能手动杀死 Kafka 进程了。")])]),a._v(" "),s("h2",{attrs:{id:"_2-2-kafka-命令行操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-kafka-命令行操作"}},[a._v("#")]),a._v(" 2.2 Kafka 命令行操作")]),a._v(" "),s("h3",{attrs:{id:"_2-2-1-主题命令行操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-主题命令行操作"}},[a._v("#")]),a._v(" "),s("img",{attrs:{src:e(990),alt:"Kafka 基础架构"}}),a._v("2.2.1 主题命令行操作")]),a._v(" "),s("p",[a._v("1）查看操作主题命令参数")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ bin/kafka-topics.sh\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:e(991),alt:"主题命令行操作"}})]),a._v(" "),s("p",[a._v("2）查看当前服务器中的所有 topic")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ bin/kafka-topics.sh --bootstrap-server\nhadoop102:9092 --list\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("3）创建 first topic")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ bin/kafka-topics.sh --bootstrap-server hadoop102:9092 --create --partitions 1 --replication-factor 3 --topic first\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("选项说明：")]),a._v(" "),s("p",[a._v("--topic 定义 topic 名")]),a._v(" "),s("p",[a._v("--replication-factor 定义副本数")]),a._v(" "),s("p",[a._v("--partitions 定义分区数")]),a._v(" "),s("p",[a._v("4）查看 first 主题的详情")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ bin/kafka-topics.sh --bootstrap-server hadoop102:9092 --describe --topic first\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("5）修改分区数（"),s("strong",[a._v("注意：分区数只能增加，不能减少")]),a._v("）")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ bin/kafka-topics.sh --bootstrap-server hadoop102:9092 --alter --topic first --partitions 3\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("6）再次查看 first 主题的详情")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ bin/kafka-topics.sh --bootstrap-server hadoop102:9092 --describe --topic first\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("7）删除 topic（学生自己演示）")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ bin/kafka-topics.sh --bootstrap-server hadoop102:9092 --delete --topic first\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2-2-2-生产者命令行操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-生产者命令行操作"}},[a._v("#")]),a._v(" 2.2.2 生产者命令行操作")]),a._v(" "),s("h4",{attrs:{id:"_1-查看操作生产者命令参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-查看操作生产者命令参数"}},[a._v("#")]),a._v(" 1）查看操作生产者命令参数")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ bin/kafka-console-producer.sh\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[a._v("参数")]),a._v(" "),s("th",[a._v("描述")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[s("code",[a._v("--bootstrap-server <String: server toconnect to>")])]),a._v(" "),s("td",[a._v("连接的 Kafka Broker 主机名称和端口号。")])]),a._v(" "),s("tr",[s("td",[s("code",[a._v("--topic <String: topic>")])]),a._v(" "),s("td",[a._v("操作的 topic 名称。")])])])]),a._v(" "),s("h4",{attrs:{id:"_2-发送消息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-发送消息"}},[a._v("#")]),a._v(" 2）发送消息")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ bin/kafka-console-producer.sh --bootstrap-server hadoop102:9092 --topic first\n>hello world\n>andanyoung andanyoung\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"_2-2-3-消费者命令行操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-消费者命令行操作"}},[a._v("#")]),a._v(" 2.2.3 消费者命令行操作")]),a._v(" "),s("h4",{attrs:{id:"_1-查看操作消费者命令参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-查看操作消费者命令参数"}},[a._v("#")]),a._v(" 1）查看操作消费者命令参数")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ bin/kafka-console-consumer.sh\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[a._v("参数")]),a._v(" "),s("th",[a._v("描述")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[s("code",[a._v("--bootstrap-server <String: server toconnect to>")])]),a._v(" "),s("td",[a._v("连接的 Kafka Broker 主机名称和端口号。")])]),a._v(" "),s("tr",[s("td",[s("code",[a._v("--topic <String: topic>")])]),a._v(" "),s("td",[a._v("操作的 topic 名称。")])]),a._v(" "),s("tr",[s("td",[s("code",[a._v("--from-beginning")])]),a._v(" "),s("td",[a._v("从头开始消费。")])]),a._v(" "),s("tr",[s("td",[s("code",[a._v("--group <String: consumer group id>")])]),a._v(" "),s("td",[a._v("指定消费者组名称。")])])])]),a._v(" "),s("h4",{attrs:{id:"_2-消费消息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-消费消息"}},[a._v("#")]),a._v(" 2）消费消息")]),a._v(" "),s("p",[a._v("（1）消费 first 主题中的数据。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ bin/kafka-console-consumer.sh --bootstrap-server hadoop102:9092 --topic first\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("（2）把主题中所有的数据都读取出来（包括历史数据）。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[andanyoung@hadoop102 kafka]$ bin/kafka-console-consumer.sh --bootstrap-server hadoop102:9092 --from-beginning --topic first\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])])}),[],!1,null,null,null);s.default=n.exports},987:function(a,s,e){a.exports=e.p+"assets/img/image-20230920212040486.61437ba9.png"},988:function(a,s,e){a.exports=e.p+"assets/img/image-20230920212308461.2e95e4cf.png"},989:function(a,s,e){a.exports=e.p+"assets/img/image-20230920212436588.13cfa98f.png"},990:function(a,s,e){a.exports=e.p+"assets/img/image-20230920223332459.1d66b54a.png"},991:function(a,s,e){a.exports=e.p+"assets/img/image-20230920223414285.4433e544.png"}}]);