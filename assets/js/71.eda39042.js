(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{1085:function(s,n,t){"use strict";t.r(n);var a=t(4),e=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"mybatis-的插件运行原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-的插件运行原理"}},[s._v("#")]),s._v(" MyBatis 的插件运行原理")]),s._v(" "),n("p",[s._v("MyBatis 插件的运行是基于 JDK 动态代理 + 拦截器链实现。")]),s._v(" "),n("p",[s._v("MyBatis 的拦截器可以拦截 4 大对象，开发者通过自定义拦截器，拦截对应的方法实现插件。")]),s._v(" "),n("ul",[n("li",[s._v("Executor(update, query, flushStatements, commit, rollback, getTransaction, close, isClosed)")]),s._v(" "),n("li",[s._v("ParameterHandler(getParameterObject, setParameters)")]),s._v(" "),n("li",[s._v("ResultSetHandler(handleResultSets, handleOutputParameters)")]),s._v(" "),n("li",[s._v("StatementHandler(prepare, parameterize, batch, update, query)")])]),s._v(" "),n("p",[s._v("在 MyBatis 的全局配置类 Configuration 中，定义了一个拦截器链。InterceptorChain 中用一个 List 集合保存所有的拦截器，其中 pluginAll 方法会遍历 List 集合，并调用所有拦截器的 plugin 方法。")]),s._v(" "),n("p",[n("img",{attrs:{src:t(510),alt:"image-20230629090103581"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("public class InterceptorChain {\n    // 定义了一个List集合装拦截器对象\n    private final List<Interceptor> interceptors = new ArrayList();\n\n    public InterceptorChain() {\n    }\n\n    // 遍历interceptors，并调用拦截器的plugin方法\n    public Object pluginAll(Object target) {\n        Interceptor interceptor;\n        for(Iterator var2 = this.interceptors.iterator(); var2.hasNext(); target = interceptor.plugin(target)) {\n            interceptor = (Interceptor)var2.next();\n        }\n\n        return target;\n    }\n\n    // 添加拦截器\n    public void addInterceptor(Interceptor interceptor) {\n        this.interceptors.add(interceptor);\n    }\n\n    // 获取interceptors\n    public List<Interceptor> getInterceptors() {\n        return Collections.unmodifiableList(this.interceptors);\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("p",[s._v("MyBatis 的拦截器，自定义插件就需要实现该接口")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("public interface Interceptor {\n    // 拦截处理\n    Object intercept(Invocation var1) throws Throwable;\n\n    // 生成代理对象\n    default Object plugin(Object target) {\n        return Plugin.wrap(target, this);\n    }\n\n    // 插件的属性设置\n    default void setProperties(Properties properties) {\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("public class Invocation {\n    // 目标对象\n    private final Object target;\n    // 目标对象的方法\n    private final Method method;\n    // 目标对象的方法参数\n    private final Object[] args;\n\n    public Invocation(Object target, Method method, Object[] args) {\n        this.target = target;\n        this.method = method;\n        this.args = args;\n    }\n\n    public Object getTarget() {\n        return this.target;\n    }\n\n    public Method getMethod() {\n        return this.method;\n    }\n\n    public Object[] getArgs() {\n        return this.args;\n    }\n\n    // 继续往下执行\n    public Object proceed() throws InvocationTargetException, IllegalAccessException {\n        return this.method.invoke(this.target, this.args);\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("h1",{attrs:{id:"mybatis-插件的开发"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-插件的开发"}},[s._v("#")]),s._v(" MyBatis 插件的开发")]),s._v(" "),n("p",[s._v("第一步：实现  Interceptor 接口")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.learn.blog.demo;\n\nimport org.apache.ibatis.executor.Executor;\nimport org.apache.ibatis.mapping.BoundSql;\nimport org.apache.ibatis.mapping.MappedStatement;\nimport org.apache.ibatis.plugin.Interceptor;\nimport org.apache.ibatis.plugin.Intercepts;\nimport org.apache.ibatis.plugin.Invocation;\nimport org.apache.ibatis.plugin.Signature;\nimport org.apache.ibatis.session.ResultHandler;\nimport org.apache.ibatis.session.RowBounds;\n\nimport java.lang.reflect.Field;\nimport java.util.Properties;\n\n/**\n * 自定义 MyBatis 插件，拦截 Executor 对象的 query 方法，添加limit 1\n */\n@Intercepts({\n        @Signature(\n                type = Executor.class,\n                method = "query",\n                args = {MappedStatement.class, Object.class, RowBounds.class, ResultHandler.class})\n})\npublic class MyBatisPlugin implements Interceptor {\n\n    @Override\n    public Object intercept(Invocation invocation) throws Throwable {\n        // 方法的参数\n        Object[] args = invocation.getArgs();\n        MappedStatement mappedStatement = (MappedStatement) args[0];\n        Object parameterObject = args[1];\n        BoundSql boundSql = mappedStatement.getBoundSql(parameterObject);\n        // 获取到原查询sql语句\n        String sql = boundSql.getSql();\n\n        // 利用反射修改boundSql的字段\n        Field field = boundSql.getClass().getDeclaredField("sql");\n        field.setAccessible(true);\n        field.set(boundSql, sql + "limit 1");\n\n        // 修改完继续执行\n        return invocation.proceed();\n    }\n\n    @Override\n    public Object plugin(Object target) {\n        return Interceptor.super.plugin(target);\n    }\n\n\n    @Override\n    public void setProperties(Properties properties) {\n        Interceptor.super.setProperties(properties);\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br")])]),n("p",[s._v("第二步：在 MyBatis 中注册拦截器 mybatis-config.xml")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<plugins>\n\t<plugin interceptor="com.learn.blog.demo.MyBatisPlugin">\n        <--可以指定插件的参数--\x3e\n\t\t<property />\n\t\t<property />\n\t</plugin>\n</plugins>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("第三步：spring 配置中指定 Mybatis 配置文件路径  "),n("img",{attrs:{src:t(511),alt:"image-20230629085642013"}})])])}),[],!1,null,null,null);n.default=e.exports},510:function(s,n,t){s.exports=t.p+"assets/img/image-20230629090103581.06f5e796.png"},511:function(s,n,t){s.exports=t.p+"assets/img/image-20230629085642013.99346cd5.png"}}]);