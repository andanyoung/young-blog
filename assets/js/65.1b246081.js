(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{657:function(e,a,s){"use strict";s.r(a);var t=s(4),r=Object(t.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"_1-前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-前言"}},[e._v("#")]),e._v(" 1. 前言")]),e._v(" "),a("p",[e._v("在上一篇"),a("a",{attrs:{href:"https://andyoung.blog.csdn.net/article/details/114630812",target:"_blank",rel:"noopener noreferrer"}},[e._v("【Zookeeper 入门】相关概念总结"),a("OutboundLink")],1),e._v(" 中已经完美的讲解了 Zookeeper 入门 相关概念总结，接下来讲讲 ZooKeeper 实战使用。")]),e._v(" "),a("p",[e._v("这篇文章简单给演示一下 ZooKeeper 常见命令的使用以及 ZooKeeper Java 客户端 Curator 的基本使用。介绍到的内容都是最基本的操作，能满足日常工作的基本需要。")]),e._v(" "),a("p",[e._v("如果文章有任何需要改善和完善的地方，欢迎在评论区指出，共同进步！")]),e._v(" "),a("h2",{attrs:{id:"_2-zookeeper-安装和使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-zookeeper-安装和使用"}},[e._v("#")]),e._v(" 2. ZooKeeper 安装和使用")]),e._v(" "),a("h3",{attrs:{id:"_2-1-1-linux-安装-zookeeper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-linux-安装-zookeeper"}},[e._v("#")]),e._v(" 2.1.1 linux 安装 zookeeper")]),e._v(" "),a("ul",[a("li",[a("p",[a("strong",[e._v("Step1")]),e._v("：配置 JAVA 环境，检验环境：java -version")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("Step2")]),e._v("：下载并解压 zookeeper")])])]),e._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" /usr/local\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" http://mirror.bit.edu.cn/apache/zookeeper/stable/zookeeper-3.4.12.tar.gz\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("tar")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-zxvf")]),e._v(" zookeeper-3.4.12.tar.gz\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" zookeeper-3.4.12\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("ul",[a("li",[a("strong",[e._v("Step3")]),e._v("：重命名配置文件 zoo_sample.cfg")])]),e._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" conf/zoo_sample.cfg conf/zoo.cfg\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[e._v("Step4")]),e._v("：启动 zookeeper")])]),e._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("bin/zkServer.sh start\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[e._v("Step5")]),e._v("：检测是否成功启动，用 zookeeper 客户端连接下服务端")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("bin/zkCli.sh\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h3",{attrs:{id:"_2-1-2-使用-docker-安装-zookeeper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-使用-docker-安装-zookeeper"}},[e._v("#")]),e._v(" 2.1.2 使用 Docker 安装 zookeeper")]),e._v(" "),a("p",[a("strong",[e._v("a.使用 Docker 下载 ZooKeeper")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker pull zookeeper:3.5.8\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("strong",[e._v("b.运行 ZooKeeper")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker run -d --name zookeeper -p 2181:2181 zookeeper:3.5.8\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h3",{attrs:{id:"_2-2-连接-zookeeper-服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-连接-zookeeper-服务"}},[e._v("#")]),e._v(" 2.2. 连接 ZooKeeper 服务")]),e._v(" "),a("p",[a("strong",[e._v("a.进入 ZooKeeper 容器中")])]),e._v(" "),a("p",[e._v("先使用 "),a("code",[e._v("docker ps")]),e._v(" 查看 ZooKeeper 的 ContainerID，然后使用 "),a("code",[e._v("docker exec -it ContainerID /bin/bash")]),e._v(" 命令进入容器中。")]),e._v(" "),a("p",[a("strong",[e._v("b.先进入 bin 目录,然后通过 "),a("code",[e._v("./zkCli.sh -server 127.0.0.1:2181")]),e._v("命令连接 ZooKeeper 服务")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("root@eaf70fc620cb:/apache-zookeeper-3.5.8-bin# cd bin\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("如果你看到控制台成功打印出如下信息的话，说明你已经成功连接 ZooKeeper 服务。")]),e._v(" "),a("p",[a("img",{attrs:{src:"http://md7.admin4j.com/blog/e84bbb4f6a9f22e085c57043cfefa963.png",alt:"连接 ZooKeeper 服务"}})]),e._v(" "),a("h3",{attrs:{id:"_2-3-常用命令演示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-常用命令演示"}},[e._v("#")]),e._v(" 2.3. 常用命令演示")]),e._v(" "),a("h4",{attrs:{id:"_2-3-1-查看常用命令-help-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-查看常用命令-help-命令"}},[e._v("#")]),e._v(" 2.3.1. 查看常用命令(help 命令)")]),e._v(" "),a("p",[e._v("通过 "),a("code",[e._v("help")]),e._v(" 命令查看 ZooKeeper 常用命令")]),e._v(" "),a("h4",{attrs:{id:"_2-3-2-创建节点-create-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-创建节点-create-命令"}},[e._v("#")]),e._v(" 2.3.2. 创建节点(create 命令)")]),e._v(" "),a("p",[e._v("通过 "),a("code",[e._v("create")]),e._v(' 命令在根目录创建了 node1 节点，与它关联的字符串是"node1"')]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[zk: 127.0.0.1:2181(CONNECTED) 34] create /node1 “node1”\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("通过 "),a("code",[e._v("create")]),e._v(" 命令在根目录创建了 node1 节点，与它关联的内容是数字 123")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[zk: 127.0.0.1:2181(CONNECTED) 1] create /node1/node1.1 123\nCreated /node1/node1.1\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h4",{attrs:{id:"_2-3-3-更新节点数据内容-set-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-3-更新节点数据内容-set-命令"}},[e._v("#")]),e._v(" 2.3.3. 更新节点数据内容(set 命令)")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('[zk: 127.0.0.1:2181(CONNECTED) 11] set /node1 "set node1"\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h4",{attrs:{id:"_2-3-4-获取节点的数据-get-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-4-获取节点的数据-get-命令"}},[e._v("#")]),e._v(" 2.3.4. 获取节点的数据(get 命令)")]),e._v(" "),a("p",[a("code",[e._v("get")]),e._v(" 命令可以获取指定节点的数据内容和节点的状态,可以看出我们通过 "),a("code",[e._v("set")]),e._v(' 命令已经将节点数据内容改为 "set node1"。')]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("set node1\ncZxid = 0x47\nctime = Sun Jan 20 10:22:59 CST 2019\nmZxid = 0x4b\nmtime = Sun Jan 20 10:41:10 CST 2019\npZxid = 0x4a\ncversion = 1\ndataVersion = 1\naclVersion = 0\nephemeralOwner = 0x0\ndataLength = 9\nnumChildren = 1\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br")])]),a("h4",{attrs:{id:"_2-3-5-查看某个目录下的子节点-ls-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-5-查看某个目录下的子节点-ls-命令"}},[e._v("#")]),e._v(" 2.3.5. 查看某个目录下的子节点(ls 命令)")]),e._v(" "),a("p",[e._v("通过 "),a("code",[e._v("ls")]),e._v(" 命令查看根目录下的节点")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[zk: 127.0.0.1:2181(CONNECTED) 37] ls /\n[dubbo, ZooKeeper, node1]\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("通过 "),a("code",[e._v("ls")]),e._v(" 命令查看 node1 目录下的节点")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[zk: 127.0.0.1:2181(CONNECTED) 5] ls /node1\n[node1.1]\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("ZooKeeper 中的 ls 命令和 linux 命令中的 ls 类似， 这个命令将列出绝对路径 path 下的所有子节点信息（列出 1 级，并不递归）")]),e._v(" "),a("h4",{attrs:{id:"_2-3-6-查看节点状态-stat-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-6-查看节点状态-stat-命令"}},[e._v("#")]),e._v(" 2.3.6. 查看节点状态(stat 命令)")]),e._v(" "),a("p",[e._v("通过 "),a("code",[e._v("stat")]),e._v(" 命令查看节点状态")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[zk: 127.0.0.1:2181(CONNECTED) 10] stat /node1\ncZxid = 0x47\nctime = Sun Jan 20 10:22:59 CST 2019\nmZxid = 0x47\nmtime = Sun Jan 20 10:22:59 CST 2019\npZxid = 0x4a\ncversion = 1\ndataVersion = 0\naclVersion = 0\nephemeralOwner = 0x0\ndataLength = 11\nnumChildren = 1\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br")])]),a("p",[e._v("上面显示的一些信息比如 cversion、aclVersion、numChildren 等等，我在上面 “znode(数据节点)的结构” 这部分已经介绍到。")]),e._v(" "),a("h4",{attrs:{id:"_2-3-7-查看节点信息和状态-ls2-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-7-查看节点信息和状态-ls2-命令"}},[e._v("#")]),e._v(" 2.3.7. 查看节点信息和状态(ls2 命令)")]),e._v(" "),a("p",[a("code",[e._v("ls2")]),e._v(" 命令更像是 "),a("code",[e._v("ls")]),e._v(" 命令和 "),a("code",[e._v("stat")]),e._v(" 命令的结合。 "),a("code",[e._v("ls2")]),e._v(" 命令返回的信息包括 2 部分：")]),e._v(" "),a("ol",[a("li",[e._v("子节点列表")]),e._v(" "),a("li",[e._v("当前节点的 stat 信息。")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[zk: 127.0.0.1:2181(CONNECTED) 7] ls2 /node1\n[node1.1]\ncZxid = 0x47\nctime = Sun Jan 20 10:22:59 CST 2019\nmZxid = 0x47\nmtime = Sun Jan 20 10:22:59 CST 2019\npZxid = 0x4a\ncversion = 1\ndataVersion = 0\naclVersion = 0\nephemeralOwner = 0x0\ndataLength = 11\nnumChildren = 1\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br")])]),a("h4",{attrs:{id:"_2-3-8-删除节点-delete-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-8-删除节点-delete-命令"}},[e._v("#")]),e._v(" 2.3.8. 删除节点(delete 命令)")]),e._v(" "),a("p",[e._v("这个命令很简单，但是需要注意的一点是如果你要删除某一个节点，那么这个节点必须无子节点才行。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[zk: 127.0.0.1:2181(CONNECTED) 3] delete /node1/node1.1\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("在后面我会介绍到 Java 客户端 API 的使用以及开源 ZooKeeper 客户端 ZkClient 和 Curator 的使用。")]),e._v(" "),a("h2",{attrs:{id:"_3-zookeeper-java-客户端-curator-简单使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-zookeeper-java-客户端-curator-简单使用"}},[e._v("#")]),e._v(" 3. ZooKeeper Java 客户端 Curator 简单使用")]),e._v(" "),a("p",[e._v("Curator 是 Netflix 公司开源的一套 ZooKeeper Java 客户端框架，相比于 Zookeeper 自带的客户端 zookeeper 来说，Curator 的封装更加完善，各种 API 都可以比较方便地使用。")]),e._v(" "),a("p",[a("img",{attrs:{src:"http://md7.admin4j.com/blog/20210310120114990.png",alt:"ZooKeeper Java客户端 Curator简单使用"}})]),e._v(" "),a("p",[e._v("下面我们就来简单地演示一下 Curator 的使用吧！")]),e._v(" "),a("p",[e._v("Curator4.0+版本对 ZooKeeper 3.5.x 支持比较好。开始之前，请先将下面的依赖添加进你的项目。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<dependency>\n    <groupId>org.apache.curator</groupId>\n    <artifactId>curator-framework</artifactId>\n    <version>4.2.0</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.curator</groupId>\n    <artifactId>curator-recipes</artifactId>\n    <version>4.2.0</version>\n</dependency>\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("h3",{attrs:{id:"_3-1-连接-zookeeper-客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-连接-zookeeper-客户端"}},[e._v("#")]),e._v(" 3.1. 连接 ZooKeeper 客户端")]),e._v(" "),a("p",[e._v("通过 "),a("code",[e._v("CuratorFrameworkFactory")]),e._v(" 创建 "),a("code",[e._v("CuratorFramework")]),e._v(" 对象，然后再调用 "),a("code",[e._v("CuratorFramework")]),e._v(" 对象的 "),a("code",[e._v("start()")]),e._v(" 方法即可！")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('private static final int BASE_SLEEP_TIME = 1000;\nprivate static final int MAX_RETRIES = 3;\n\n// Retry strategy. Retry 3 times, and will increase the sleep time between retries.\nRetryPolicy retryPolicy = new ExponentialBackoffRetry(BASE_SLEEP_TIME, MAX_RETRIES);\nCuratorFramework zkClient = CuratorFrameworkFactory.builder()\n    // the server to connect to (can be a server list)\n    .connectString("127.0.0.1:2181")\n    .retryPolicy(retryPolicy)\n    .build();\nzkClient.start();\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("p",[e._v("对于一些基本参数的说明：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("baseSleepTimeMs")]),e._v("：重试之间等待的初始时间")]),e._v(" "),a("li",[a("code",[e._v("maxRetries")]),e._v(" ：最大重试次数")]),e._v(" "),a("li",[a("code",[e._v("connectString")]),e._v(" ：要连接的服务器列表")]),e._v(" "),a("li",[a("code",[e._v("retryPolicy")]),e._v(" ：重试策略")])]),e._v(" "),a("h3",{attrs:{id:"_3-2-数据节点的增删改查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-数据节点的增删改查"}},[e._v("#")]),e._v(" 3.2. 数据节点的增删改查")]),e._v(" "),a("h4",{attrs:{id:"_3-2-1-创建节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-创建节点"}},[e._v("#")]),e._v(" 3.2.1. 创建节点")]),e._v(" "),a("p",[e._v("我们在 "),a("a",{attrs:{href:"https://andyoung.blog.csdn.net/article/details/114630812",target:"_blank",rel:"noopener noreferrer"}},[e._v("ZooKeeper 常见概念解读"),a("OutboundLink")],1),e._v(" 中介绍到，我们通常是将 znode 分为 4 大类：")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("持久（PERSISTENT）节点")]),e._v(" ：一旦创建就一直存在即使 ZooKeeper 集群宕机，直到将其删除。")]),e._v(" "),a("li",[a("strong",[e._v("临时（EPHEMERAL）节点")]),e._v(" ：临时节点的生命周期是与 "),a("strong",[e._v("客户端会话（session）")]),e._v(" 绑定的，"),a("strong",[e._v("会话消失则节点消失")]),e._v(" 。并且，临时节点 "),a("strong",[e._v("只能做叶子节点")]),e._v(" ，不能创建子节点。")]),e._v(" "),a("li",[a("strong",[e._v("持久顺序（PERSISTENT_SEQUENTIAL）节点")]),e._v(" ：除了具有持久（PERSISTENT）节点的特性之外， 子节点的名称还具有顺序性。比如 "),a("code",[e._v("/node1/app0000000001")]),e._v(" 、"),a("code",[e._v("/node1/app0000000002")]),e._v(" 。")]),e._v(" "),a("li",[a("strong",[e._v("临时顺序（EPHEMERAL_SEQUENTIAL）节点")]),e._v(" ：除了具备临时（EPHEMERAL）节点的特性之外，子节点的名称还具有顺序性。")])]),e._v(" "),a("p",[e._v("你在使用的 ZooKeeper 的时候，会发现 "),a("code",[e._v("CreateMode")]),e._v(" 类中实际有 7 种 znode 类型 ，但是用的最多的还是上面介绍的 4 种。")]),e._v(" "),a("p",[a("strong",[e._v("a.创建持久化节点")])]),e._v(" "),a("p",[e._v("你可以通过下面两种方式创建持久化的节点。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('//注意:下面的代码会报错，下文说了具体原因\nzkClient.create().forPath("/node1/00001");\nzkClient.create().withMode(CreateMode.PERSISTENT).forPath("/node1/00002");\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("但是，你运行上面的代码会报错，这是因为的父节点"),a("code",[e._v("node1")]),e._v("还未创建。")]),e._v(" "),a("p",[e._v("你可以先创建父节点 "),a("code",[e._v("node1")]),e._v(" ，然后再执行上面的代码就不会报错了。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('zkClient.create().forPath("/node1");\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("更推荐的方式是通过下面这行代码， "),a("strong",[a("code",[e._v("creatingParentsIfNeeded()")]),e._v(" 可以保证父节点不存在的时候自动创建父节点，这是非常有用的。")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('zkClient.create().creatingParentsIfNeeded().withMode(CreateMode.PERSISTENT).forPath("/node1/00001");\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("strong",[e._v("b.创建临时节点")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('zkClient.create().creatingParentsIfNeeded().withMode(CreateMode.EPHEMERAL).forPath("/node1/00001");\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("strong",[e._v("c.创建节点并指定数据内容")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('zkClient.create().creatingParentsIfNeeded().withMode(CreateMode.EPHEMERAL).forPath("/node1/00001","java".getBytes());\nzkClient.getData().forPath("/node1/00001");//获取节点的数据内容，获取到的是 byte数组\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[a("strong",[e._v("d.检测节点是否创建成功")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('zkClient.checkExists().forPath("/node1/00001");//不为null的话，说明节点创建成功\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h4",{attrs:{id:"_3-2-2-删除节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-删除节点"}},[e._v("#")]),e._v(" 3.2.2. 删除节点")]),e._v(" "),a("p",[a("strong",[e._v("a.删除一个子节点")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('zkClient.delete().forPath("/node1/00001");\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("strong",[e._v("b.删除一个节点以及其下的所有子节点")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('zkClient.delete().deletingChildrenIfNeeded().forPath("/node1");\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h4",{attrs:{id:"_3-2-3-获取-更新节点数据内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-获取-更新节点数据内容"}},[e._v("#")]),e._v(" 3.2.3. 获取/更新节点数据内容")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('zkClient.create().creatingParentsIfNeeded().withMode(CreateMode.EPHEMERAL).forPath("/node1/00001","java".getBytes());\nzkClient.getData().forPath("/node1/00001");//获取节点的数据内容\nzkClient.setData().forPath("/node1/00001","c++".getBytes());//更新节点数据内容\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("h4",{attrs:{id:"_3-2-4-获取某个节点的所有子节点路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4-获取某个节点的所有子节点路径"}},[e._v("#")]),e._v(" 3.2.4. 获取某个节点的所有子节点路径")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('List<String> childrenPaths = zkClient.getChildren().forPath("/node1");\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://andyoung.blog.csdn.net/article/details/114630812",target:"_blank",rel:"noopener noreferrer"}},[e._v("【Zookeeper 入门】相关概念总结"),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://hub.docker.com/_/zookeeper",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker 安装 Zookeeper"),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://andyoung.blog.csdn.net/article/details/114640359",target:"_blank",rel:"noopener noreferrer"}},[e._v("ZooKeeper 集群安装与配置"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);