(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{1164:function(s,a,e){"use strict";e.r(a);var t=e(4),r=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"es7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es7"}},[s._v("#")]),s._v(" ES7")]),s._v(" "),a("p",[s._v("ES2016（ES7）中新增了如下特性 👇")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Array.prototype.includes")])]),s._v(" "),a("li",[a("code",[s._v("Exponentiation Operator")])])]),s._v(" "),a("h2",{attrs:{id:"一、array-prototype-includes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、array-prototype-includes"}},[s._v("#")]),s._v(" 一、"),a("code",[s._v("Array.prototype.includes")])]),s._v(" "),a("h3",{attrs:{id:"_1-1-定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-定义"}},[s._v("#")]),s._v(" 1.1 定义")]),s._v(" "),a("p",[a("code",[s._v("includes()")]),s._v("方法用来判断一个数组或字符串中是否包含一个指定的值")]),s._v(" "),a("p",[a("strong",[s._v("返回值：")]),s._v(" 如果包含返回"),a("code",[s._v("true")]),s._v("，否则返回"),a("code",[s._v("false")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"_1-2-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-语法"}},[s._v("#")]),s._v(" 1.2 语法")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("arr.includes(valueToFind)")])]),s._v(" "),a("li",[a("code",[s._v("arr.includes(valueToFind, fromIndex)")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let arr = [1, 2, 3, 4];\narr.includes(3);        // true\narr.includes(5);        // false\narr.includes(3, 1);     // true\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h4",{attrs:{id:"_1-2-1-fromindex-大于等于数组长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-fromindex-大于等于数组长度"}},[s._v("#")]),s._v(" 1.2.1 fromIndex 大于等于数组长度")]),s._v(" "),a("p",[a("strong",[s._v("返回"),a("code",[s._v("false")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("arr.includes(3, 3);     // false\narr.includes(3, 20);    // false\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"_1-2-2-计算出的索引小于-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-计算出的索引小于-0"}},[s._v("#")]),s._v(" 1.2.2 计算出的索引小于 0")]),s._v(" "),a("p",[s._v("如果"),a("code",[s._v("fromIndex")]),s._v("为负值，使用"),a("code",[s._v("数组长度 + fromIndex")]),s._v("计算出的索引作为新的"),a("code",[s._v("fromIndex")]),s._v("，如果新的"),a("code",[s._v("fromIndex")]),s._v("为负值，则搜索整个数组。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("arr.includes(3, -100);  // true\narr.includes(3, -1);    // false\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"二、exponentiation-operator幂运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、exponentiation-operator幂运算"}},[s._v("#")]),s._v(" 二、"),a("code",[s._v("Exponentiation Operator")]),s._v("幂运算")]),s._v(" "),a("p",[s._v("幂运算符"),a("code",[s._v("**")]),s._v("，相当于"),a("code",[s._v("Math.pow()")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("5 ** 2                  // 25\nMath.pow(5, 2)          // 25\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h1",{attrs:{id:"es8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es8"}},[s._v("#")]),s._v(" ES8")]),s._v(" "),a("p",[s._v("ES2017（ES8）新增了以下特性 👇")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Async functions")])]),s._v(" "),a("li",[a("code",[s._v("Object.entries")])]),s._v(" "),a("li",[a("code",[s._v("Object.values")])]),s._v(" "),a("li",[a("code",[s._v("Object.getOwnPropertyDescriptors")])]),s._v(" "),a("li",[a("code",[s._v("Trailing commas")])])]),s._v(" "),a("h2",{attrs:{id:"一、async-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、async-functions"}},[s._v("#")]),s._v(" 一、"),a("code",[s._v("Async functions")])]),s._v(" "),a("h3",{attrs:{id:"_1-1-定义-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-定义-2"}},[s._v("#")]),s._v(" 1.1 定义")]),s._v(" "),a("p",[a("code",[s._v("Async functions")]),s._v(" 是 "),a("code",[s._v("async")]),s._v(" 声明的函数，"),a("code",[s._v("async")]),s._v(" 函数是 "),a("code",[s._v("AsyncFunction")]),s._v(" 构造函数的实例，其中允许使用 "),a("code",[s._v("await")]),s._v(" 关键字。")]),s._v(" "),a("h3",{attrs:{id:"_1-2-语法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-语法-2"}},[s._v("#")]),s._v(" 1.2 语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("async function name([param[, param[, ...param]]]) {\n  // statements\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_1-3-返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-返回值"}},[s._v("#")]),s._v(" 1.3 返回值")]),s._v(" "),a("p",[s._v("一个"),a("code",[s._v("Promise")])]),s._v(" "),a("h3",{attrs:{id:"_1-4-例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-例子"}},[s._v("#")]),s._v(" 1.4 例子")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const promise = () => {\n  console.log('1');\n  return new Promise((resolve, reject) => {\n    resolve('2');\n  });\n};\n\nconst asyncFun = async() => {\n  console.log('3');\n  const test = await promise();\n  console.log('4', test);\n}\n\nasyncFun();                        // 3 1 4 2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h2",{attrs:{id:"二、object-entries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、object-entries"}},[s._v("#")]),s._v(" 二、"),a("code",[s._v("Object.entries")])]),s._v(" "),a("h3",{attrs:{id:"_2-1-返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-返回值"}},[s._v("#")]),s._v(" 2.1 返回值")]),s._v(" "),a("p",[a("code",[s._v("Object.entries()")]),s._v("方法返回一个给定对象自身可枚举属性的键值对数组")]),s._v(" "),a("h3",{attrs:{id:"_2-2-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-语法"}},[s._v("#")]),s._v(" 2.2 语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Object.entries(obj);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_2-3-例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-例子"}},[s._v("#")]),s._v(" 2.3 例子")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let obj = {a: 1, b: 2};\nObject.entries(obj);        // [['a', 1], ['b', 2]]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"三、object-values"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、object-values"}},[s._v("#")]),s._v(" 三、"),a("code",[s._v("Object.values")])]),s._v(" "),a("h3",{attrs:{id:"_3-1-返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-返回值"}},[s._v("#")]),s._v(" 3.1 返回值")]),s._v(" "),a("p",[a("code",[s._v("Object.values()")]),s._v("方法返回一个给定对象自身可枚举属性值的数组")]),s._v(" "),a("h3",{attrs:{id:"_3-2-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-语法"}},[s._v("#")]),s._v(" 3.2 语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Object.values(obj);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_3-3-例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-例子"}},[s._v("#")]),s._v(" 3.3 例子")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let obj = {a: 1, b: 2};\nObject.values(obj);         // [1, 2]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"四、object-getownpropertydescriptors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、object-getownpropertydescriptors"}},[s._v("#")]),s._v(" 四、"),a("code",[s._v("Object.getOwnPropertyDescriptors")])]),s._v(" "),a("h3",{attrs:{id:"_4-1-返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-返回值"}},[s._v("#")]),s._v(" 4.1 返回值")]),s._v(" "),a("p",[a("code",[s._v("Object.getOwnPropertyDescriptors()")]),s._v(" 方法用来获取一个对象的所有自身属性的描述符")]),s._v(" "),a("h3",{attrs:{id:"_4-2-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-语法"}},[s._v("#")]),s._v(" 4.2 语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Object.getOwnPropertyDescriptors(obj);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_4-3-例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-例子"}},[s._v("#")]),s._v(" 4.3 例子")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let obj = {a: 1, b: 2};\nObject.getOwnPropertyDescriptors(obj);   // [a: {configurable: true, enumerable: true, value: 1, writable: true}, b: {configurable: true, enumerable: true, value: 2, writable: true}]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"五、trailing-commas-尾后逗号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、trailing-commas-尾后逗号"}},[s._v("#")]),s._v(" 五、"),a("code",[s._v("Trailing commas")]),s._v(" 尾后逗号")]),s._v(" "),a("h3",{attrs:{id:"_5-1-定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-定义"}},[s._v("#")]),s._v(" 5.1 定义")]),s._v(" "),a("p",[s._v("如果你想要添加新的属性，并且在上一行已经使用了尾后逗号，你可以仅仅添加新的一行，而不需要修改上一行")]),s._v(" "),a("h3",{attrs:{id:"_5-2-注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-注意"}},[s._v("#")]),s._v(" 5.2 注意")]),s._v(" "),a("ul",[a("li",[s._v("JSON 不允许尾后逗号")])]),s._v(" "),a("h3",{attrs:{id:"_5-3-举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-举例"}},[s._v("#")]),s._v(" 5.3 举例")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("字面量中的尾后逗号")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("对象")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let obj = {\n  a: 1,\n  b: 2\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("数组")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let arr = [\n  1,\n]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("函数中的尾后逗号")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("参数定义")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function(x, y) {}\nfunction(x, y,) {}\n(x, y) => {}\n(x, y,) => {}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("函数调用")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("fun(x, y)\nfun(x, y,)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("不合法的尾后逗号")]),s._v(" "),a("p",[s._v("不含参数或者在剩余参数后面加逗号，都是不合法的尾后逗号")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function(,) {}\n(,) => {}\nfn(,)\nfunction(...arg,) {}\n(...arg,) => {}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("解构中的尾后逗号")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let [a, b,] = [1, 2];\nlet {x, y} = {x: 1, y: 2};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("JSON 中的尾后逗号")]),s._v(" "),a("p",[s._v("JSON 中不允许出现尾后逗号")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('JSON.parse("[1, 2, 3,]")  // ❌\nJSON.parse(\'{"a": 1,}\')   // ❌\nJSON.parse("[1, 2, 3]")   // ✅\nJSON.parse(\'{"a": 1}\')    // ✅\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"六、string-prototype-padstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、string-prototype-padstart"}},[s._v("#")]),s._v(" 六、"),a("code",[s._v("String.prototype.padStart()")])]),s._v(" "),a("h3",{attrs:{id:"_6-1-定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-定义"}},[s._v("#")]),s._v(" 6.1 定义")]),s._v(" "),a("p",[a("code",[s._v("padStart()")]),s._v(" 用另一个字符串填充当前字符串。")]),s._v(" "),a("h3",{attrs:{id:"_6-2-返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-返回值"}},[s._v("#")]),s._v(" 6.2 返回值")]),s._v(" "),a("p",[s._v("在原字符串"),a("strong",[s._v("开头")]),s._v("填充指定的填充字符串直到目标长度所形成的新字符串。")]),s._v(" "),a("h3",{attrs:{id:"_6-3-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-语法"}},[s._v("#")]),s._v(" 6.3 语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("str.padStart(targetLength);\nstr.padStart(targetLength, padString);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("targetLength：当前字符串需要填充到的目标长度。如果这个数值小于当前字符串的长度，则返回当前字符串本身。")]),s._v(" "),a("li",[s._v('padString（可选）：填充字符串。如果字符串太长，使填充后的字符串长度超过了目标长度，则只保留最左侧的部分，其他部分会被截断。此参数的默认值为 " "。')])]),s._v(" "),a("h3",{attrs:{id:"_6-4-例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-例子"}},[s._v("#")]),s._v(" 6.4 例子")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('\'abc\'.padStart(10);         // "       abc"\n\'abc\'.padStart(10, "foo");  // "foofoofabc"\n\'abc\'.padStart(6,"123465"); // "123abc"\n\'abc\'.padStart(8, "0");     // "00000abc"\n\'abc\'.padStart(1);          // "abc"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"七、string-prototype-padend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七、string-prototype-padend"}},[s._v("#")]),s._v(" 七、"),a("code",[s._v("String.prototype.padEnd()")])]),s._v(" "),a("h3",{attrs:{id:"_7-1-定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-定义"}},[s._v("#")]),s._v(" 7.1 定义")]),s._v(" "),a("p",[s._v("padEnd() 方法会用一个字符串填充当前字符串（如果需要的话则重复填充）。")]),s._v(" "),a("h3",{attrs:{id:"_7-2-返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-返回值"}},[s._v("#")]),s._v(" 7.2 返回值")]),s._v(" "),a("p",[s._v("返回在原字符串"),a("strong",[s._v("末尾")]),s._v("填充指定的填充字符串直到目标长度所形成的新字符串。")]),s._v(" "),a("h3",{attrs:{id:"_7-3-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-语法"}},[s._v("#")]),s._v(" 7.3 语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("str.padEnd(targetLength)\nstr.padEnd(targetLength, padString)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("targetLength：当前字符串需要填充到的目标长度。如果这个数值小于当前字符串的长度，则返回当前字符串本身。")]),s._v(" "),a("li",[s._v('padString（可选）：填充字符串。如果字符串太长，使填充后的字符串长度超过了目标长度，则只保留最左侧的部分，其他部分会被截断。此参数的缺省值为 " "。')])]),s._v(" "),a("h3",{attrs:{id:"_7-4-例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-例子"}},[s._v("#")]),s._v(" 7.4 例子")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('\'abc\'.padEnd(10);          // "abc       "\n\'abc\'.padEnd(10, "foo");   // "abcfoofoof"\n\'abc\'.padEnd(6, "123456"); // "abc123"\n\'abc\'.padEnd(1);           // "abc"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h1",{attrs:{id:"es9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es9"}},[s._v("#")]),s._v(" ES9")]),s._v(" "),a("p",[s._v("ES2018（ES9）新增了如下特性 👇")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Async iterators")]),s._v(" 异步迭代器")]),s._v(" "),a("li",[a("code",[s._v("Object rest properties")]),s._v(" 剩余属性")]),s._v(" "),a("li",[a("code",[s._v("Object spread properties")]),s._v(" 扩展属性")]),s._v(" "),a("li",[a("code",[s._v("Promise.prototype.finally")])])]),s._v(" "),a("h2",{attrs:{id:"一、async-iterators-异步迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、async-iterators-异步迭代器"}},[s._v("#")]),s._v(" 一、"),a("code",[s._v("Async iterators")]),s._v(" 异步迭代器")]),s._v(" "),a("h3",{attrs:{id:"_1-1-返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-返回值"}},[s._v("#")]),s._v(" 1.1 返回值")]),s._v(" "),a("p",[a("code",[s._v("Async iterator")]),s._v(" 对象的 next() 方法返回一个 "),a("code",[s._v("Promise")]),s._v("，这个 "),a("code",[s._v("Promise")]),s._v(" 的返回值可以被解析成 "),a("code",[s._v("{value, done}")]),s._v(" 的格式，")]),s._v(" "),a("h3",{attrs:{id:"_1-2-语法-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-语法-3"}},[s._v("#")]),s._v(" 1.2 语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("iterator.next().then(({value, done}) => {});\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_1-3-举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-举例"}},[s._v("#")]),s._v(" 1.3 举例")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const asyncIterator = () => {\n  const array = [1, 2];\n  return {\n    next: function() {\n      if(array.length) {\n        return Promise.resolve({\n          value: array.shift(),\n          done: false\n        });\n      }\n      return Promise.resolve({\n        done: true\n      });\n    }\n  }\n}\n\nlet iterator = asyncIterator();\n\nconst test = async() => {\n  await iterator.next().then(console.log);  // {value: 1, done: false}\n  await iterator.next().then(console.log);  // {value: 2, done: false}\n  await iterator.next().then(console.log);  // {done: true}\n}\n\ntest();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("h3",{attrs:{id:"_1-4-可以使用-for-await-of-在循环中异步调用函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-可以使用-for-await-of-在循环中异步调用函数"}},[s._v("#")]),s._v(" 1.4 可以使用 "),a("code",[s._v("for-await-of")]),s._v(" 在循环中异步调用函数")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const promises = [\n  new Promise((resolve) => resolve(1)),\n  new Promise((resolve) => resolve(2)),\n  new Promise((resolve) => resolve(3)),\n];\n\nconst test = async() => {\n  for await (const p of promises) {\n    console.log('p', p);\n  }\n};\n\ntest();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"二、object-rest-properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、object-rest-properties"}},[s._v("#")]),s._v(" 二、"),a("code",[s._v("Object rest properties")])]),s._v(" "),a("h3",{attrs:{id:"_2-1-举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-举例"}},[s._v("#")]),s._v(" 2.1 举例")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let test = {\n  a: 1,\n  b: 2,\n  c: 3,\n  d: 4\n}\n\nlet {a, b, ...rest} = test;\n\nconsole.log(a);               // 1\nconsole.log(b);               // 2\nconsole.log(rest);            // {c: 3, d: 4}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h3",{attrs:{id:"_2-2-注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-注意"}},[s._v("#")]),s._v(" 2.2 注意")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("null")]),s._v(" 不能使用扩展运算符")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let {a, b, ...rest} = null;    // ❌\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"三、object-spread-properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、object-spread-properties"}},[s._v("#")]),s._v(" 三、"),a("code",[s._v("Object spread properties")])]),s._v(" "),a("h3",{attrs:{id:"_3-1-举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-举例"}},[s._v("#")]),s._v(" 3.1 举例")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let test = {\n  a: 1,\n  b: 2\n}\nlet result = {c: 3, ...test};\nconsole.log(result);             // {c: 3, a: 1, b: 2}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let test = null;\nlet result = {c: 3, ...test};    // {c: 3}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"四、promise-prototype-finally"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、promise-prototype-finally"}},[s._v("#")]),s._v(" 四、"),a("code",[s._v("Promise.prototype.finally")])]),s._v(" "),a("h3",{attrs:{id:"_4-1-定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-定义"}},[s._v("#")]),s._v(" 4.1 定义")]),s._v(" "),a("p",[s._v("在"),a("code",[s._v("Promise")]),s._v("结束的时候，不管是结果是"),a("code",[s._v("resolved")]),s._v("还是"),a("code",[s._v("rejected")]),s._v("，都会调用"),a("code",[s._v("finally")]),s._v("中的方法")]),s._v(" "),a("p",[a("code",[s._v("finally")]),s._v("中的回调函数不接受任何参数")]),s._v(" "),a("h3",{attrs:{id:"_4-2-返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-返回值"}},[s._v("#")]),s._v(" 4.2 返回值")]),s._v(" "),a("p",[s._v("一个 Promise")]),s._v(" "),a("h3",{attrs:{id:"_4-3-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-语法"}},[s._v("#")]),s._v(" 4.3 语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const promise = new Promise((resolve, reject) => {\n  resolve('resolved');\n  reject('rejectd');\n})\n\npromise.then((res) => {\n  console.log(res);\n}).finally(() => {\n  console.log('finally')\n});\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"_4-4-举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-举例"}},[s._v("#")]),s._v(" 4.4 举例")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const promise = new Promise((resolve, reject) => {\n  resolve(1);\n  reject(2);\n});\n\nconst test = () => {\n  console.log(3);\n  promise.then((res) => {\n    console.log(4, res);\n  }).catch(err => {\n    console.log(5, err);\n  }).finally(() => {\n    console.log(6);\n  });\n};\n\ntest();  // 3 4 1 6\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h1",{attrs:{id:"es10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es10"}},[s._v("#")]),s._v(" ES10")]),s._v(" "),a("p",[s._v("ES2019（ES10）新增了如下新特性 👇：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Array.prototype.{flat, flatMap}")]),s._v("扁平化嵌套数组")]),s._v(" "),a("li",[a("code",[s._v("Object.fromEntries")])]),s._v(" "),a("li",[a("code",[s._v("String.prototype.{trimStart, trimEnd}")])]),s._v(" "),a("li",[a("code",[s._v("Symbol.prototype.description")])]),s._v(" "),a("li",[a("code",[s._v("Optional catch binding")])]),s._v(" "),a("li",[s._v("Array.prototype.sort() is now required to be stable")])]),s._v(" "),a("h2",{attrs:{id:"一、array-prototype-flat-flatmap-扁平化嵌套数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、array-prototype-flat-flatmap-扁平化嵌套数组"}},[s._v("#")]),s._v(" 一、"),a("code",[s._v("Array.prototype.{flat, flatMap}")]),s._v(" 扁平化嵌套数组")]),s._v(" "),a("h3",{attrs:{id:"_1-1-array-prototype-flat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-array-prototype-flat"}},[s._v("#")]),s._v(" 1.1 Array.prototype.flat")]),s._v(" "),a("h4",{attrs:{id:"_1-1-1-定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-定义"}},[s._v("#")]),s._v(" 1.1.1 定义")]),s._v(" "),a("p",[a("code",[s._v("flat()")]),s._v("方法会按照一个可指定的深度遍历递归"),a("strong",[s._v("数组")]),s._v("，并将所有元素与遍历到的子数组中的元素合并为一个新数组返回。")]),s._v(" "),a("h4",{attrs:{id:"_1-1-2-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-语法"}},[s._v("#")]),s._v(" 1.1.2 语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("arr.flat([depth]);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("depth")]),s._v(" 是数组遍历的深度，默认是 1。")])]),s._v(" "),a("h4",{attrs:{id:"_1-1-3-返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-返回值"}},[s._v("#")]),s._v(" 1.1.3 返回值")]),s._v(" "),a("p",[s._v("一个新数组，不会改变旧数组。")]),s._v(" "),a("h4",{attrs:{id:"_1-1-4-举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-4-举例"}},[s._v("#")]),s._v(" 1.1.4 举例")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const arr = [1, 2, [[[[3, 4]]]]];\n\narr.flat();          // [1, 2, [[[3, 4]]]]\narr.flat(3);         // [1, 2, [3, 4]]\narr.flat(-1);        // [1, 2, [[[[3, 4]]]]]\narr.flat(Infinity);  // [1, 2, 3, 4]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h4",{attrs:{id:"_1-1-5-注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-5-注意"}},[s._v("#")]),s._v(" 1.1.5 注意")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("flat()")]),s._v("会移除数组中的空项")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let arr = [1, 2, , , 3];\narr.flat();           // [1, 2, 3]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"_1-1-6-替换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-6-替换"}},[s._v("#")]),s._v(" 1.1.6 替换")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("reduce")]),s._v("与"),a("code",[s._v("contact")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let arr = [1, 2, [3, 4]];\narr.reduce((arr, val) => arr.concat(val), []);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("...")]),s._v(" 扩展运算符与"),a("code",[s._v("contact")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let arr = [1, 2, [3, 4]];\n[].contact(...arr);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal_Objects%2FArray%2Fflat",title:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/flat",target:"_blank",rel:"noopener noreferrer"}},[s._v("更多替换方式请查看 MDN"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"_1-2-array-prototype-flatmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-array-prototype-flatmap"}},[s._v("#")]),s._v(" 1.2 Array.prototype.flatMap")]),s._v(" "),a("h4",{attrs:{id:"_1-2-1-定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-定义"}},[s._v("#")]),s._v(" 1.2.1 定义")]),s._v(" "),a("p",[a("code",[s._v("flatMap()")]),s._v("方法首先使用映射函数映射数组（"),a("strong",[s._v("深度值为 1")]),s._v("）的每个元素，然后将结果压缩成一个新数组。")]),s._v(" "),a("h4",{attrs:{id:"_1-2-2-返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-返回值"}},[s._v("#")]),s._v(" 1.2.2 返回值")]),s._v(" "),a("p",[s._v("一个新数组，并且每个元素都是回调函数的结果。")]),s._v(" "),a("h4",{attrs:{id:"_1-2-3-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-语法"}},[s._v("#")]),s._v(" 1.2.3 语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("arr.flatMap(function callback(currentVal[, index[, array]]) {\n\n}[, thisArg])\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("callback: 可以生成一个新数组所调用的函数\n"),a("ul",[a("li",[s._v("currentVal: 当前数组在处理的元素")]),s._v(" "),a("li",[s._v("index: 可选，正在处理的元素索引")]),s._v(" "),a("li",[s._v("array: 可选，被调用的数组")])])]),s._v(" "),a("li",[s._v("thisArg: 执行 callback 函数时使用的 this 值")])]),s._v(" "),a("h4",{attrs:{id:"_1-2-4-举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-4-举例"}},[s._v("#")]),s._v(" 1.2.4 举例")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('let arr = [\'My name\', \'is\', \'\', \'Lisa\'];\nlet newArr1 = arr.flatMap(cur => cur.split(\' \'));\nlet newArr2 = arr.map(cur => cur.split(\' \'));\nconsole.log(newArr1); // ["My", "name", "is", "", "Lisa"]\nconsole.log(newArr2); // [["My", "name"], ["is"], [""], ["Lisa"]]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"二、object-fromentries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、object-fromentries"}},[s._v("#")]),s._v(" 二、"),a("code",[s._v("Object.fromEntries")])]),s._v(" "),a("h3",{attrs:{id:"_2-1-定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-定义"}},[s._v("#")]),s._v(" 2.1 定义")]),s._v(" "),a("p",[a("code",[s._v("fromEntries()")]),s._v(" 方法会把键值对列表转换成一个对象")]),s._v(" "),a("h3",{attrs:{id:"_2-2-返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-返回值"}},[s._v("#")]),s._v(" 2.2 返回值")]),s._v(" "),a("p",[s._v("一个新的对象")]),s._v(" "),a("h3",{attrs:{id:"_2-3-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-语法"}},[s._v("#")]),s._v(" 2.3 语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Object.fromEntries(iterable)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("iterable: Array、Map 等可迭代对象")])]),s._v(" "),a("h3",{attrs:{id:"_2-4-举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-举例"}},[s._v("#")]),s._v(" 2.4 举例")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let map = new Map([['a', 1], ['b', 2]]);\nlet mapToObj = Object.fromEntries(map);\nconsole.log(mapToObj);  // {a: 1, b: 2}\n\nlet arr = [['a', 1], ['b', 2]];\nlet arrToObj = Object.fromEntries(arr);\nconsole.log(arrToObj);   // {a: 1, b: 2}\n\nlet obj = {a: 1, b: 2};\nlet newObj = Object.fromEntries(\n  Object.entries(obj).map(\n    ([key, val]) => [key, val * 2]\n  )\n);\nconsole.log(newObj);   // {a: 2, b: 4}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h2",{attrs:{id:"三、string-prototype-trimstart-trimend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、string-prototype-trimstart-trimend"}},[s._v("#")]),s._v(" 三、"),a("code",[s._v("String.prototype.{trimStart, trimEnd}")])]),s._v(" "),a("h3",{attrs:{id:"_3-1-string-prototype-trimstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-string-prototype-trimstart"}},[s._v("#")]),s._v(" 3.1 "),a("code",[s._v("String.prototype.trimStart")])]),s._v(" "),a("h4",{attrs:{id:"_3-1-1-定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-定义"}},[s._v("#")]),s._v(" 3.1.1 定义")]),s._v(" "),a("p",[a("code",[s._v("trimStart()")]),s._v(" 方法用来删除字符串的开头的空白字符。")]),s._v(" "),a("p",[a("code",[s._v("trimLeft()")]),s._v(" 是它的别名。")]),s._v(" "),a("h4",{attrs:{id:"_3-1-2-返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-返回值"}},[s._v("#")]),s._v(" 3.1.2 返回值")]),s._v(" "),a("p",[s._v("一个新的字符串，这个字符串左边的空格已经被去除掉了。")]),s._v(" "),a("h4",{attrs:{id:"_3-1-3-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-语法"}},[s._v("#")]),s._v(" 3.1.3 语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("str.trimStart();\nstr.trimLeft();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"_3-1-4-🌰-举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4-🌰-举例"}},[s._v("#")]),s._v(" 3.1.4 🌰 举例")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let str = '    a b cd  ';\nstr.trimStart();   // 'a b cd  '\nstr.trimLeft();    // 'a b cd  '\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_3-2-string-prototype-trimend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-string-prototype-trimend"}},[s._v("#")]),s._v(" 3.2 "),a("code",[s._v("String.prototype.trimEnd")])]),s._v(" "),a("h4",{attrs:{id:"_3-2-1-定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-定义"}},[s._v("#")]),s._v(" 3.2.1 定义")]),s._v(" "),a("p",[a("code",[s._v("trimEnd()")]),s._v(" 方法用来删除字符串末尾的空白字符。 "),a("code",[s._v("trimRight()")]),s._v(" 是它的别名")]),s._v(" "),a("h4",{attrs:{id:"_3-2-2-返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-返回值"}},[s._v("#")]),s._v(" 3.2.2 返回值")]),s._v(" "),a("p",[s._v("一个新的字符串，这个字符串右边的空格已经被去除了")]),s._v(" "),a("h4",{attrs:{id:"_3-2-3-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-语法"}},[s._v("#")]),s._v(" 3.2.3 语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("str.trimEnd()\nstr.trimRight()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"_3-2-4-举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4-举例"}},[s._v("#")]),s._v(" 3.2.4 举例")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let str = '    a b cd  ';\nstr.trimEnd();                           // '    a b cd'\nstr.trimRight();                         // '    a b cd'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"四、symbol-prototype-description"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、symbol-prototype-description"}},[s._v("#")]),s._v(" 四、"),a("code",[s._v("Symbol.prototype.description")])]),s._v(" "),a("h3",{attrs:{id:"_4-1-定义-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-定义-2"}},[s._v("#")]),s._v(" 4.1 定义")]),s._v(" "),a("p",[a("code",[s._v("description")]),s._v(" 是一个只读属性")]),s._v(" "),a("h3",{attrs:{id:"_4-2-返回值-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-返回值-2"}},[s._v("#")]),s._v(" 4.2 返回值")]),s._v(" "),a("p",[s._v("它返回 Symbol 对象的可选描述的字符串")]),s._v(" "),a("h3",{attrs:{id:"_4-3-语法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-语法-2"}},[s._v("#")]),s._v(" 4.3 语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Symbol('myDescription').description;\nSymbol.iterator.description;\nSymbol.for('foo').description;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_4-4-举例-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-举例-2"}},[s._v("#")]),s._v(" 4.4 举例")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Symbol('foo').description;      // 'foo'\nSymbol().description;           // undefined\nSymbol.for('foo').description;  // 'foo'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"五、optional-catch-binding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、optional-catch-binding"}},[s._v("#")]),s._v(" 五、"),a("code",[s._v("Optional catch binding")])]),s._v(" "),a("p",[s._v("可选的捕获绑定，允许省略 catch 绑定和它后面的圆括号")]),s._v(" "),a("p",[s._v("以前的用法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("try {\n\n} catch(err) {\n  console.log('err', err);\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("ES10 的用法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("try {\n\n} catch {\n\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"六、json-stringify-的增强力"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、json-stringify-的增强力"}},[s._v("#")]),s._v(" 六、"),a("code",[s._v("JSON.stringify()")]),s._v(" 的增强力")]),s._v(" "),a("p",[a("code",[s._v("JSON.stringify()")]),s._v(" 在 ES10 修复了对于一些超出范围的 Unicode 展示错误的问题，所以遇到 0xD800-0xDFF 之内的字符会因为无法编码成 UTF-8 进而导致显示错误。在 ES10 它会用转义字符的方式来处理这部分字符而非编码的方式，这样就会正常显示了。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("JSON.stringify('😊'); // '\"😊\"'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"七、修订-function-prototype-tostring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七、修订-function-prototype-tostring"}},[s._v("#")]),s._v(" 七、修订 "),a("code",[s._v("Function.prototype.toString()")])]),s._v(" "),a("p",[s._v("以前的 toString 方法来自 "),a("code",[s._v("Object.prototype.toString()")]),s._v("，现在 的 "),a("code",[s._v("Function.prototype.toString()")]),s._v(" 方法返回一个表示当前函数源代码的字符串。以前只会返回这个函数，不会包含空格、注释等。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function foo() {\n    // es10新特性\n    console.log('imooc')\n}\nconsole.log(foo.toString());\n// function foo() {\n//     // es10新特性\n//     console.log('imooc')\n// }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h1",{attrs:{id:"es11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es11"}},[s._v("#")]),s._v(" ES11")]),s._v(" "),a("p",[s._v("ES2020(ES11) 新增了如下新特性 👇：")]),s._v(" "),a("ul",[a("li",[s._v("空值合并运算符（Nullish coalescing Operator）")]),s._v(" "),a("li",[s._v("可选链 Optional chaining")]),s._v(" "),a("li",[s._v("globalThis")]),s._v(" "),a("li",[s._v("BigInt")]),s._v(" "),a("li",[a("code",[s._v("String.prototype.matchAll()")])]),s._v(" "),a("li",[a("code",[s._v("Promise.allSettled()")])]),s._v(" "),a("li",[s._v("Dynamic import（按需 import）")])]),s._v(" "),a("h2",{attrs:{id:"一、空值合并运算符-nullish-coalescing-operator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、空值合并运算符-nullish-coalescing-operator"}},[s._v("#")]),s._v(" 一、空值合并运算符（Nullish coalescing Operator）")]),s._v(" "),a("h3",{attrs:{id:"_1-1-空值合并操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-空值合并操作符"}},[s._v("#")]),s._v(" 1.1 空值合并操作符（"),a("code",[s._v("??")]),s._v("）")]),s._v(" "),a("p",[a("strong",[s._v("空值合并操作符")]),s._v("（"),a("code",[s._v("??")]),s._v("）是一个逻辑操作符，当左边的操作数为 "),a("code",[s._v("null")]),s._v(" 或 "),a("code",[s._v("undefined")]),s._v(" 的时候，返回其右侧操作符，否则返回左侧操作符。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("undefined ?? 'foo'  // 'foo'\nnull ?? 'foo'  // 'foo'\n'foo' ?? 'bar' // 'foo'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_1-2-逻辑或操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-逻辑或操作符"}},[s._v("#")]),s._v(" 1.2 逻辑或操作符（"),a("code",[s._v("||")]),s._v("）")]),s._v(" "),a("p",[a("strong",[s._v("逻辑或操作符")]),s._v("（"),a("code",[s._v("||")]),s._v("），会在左侧操作数为假值时返回右侧操作数，也就是说如果使用 "),a("code",[s._v("||")]),s._v(" 来为某些变量设置默认值，可能会出现意料之外的情况。比如 0、''、NaN、false：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("0 || 1  // 1\n0 ?? 1  // 0\n\n'' || 'bar'  // 'bar'\n'' ?? 'bar'  // ''\n\nNaN || 1  // 1\nNaN ?? 1  // NaN\n\nfalse || 'bar'  // 'bar'\nfalse ?? 'bar'  // false\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"_1-3-注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-注意"}},[s._v("#")]),s._v(" 1.3 注意")]),s._v(" "),a("p",[s._v("不可以将 "),a("code",[s._v("??")]),s._v(" 与 AND（"),a("code",[s._v("&&")]),s._v("）OR（"),a("code",[s._v("||")]),s._v("）一起使用，会报错。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('null || undefined ?? "foo"; // 抛出 SyntaxError\ntrue || undefined ?? "foo"; // 抛出 SyntaxError\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"二、可选链-optional-chaining"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、可选链-optional-chaining"}},[s._v("#")]),s._v(" 二、可选链 Optional chaining")]),s._v(" "),a("h3",{attrs:{id:"_2-1-介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-介绍"}},[s._v("#")]),s._v(" 2.1 介绍")]),s._v(" "),a("p",[a("strong",[s._v("可选链操作符")]),s._v("（"),a("code",[s._v("?.")]),s._v("）允许读取位于连接对象链深处的属性的值，而不必明确验证链中的每个引用都是否有效。"),a("code",[s._v("?.")]),s._v(" 操作符的功能类似于"),a("code",[s._v(".")]),s._v("链式操作符，不同之处在于，在引用为 "),a("code",[s._v("null")]),s._v(" 或 "),a("code",[s._v("undefined")]),s._v(" 时不会报错，该链路表达式返回值为 "),a("code",[s._v("undefined")]),s._v("。")]),s._v(" "),a("p",[s._v("以前的写法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const street = user && user.address && user.address.street;\nconst num = user && user.address && user.address.getNum && user.address.getNum();\nconsole.log(street, num);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("ES11 的写法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const street2 = user?.address?.street;\nconst num2 = user?.address?.getNum?.();\nconsole.log(street2, num2);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_2-2-注意-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-注意-2"}},[s._v("#")]),s._v(" 2.2 注意")]),s._v(" "),a("p",[s._v("可选链不能用于赋值：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let object = {};\nobject?.property = 1; // Uncaught SyntaxError: Invalid left-hand side in assignment\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"三、globalthis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、globalthis"}},[s._v("#")]),s._v(" 三、globalThis")]),s._v(" "),a("p",[s._v("以前，在 Web 中，可以通过 "),a("code",[s._v("window")]),s._v("、"),a("code",[s._v("self")]),s._v(" 取到全局对象，在 node.js 中，必须使用 "),a("code",[s._v("global")]),s._v("。")]),s._v(" "),a("p",[s._v("在松散模式下，可以在函数中返回 "),a("code",[s._v("this")]),s._v(" 来获取全局对象，但是在严格模式和模块环境下，"),a("code",[s._v("this")]),s._v(" 会返回 "),a("code",[s._v("undefined")]),s._v("。")]),s._v(" "),a("p",[s._v("以前要获取全局对象，可以定义一个函数：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const getGlobal = () => {\n    if (typeof self !== 'undefined') {\n        return self\n    }\n    if (typeof window !== 'undefined') {\n        return window\n    }\n    if (typeof global !== 'undefined') {\n        return global\n    }\n    throw new Error('无法找到全局对象')\n}\n\nconst globals = getGlobal()\nconsole.log(globals)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("现在 "),a("code",[s._v("globalThis")]),s._v(" 提供了一个标准的方式来获取不同环境下的全局对象自身值。")]),s._v(" "),a("h2",{attrs:{id:"四、bigint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、bigint"}},[s._v("#")]),s._v(" 四、BigInt")]),s._v(" "),a("p",[s._v("BigInt 是一种内置对象，用来创建比 2^53 - 1（Number 可创建的最大数字） 更大的整数。可以用来表示任意大的"),a("strong",[s._v("整数")])]),s._v(" "),a("h3",{attrs:{id:"_4-1-如何定义一个-bigint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-如何定义一个-bigint"}},[s._v("#")]),s._v(" 4.1 如何定义一个 BigInt")]),s._v(" "),a("ul",[a("li",[s._v("在一个整数字面量后面加 n，例如 "),a("code",[s._v("10n")])]),s._v(" "),a("li",[s._v("调用函数 "),a("code",[s._v("BigInt()")]),s._v(" 并传递一个整数值或字符串值，例如 "),a("code",[s._v("BigInt(10)")])])]),s._v(" "),a("h3",{attrs:{id:"_4-2-bigint-的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-bigint-的特点"}},[s._v("#")]),s._v(" 4.2 BigInt 的特点")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("BigInt 不能用于 Math 对象中的方法；")])]),s._v(" "),a("li",[a("p",[s._v("BigInt 不能与任何 Number 实例混合运算，两者必须转换成同一种类型。但是需要注意，BigInt 在转换成 Number 时可能会丢失精度。")])]),s._v(" "),a("li",[a("p",[s._v("当使用 BigInt 时，带小数的运算会被向下取整")])]),s._v(" "),a("li",[a("p",[s._v("BigInt 和 Number 不是严格相等，但是宽松相等")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("0n === 0 // false\n0n == 0  // true\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("BigInt 和 Number 可以比较")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("2n > 2   // false\n2n > 1   // true\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("BigInt 和 Number 可以混在一个数组中排序")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const mixed = [4n, 6, -12n, 10, 4, 0, 0n];\nmixed.sort();  // [-12n, 0, 0n, 10, 4n, 4, 6]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("被 Object 包装的 BigInt 使用 object 的比较规则进行比较，只用同一个对象比较时才相等")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("0n === Object(0n); // false\nObject(0n) === Object(0n); // false\nconst o = Object(0n);\no === o // true\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"_4-3-bigint-的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-bigint-的方法"}},[s._v("#")]),s._v(" 4.3 BigInt 的方法")]),s._v(" "),a("h4",{attrs:{id:"_4-3-1-bigint-asintn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-bigint-asintn"}},[s._v("#")]),s._v(" 4.3.1 BigInt.asIntN()")]),s._v(" "),a("p",[s._v("将 BigInt 值转换为一个 -2^(width-1) 与 2^(width-1) - 1 之间的有符号整数。")]),s._v(" "),a("h4",{attrs:{id:"_4-3-2-bigint-asuintn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-bigint-asuintn"}},[s._v("#")]),s._v(" 4.3.2 BigInt.asUintN()")]),s._v(" "),a("p",[s._v("将一个 BigInt 值转换为 0 与 2^(width) - 1 之间的无符号整数。")]),s._v(" "),a("h4",{attrs:{id:"_4-3-3-bigint-prototype-tolocalestring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-3-bigint-prototype-tolocalestring"}},[s._v("#")]),s._v(" 4.3.3 BigInt.prototype.toLocaleString()")]),s._v(" "),a("p",[s._v("返回此数字的 language-sensitive 形式的字符串。覆盖 "),a("code",[s._v("Object.prototype.toLocaleString()")]),s._v(" 方法。")]),s._v(" "),a("h4",{attrs:{id:"_4-3-4-bigint-prototype-tostring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-4-bigint-prototype-tostring"}},[s._v("#")]),s._v(" 4.3.4 BigInt.prototype.toString()")]),s._v(" "),a("p",[s._v("返回以指定基数 (base) 表示指定数字的字符串。覆盖 "),a("code",[s._v("Object.prototype.toString()")]),s._v(" 方法。")]),s._v(" "),a("h4",{attrs:{id:"_4-3-5-bigint-prototype-valueof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-5-bigint-prototype-valueof"}},[s._v("#")]),s._v(" 4.3.5 BigInt.prototype.valueOf()")]),s._v(" "),a("p",[s._v("返回指定对象的基元值。覆盖 "),a("code",[s._v("Object.prototype.valueOf()")]),s._v(" 方法。")]),s._v(" "),a("h2",{attrs:{id:"五、string-prototype-matchall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、string-prototype-matchall"}},[s._v("#")]),s._v(" 五、"),a("code",[s._v("String.prototype.matchAll()")])]),s._v(" "),a("p",[s._v("返回一个包含所有匹配正则表达式的结果及分组捕获组的迭代器。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('const regexp = /t(e)(st(\\d?))/g;\nconst str = \'test1test2\';\n\nconst array = [...str.matchAll(regexp)];\nconsole.log(array[0]);  // ["test1", "e", "st1", "1"]\nconsole.log(array[1]); // ["test2", "e", "st2", "2"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"六、promise-allsettled"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、promise-allsettled"}},[s._v("#")]),s._v(" 六、"),a("code",[s._v("Promise.allSettled()")])]),s._v(" "),a("p",[s._v("类方法，返回一个在所有给定的 promise 都已经 fulfilled 或 rejected 后的 promise，并带有一个对象数组，每个对象表示对应的 promise 结果。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Promise.allSettled([\n  Promise.resolve(33),\n  new Promise((resolve) => setTimeout(() => resolve(66), 0)),\n  99,\n  Promise.reject(new Error(\"an error\")),\n]).then((values) => console.log(values));\n\n// [\n//   { status: 'fulfilled', value: 33 },\n//   { status: 'fulfilled', value: 66 },\n//   { status: 'fulfilled', value: 99 },\n//   { status: 'rejected', reason: Error: an error }\n// ]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"七、dynamic-import-按需-import"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七、dynamic-import-按需-import"}},[s._v("#")]),s._v(" 七、Dynamic import（按需 import）")]),s._v(" "),a("p",[a("code",[s._v("import")]),s._v(" 可以在需要的时候，再加载某个模块。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("button.addEventListener('click', event => {\n  import('./dialogBox.js')\n  .then(dialogBox => {\n    dialogBox.open();\n  })\n  .catch(error => {\n    /* Error handling */\n  })\n});\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h1",{attrs:{id:"es12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es12"}},[s._v("#")]),s._v(" ES12")]),s._v(" "),a("p",[s._v("ES 2021（ES12）新增了如下新特性 👇：")]),s._v(" "),a("ul",[a("li",[s._v("逻辑运算符和赋值表达式（&&=，||=，??=）")]),s._v(" "),a("li",[a("code",[s._v("String.prototype.replaceAll()")])]),s._v(" "),a("li",[s._v("数字分隔符")]),s._v(" "),a("li",[a("code",[s._v("Promise.any")])])]),s._v(" "),a("h2",{attrs:{id:"一、逻辑运算符和赋值表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、逻辑运算符和赋值表达式"}},[s._v("#")]),s._v(" 一、逻辑运算符和赋值表达式（&&=，||=，??=）")]),s._v(" "),a("h3",{attrs:{id:"_1-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1"}},[s._v("#")]),s._v(" 1.1 &&=")]),s._v(" "),a("p",[s._v("逻辑与赋值运算符 "),a("code",[s._v("x &&= y")]),s._v(" 等价于 "),a("code",[s._v("x && (x=y)")]),s._v("：意思是当 x 为真时，x = y。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let a = 1;\nlet b = 0;\n\na &&= 2;\nconsole.log(a); // 2\n\nb &&= 2;\nconsole.log(b);  // 0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"_1-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2"}},[s._v("#")]),s._v(" 1.2 ||=")]),s._v(" "),a("p",[s._v("逻辑或赋值运算符 "),a("code",[s._v("x ||= y")]),s._v(" 等价于 "),a("code",[s._v("x || (x = y)")]),s._v("：意思是仅在 x 为 false 的时候，x = y。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const a = { duration: 50, title: '' };\n\na.duration ||= 10;\nconsole.log(a.duration);  // 50\n\na.title ||= 'title is empty.';\nconsole.log(a.title);  // \"title is empty\"\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"_1-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3"}},[s._v("#")]),s._v(" 1.3 ??=")]),s._v(" "),a("p",[s._v("逻辑空赋值运算符 "),a("code",[s._v("x ??= y")]),s._v(" 等价于 "),a("code",[s._v("x ?? (x = y)")]),s._v("：意思是仅在 x 为 null 或 undefined 的时候，x = y。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const a = { duration: 50 };\n\na.duration ??= 10;\nconsole.log(a.duration);  // 50\n\na.speed ??= 25;\nconsole.log(a.speed);  // 25\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"二、string-prototype-replaceall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、string-prototype-replaceall"}},[s._v("#")]),s._v(" 二、"),a("code",[s._v("String.prototype.replaceAll()")])]),s._v(" "),a("p",[s._v("返回一个新字符串，字符串中所有满足 pattern 的部分都会被 replacement 替换掉。原字符串保持不变。")]),s._v(" "),a("ul",[a("li",[s._v("pattern 可以是一个字符串或 RegExp；")]),s._v(" "),a("li",[s._v("replacement 可以是一个字符串或一个在每次被匹配被调用的函数。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("'aabbcc'.replaceAll('b', '.');  // 'aa..cc'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("使用正则表达式搜索值时，必须是全局的：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("'aabbcc'.replaceAll(/b/, '.');  // TypeError: replaceAll must be called with a global RegExp\n\n'aabbcc'.replaceAll(/b/g, '.');  // \"aa..cc\"\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"三、数字分隔符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、数字分隔符"}},[s._v("#")]),s._v(" 三、数字分隔符")]),s._v(" "),a("p",[s._v("ES12 允许 JavaScript 的数值使用下划线（_）作为分隔符，但是没有规定间隔的位数：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("123_00\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("小数和科学记数法也可以使用分隔符：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("0.1_23\n1e10_00\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("⚠️ 注意：")]),s._v(" "),a("ul",[a("li",[s._v("不能放在数值的最前面和最后面；")]),s._v(" "),a("li",[s._v("不能将两个及两个以上的分隔符连在一起；")]),s._v(" "),a("li",[s._v("小数点的前后不能有分隔符；")]),s._v(" "),a("li",[s._v("科学记数法里，e 或 E 前后不能有分隔符。")])]),s._v(" "),a("h2",{attrs:{id:"四、promise-any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、promise-any"}},[s._v("#")]),s._v(" 四、"),a("code",[s._v("Promise.any")])]),s._v(" "),a("p",[s._v("方法接受一组 Promise 实例作为参数，包装成一个新的 Promise 实例返回。")]),s._v(" "),a("p",[s._v("只要参数实例有一个变成 fulfilled 状态，包装实例就会变成 fulfilled 状态；如果所有参数实例都变成 rejected 状态，包装实例就会变成 rejected 状态。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('const promise1 = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve("promise1");\n      //  reject("error promise1 ");\n    }, 3000);\n  });\n};\nconst promise2 = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve("promise2");\n      // reject("error promise2 ");\n    }, 1000);\n  });\n};\nconst promise3 = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve("promise3");\n      // reject("error promise3 ");\n    }, 2000);\n  });\n};\nPromise.any([promise1(), promise2(), promise3()])\n  .then((first) => {\n    // 只要有一个请求成功 就会返回第一个请求成功的\n    console.log(first); // 会返回promise2\n  })\n  .catch((error) => {\n    // 所有三个全部请求失败 才会来到这里\n    console.log("error", error);\n  });\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('Promise.any([promise1(), promise2(), promise3()])\n  .then((first) => {\n    // 只要有一个请求成功 就会返回第一个请求成功的\n    console.log(first); // 会返回promise2\n  })\n  .catch((error) => {\n    // 所有三个全部请求失败 才会来到这里\n    console.log("error", error);\n  });\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h1",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),a("ul",[a("li",[s._v("https://juejin.cn/post/7243677232827891773")]),s._v(" "),a("li",[s._v("https://mp.weixin.qq.com/s/f5XzfKGEJxjrxi3whLZDtw")])])])}),[],!1,null,null,null);a.default=r.exports}}]);