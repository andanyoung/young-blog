(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{1400:function(s,n,e){"use strict";e.r(n);var a=e(4),t=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"背景介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#背景介绍"}},[s._v("#")]),s._v(" 背景介绍")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("最近有一个大数据量插入的操作入库的业务场景, 需要先做一些其他修改操作, 然后在执行插入操作, 由于插入数据可能会很多, 用到多线程去拆分数据并行处理来提高响应时间, 如果有一个线程执行失败, 则全部回滚.")])]),s._v(" "),n("li",[n("p",[s._v("在 spring 中可以使用 Transactional 注解去控制事务, 使出现异常时会进行回滚, 在多线程中, 这个注解则不会生效, 如果主线程需要先执行一些修改数据库的操作, 当子线程在进行处理出现异常时, 主线程修改的数据则不会回滚, 导致数据错误。")])]),s._v(" "),n("li",[n("p",[s._v("下面用一个简单示例演示多线程事务.")])])]),s._v(" "),n("h2",{attrs:{id:"技术方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#技术方案"}},[s._v("#")]),s._v(" 技术方案")]),s._v(" "),n("ol",[n("li",[s._v("使用 sqlSession 手动控制事务提交的方式，利用单个链接。本文方案")]),s._v(" "),n("li",[s._v("使用 "),n("code",[s._v("PlatformTransactionManager")]),s._v(" 方案。方案链接"),n("a",{attrs:{href:"https://blog.csdn.net/m0_53157173/article/details/127423286",target:"_blank",rel:"noopener noreferrer"}},[s._v("Spring 在多线程环境下如何确保事务一致性"),n("OutboundLink")],1)])]),s._v(" "),n("h2",{attrs:{id:"公用的类和方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#公用的类和方法"}},[s._v("#")]),s._v(" 公用的类和方法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\t/**\n     * 平均拆分list方法.\n     * @param source\n     * @param n\n     * @param <T>\n     * @return\n     */\n    public static <T> List<List<T>> averageAssign(List<T> source,int n){\n        List<List<T>> result=new ArrayList<List<T>>();\n        int remaider=source.size()%n;\n        int number=source.size()/n;\n        int offset=0;//偏移量\n        for(int i=0;i<n;i++){\n            List<T> value=null;\n            if(remaider>0){\n                value=source.subList(i*number+offset, (i+1)*number+offset+1);\n                remaider--;\n                offset++;\n            }else{\n                value=source.subList(i*number+offset, (i+1)*number+offset);\n            }\n            result.add(value);\n        }\n        return result;\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("/**  线程池配置\n * @version V1.0\n * @since 2021-06-08 15:39\n */\npublic class ExecutorConfig {\n    private static int maxPoolSize = Runtime.getRuntime().availableProcessors();\n    private volatile static ExecutorService executorService;\n    public static ExecutorService getThreadPool() {\n        if (executorService == null){\n            synchronized (ExecutorConfig.class){\n                if (executorService == null){\n                    executorService =  newThreadPool();\n                }\n            }\n        }\n        return executorService;\n    }\n\n    private static  ExecutorService newThreadPool(){\n        int queueSize = 500;\n        int corePool = Math.min(5, maxPoolSize);\n        return new ThreadPoolExecutor(corePool, maxPoolSize, 10000L, TimeUnit.MILLISECONDS,\n            new LinkedBlockingQueue<>(queueSize),new ThreadPoolExecutor.AbortPolicy());\n    }\n    private ExecutorConfig(){}\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("/** 获取sqlSession\n * @author 86182\n * @version V1.0\n * @since 2021-06-03 15:08\n */\n@Component\npublic class SqlContext {\n    @Resource\n    private SqlSessionTemplate sqlSessionTemplate;\n\n    public SqlSession getSqlSession(){\n        SqlSessionFactory sqlSessionFactory = sqlSessionTemplate.getSqlSessionFactory();\n        return sqlSessionFactory.openSession();\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h3",{attrs:{id:"示例事务不成功操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例事务不成功操作"}},[s._v("#")]),s._v(" 示例事务不成功操作")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('/**\n     * 测试多线程事务.\n     * @param employeeDOList\n     */\n    @Override\n    @Transactional\n    public void saveThread(List<EmployeeDO> employeeDOList) {\n        try {\n            //先做删除操作,如果子线程出现异常,此操作不会回滚\n            this.getBaseMapper().delete(null);\n            //获取线程池\n            ExecutorService service = ExecutorConfig.getThreadPool();\n            //拆分数据,拆分5份\n            List<List<EmployeeDO>> lists=averageAssign(employeeDOList, 5);\n            //执行的线程\n            Thread []threadArray = new Thread[lists.size()];\n            //监控子线程执行完毕,再执行主线程,要不然会导致主线程关闭,子线程也会随着关闭\n            CountDownLatch countDownLatch = new CountDownLatch(lists.size());\n            AtomicBoolean atomicBoolean = new AtomicBoolean(true);\n            for (int i =0;i<lists.size();i++){\n                if (i==lists.size()-1){\n                    atomicBoolean.set(false);\n                }\n                List<EmployeeDO> list  = lists.get(i);\n                threadArray[i] =  new Thread(() -> {\n                    try {\n                    \t//最后一个线程抛出异常\n                        if (!atomicBoolean.get()){\n                            throw new ServiceException("001","出现异常");\n                        }\n                        //批量添加,mybatisPlus中自带的batch方法\n                        this.saveBatch(list);\n                    }finally {\n                        countDownLatch.countDown();\n                    }\n\n                });\n            }\n            for (int i = 0; i <lists.size(); i++){\n                service.execute(threadArray[i]);\n            }\n            //当子线程执行完毕时,主线程再往下执行\n            countDownLatch.await();\n            System.out.println("添加完毕");\n        }catch (Exception e){\n            log.info("error",e);\n            throw new ServiceException("002","出现异常");\n        }finally {\n             connection.close();\n         }\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br")])]),n("p",[s._v("数据库中存在一条数据："),n("br"),s._v(" "),n("img",{attrs:{src:e(433),alt:""}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//测试用例\n@RunWith(SpringRunner.class)\n@SpringBootTest(classes = { ThreadTest01.class, MainApplication.class})\npublic class ThreadTest01 {\n\n    @Resource\n    private EmployeeBO employeeBO;\n\n    /**\n     *   测试多线程事务.\n     * @throws InterruptedException\n     */\n    @Test\n    public  void MoreThreadTest2() throws InterruptedException {\n        int size = 10;\n        List<EmployeeDO> employeeDOList = new ArrayList<>(size);\n        for (int i = 0; i<size;i++){\n            EmployeeDO employeeDO = new EmployeeDO();\n            employeeDO.setEmployeeName("lol"+i);\n            employeeDO.setAge(18);\n            employeeDO.setGender(1);\n            employeeDO.setIdNumber(i+"XX");\n            employeeDO.setCreatTime(Calendar.getInstance().getTime());\n            employeeDOList.add(employeeDO);\n        }\n        try {\n            employeeBO.saveThread(employeeDOList);\n            System.out.println("添加成功");\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br")])]),n("p",[s._v("测试结果："),n("br"),s._v(" "),n("img",{attrs:{src:e(434),alt:""}}),n("br"),s._v(" "),n("img",{attrs:{src:e(435),alt:""}}),s._v(" 可以发现子线程组执行时, 有一个线程执行失败, 其他线程也会抛出异常, 但是主线程中执行的删除操作, 没有回滚, Transactional 注解没有生效.")]),s._v(" "),n("h4",{attrs:{id:"使用-sqlsession-控制手动提交事务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-sqlsession-控制手动提交事务"}},[s._v("#")]),s._v(" 使用 sqlSession 控制手动提交事务")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Resource\n   SqlContext sqlContext;\n /**\n     * 测试多线程事务.\n     * @param employeeDOList\n     */\n    @Override\n    public void saveThread(List<EmployeeDO> employeeDOList) throws SQLException {\n        // 获取数据库连接,获取会话(内部自有事务)\n        SqlSession sqlSession = sqlContext.getSqlSession();\n        Connection connection = sqlSession.getConnection();\n        try {\n            // 设置手动提交\n            connection.setAutoCommit(false);\n            //获取mapper\n            EmployeeMapper employeeMapper = sqlSession.getMapper(EmployeeMapper.class);\n            //先做删除操作\n            employeeMapper.delete(null);\n            //获取执行器\n            ExecutorService service = ExecutorConfig.getThreadPool();\n            List<Callable<Integer>> callableList  = new ArrayList<>();\n            //拆分list\n            List<List<EmployeeDO>> lists=averageAssign(employeeDOList, 5);\n            AtomicBoolean atomicBoolean = new AtomicBoolean(true);\n            for (int i =0;i<lists.size();i++){\n                if (i==lists.size()-1){\n                    atomicBoolean.set(false);\n                }\n                List<EmployeeDO> list  = lists.get(i);\n                //使用返回结果的callable去执行,\n                Callable<Integer> callable = () -> {\n                    //让最后一个线程抛出异常\n                    if (!atomicBoolean.get()){\n                        throw new ServiceException("001","出现异常");\n                    }\n                  return employeeMapper.saveBatch(list);\n                };\n                callableList.add(callable);\n            }\n            //执行子线程\n           List<Future<Integer>> futures = service.invokeAll(callableList);\n            for (Future<Integer> future:futures) {\n            //如果有一个执行不成功,则全部回滚\n                if (future.get()<=0){\n                    connection.rollback();\n                     return;\n                }\n            }\n            connection.commit();\n            System.out.println("添加完毕");\n        }catch (Exception e){\n            connection.rollback();\n            log.info("error",e);\n            throw new ServiceException("002","出现异常");\n        }finally {\n             connection.close();\n         }\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// sql\n   <insert id="saveBatch" parameterType="List">\n    INSERT INTO\n    employee (employee_id,age,employee_name,birth_date,gender,id_number,creat_time,update_time,status)\n    values\n        <foreach collection="list" item="item" index="index" separator=",">\n        (\n        #{item.employeeId},\n        #{item.age},\n        #{item.employeeName},\n        #{item.birthDate},\n        #{item.gender},\n        #{item.idNumber},\n        #{item.creatTime},\n        #{item.updateTime},\n        #{item.status}\n            )\n        </foreach>\n    </insert>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("数据库中一条数据："),n("br"),s._v(" "),n("img",{attrs:{src:e(436),alt:""}}),n("br"),s._v("\n测试结果：抛出异常,"),n("br"),s._v(" "),n("img",{attrs:{src:e(437),alt:""}}),n("br"),s._v("\n删除操作的数据回滚了, 数据库中的数据依旧存在, 说明事务成功了."),n("br"),s._v(" "),n("img",{attrs:{src:e(438),alt:""}})]),s._v(" "),n("p",[n("strong",[s._v("成功操作示例：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Resource\n    SqlContext sqlContext;\n    /**\n     * 测试多线程事务.\n     * @param employeeDOList\n     */\n    @Override\n    public void saveThread(List<EmployeeDO> employeeDOList) throws SQLException {\n        // 获取数据库连接,获取会话(内部自有事务)\n        SqlSession sqlSession = sqlContext.getSqlSession();\n        Connection connection = sqlSession.getConnection();\n        try {\n            // 设置手动提交\n            connection.setAutoCommit(false);\n            EmployeeMapper employeeMapper = sqlSession.getMapper(EmployeeMapper.class);\n            //先做删除操作\n            employeeMapper.delete(null);\n            ExecutorService service = ExecutorConfig.getThreadPool();\n            List<Callable<Integer>> callableList  = new ArrayList<>();\n            List<List<EmployeeDO>> lists=averageAssign(employeeDOList, 5);\n            for (int i =0;i<lists.size();i++){\n                List<EmployeeDO> list  = lists.get(i);\n                Callable<Integer> callable = () -> employeeMapper.saveBatch(list);\n                callableList.add(callable);\n            }\n            //执行子线程\n           List<Future<Integer>> futures = service.invokeAll(callableList);\n            for (Future<Integer> future:futures) {\n                if (future.get()<=0){\n                    connection.rollback();\n                     return;\n                }\n            }\n            connection.commit();\n            System.out.println("添加完毕");\n        }catch (Exception e){\n            connection.rollback();\n            log.info("error",e);\n            throw new ServiceException("002","出现异常");\n           // throw new ServiceException(ExceptionCodeEnum.EMPLOYEE_SAVE_OR_UPDATE_ERROR);\n        }\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("p",[s._v("测试结果："),n("br"),s._v(" "),n("img",{attrs:{src:e(439),alt:""}})]),s._v(" "),n("p",[s._v("数据库中数据："),n("br"),s._v("\n删除的删除了, 添加的添加成功了, 测试成功."),n("br"),s._v(" "),n("img",{attrs:{src:e(440),alt:""}})])])}),[],!1,null,null,null);n.default=t.exports},433:function(s,n,e){s.exports=e.p+"assets/img/20210608160337245.d53de6f1.png"},434:function(s,n,e){s.exports=e.p+"assets/img/cu-_70-1691649893298-17.211cfb98.png"},435:function(s,n,e){s.exports=e.p+"assets/img/cu-70-1691649891397-14.65b86398.png"},436:function(s,n,e){s.exports=e.p+"assets/img/cu-70-1691649883014-11.364ecb3d.png"},437:function(s,n,e){s.exports=e.p+"assets/img/cu-70-1691649880237-8.7084f098.png"},438:function(s,n,e){s.exports=e.p+"assets/img/20210608164714238.030dc760.png"},439:function(s,n,e){s.exports=e.p+"assets/img/cu-1691649874466-3.ba39f167.png"},440:function(s,n,e){s.exports=e.p+"assets/img/cu-13456780090kdaslkdasda.ead2aa0c.png"}}]);