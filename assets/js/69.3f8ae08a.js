(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{828:function(e,a,t){"use strict";t.r(a);var n=t(4),s=Object(n.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),a("p",[e._v("首先要了解 Feign 是如何进行远程调用的，这里面包括，注册中心、负载均衡、FeignClient 之间的关系，微服务通过不论是 eureka、nacos 也好注册到服务端，Feign 是靠 Ribbon 做负载的，而 Ribbon 需要拿到注册中心的服务列表，将服务进行负载缓存到本地，然后 FeignClient 客户端在进行调用，大概就是这么一个过程。")]),e._v(" "),a("h2",{attrs:{id:"ribbon-是如何进行负载的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ribbon-是如何进行负载的"}},[e._v("#")]),e._v(" Ribbon 是如何进行负载的")]),e._v(" "),a("p",[e._v("首先我们要清楚 Ribbon 是如何进行负载的，也就是如何获取 nacos、eureka 的服务列表，这个很关键。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f3f3c8e3dc9346b8b12f0815b020c9ff~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"ribbonclientconfiguration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ribbonclientconfiguration"}},[e._v("#")]),e._v(" RibbonClientConfiguration")]),e._v(" "),a("p",[e._v("RibbonClientConfiguration 类中通过 LoadBalancer，我们知道 ribbon 是靠 LoadBalancer 做负载的 无非就是 ILoadBalancer 接口的方法，依次是添加新的服务、在负载均衡里选择一个服务、markServerDown 服务下线、获取服务列表、获取存活的服务器、获取所有服务器（包括健康和不健康的）")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5b6a0e18dfc942049f81f470c20ae15b~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"zoneawareloadbalancer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zoneawareloadbalancer"}},[e._v("#")]),e._v(" ZoneAwareLoadBalancer")]),e._v(" "),a("p",[e._v("loadBalancer 默认的是 ZoneAwareLoadBalancer 负载均衡器，通过继承父类 DynamicServerListLoadBalancer 的 restOfInit 方法，里面比较重要的两个方法，enableAndInitLearnNewServersFeature 和 updateListOfServers 方法")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/380199ce5bff4ba28b57865336bbaefb~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?",alt:""}})]),e._v(" "),a("p",[e._v("enableAndInitLearnNewServersFeature 方法里面")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('LOGGER.info("Using serverListUpdater {}", serverListUpdater.getClass().getSimpleName());\nserverListUpdater.start(updateAction);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("让我们看 ServerListUpdater.start 方法的实现，通过自定义线程去拿，这就是获取服务列表；")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/14c90074dc7c4fffa351000de9988faa~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?",alt:""}})]),e._v(" "),a("h2",{attrs:{id:"ribbon-负载均衡策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ribbon-负载均衡策略"}},[e._v("#")]),e._v(" Ribbon 负载均衡策略")]),e._v(" "),a("p",[e._v("服务列表获取说了，当然负载均衡的策略这块也有必要讲一下，主要有七种；")]),e._v(" "),a("ul",[a("li",[e._v("RoundRobinRule（轮询策略，按照服务顺序依次循环调用）")]),e._v(" "),a("li",[e._v("WeightedResponseTimeRule（权重比策略，优先选择权重比高的服务，也就是服务响应时间比较短的，响应时间越长权重比越低）")]),e._v(" "),a("li",[e._v("RandomRule（随机策略，服务提供者列表随机选择一个服务）")]),e._v(" "),a("li",[e._v("BestAvailableRule（最小连接数策略，获取服务列表中连接数最小的服务实例）")]),e._v(" "),a("li",[e._v("RetryRule（重试策略，重试获取已经失效的服务，指定时间没有获取到返回 NULL）")]),e._v(" "),a("li",[e._v("AvailabilityFilteringRule（可用性敏感策略，过滤非健康服务实例，选择 lianji）")]),e._v(" "),a("li",[e._v("ZoneAvoidanceRule（区域敏感策略）")])]),e._v(" "),a("p",[e._v("关于自定义负载均衡策略，之前也介绍过，可以看之前的文章 "),a("a",{attrs:{href:"https://juejin.cn/post/7155754618486521869",title:"https://juejin.cn/post/7155754618486521869",target:"_blank",rel:"noopener noreferrer"}},[e._v("Ribbon 如何自定义实现负载均衡策略 - 掘金"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"ribbon-eager-load-饥饿加载-模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ribbon-eager-load-饥饿加载-模式"}},[e._v("#")]),e._v(" Ribbon-eager-load（饥饿加载）模式")]),e._v(" "),a("p",[e._v("Ribbon 对于负载 Client 是在服务启动后，发生调用的时候才会去创建 Client，所以在第一次发生 http 请求调用的时候，不光要算上 http 的请求时间，还要算上 Client 的创建时间，所以第一次调用的时候才会很慢，写个方法调用下;")]),e._v(" "),a("p",[e._v("System 服务调用 System2 服务")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('@GetMapping("/requestSystem2Api")\npublic String requestSystem2Api(){\n    long startTime = System.currentTimeMillis();\n    R<String> stringR = iTestServiceClient.testRequestMethod();\n    if (null !=stringR){\n        log.info("接口返回："+stringR.getMsg());\n    }\n    long needTime = System.currentTimeMillis() - startTime;\n    log.info("接口调用需要的时间："+needTime);\n    return "";\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("p",[e._v("从调用日志可以看出，第一次调用 System2 服务，Ribbon 的 DynamicServerListLoadBalancer 会将 feign 客户端进行负载，然后进行调用，第一次调用的时间就是会长一些，第二次调用直接进行请求可以看到调用时间很快。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a6da30dadc11462db233f7f9048e3e11~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"开启-ribbon-饥饿加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启-ribbon-饥饿加载"}},[e._v("#")]),e._v(" 开启 Ribbon 饥饿加载")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ribbon:\n    nacos:\n      enabled: true # 开启naocos轮询\n    eager-load:\n     enabled: true  # 开启Ribbon的饥饿加载模式(防止第一次请求超时的问题)\n     clients: Lxlxxx-system2 # 指定需要开启的服务(需要开启Ribbon的饥饿加载模式)\n     ReadTimeout: 10000\n     ConnectTimeout: 10000\n     MaxAutoRetries: 0\n     MaxAutoRetriesNextServer: 1\n     OkToRetryOnAllOperations: false\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("p",[e._v("在项目启动的时候，可以从日志看到，已经把 Lxlxxx-system2 服务进行加载，从而避免了第一次请求超时的情况；")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3205d0eb282342b298447a007f3654f9~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?",alt:""}})]),e._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),a("p",[e._v("其实这种饥饿加载模式，类似于 “客户端负载预热” 的一个操作，项目启动的时候进行加载，防止服务之间调用可以因为数据量、业务逻辑处理复杂性导致接口超时，如果你的服务之间调用业务处理比较复杂、且慢，不妨可以试试这种解决方式。")]),e._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),a("p",[e._v("https://juejin.cn/post/7249624466150408250")])])}),[],!1,null,null,null);a.default=s.exports}}]);