(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{1226:function(e,s,t){"use strict";t.r(s);var a=t(4),r=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"第-3-章-flume-进阶"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-3-章-flume-进阶"}},[e._v("#")]),e._v(" 第 3 章 Flume 进阶")]),e._v(" "),s("h2",{attrs:{id:"_3-1-flume-事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-flume-事务"}},[e._v("#")]),e._v(" 3.1 Flume 事务")]),e._v(" "),s("p",[s("img",{attrs:{src:t(969),alt:"Flume事务"}})]),e._v(" "),s("h2",{attrs:{id:"_3-2-flume-agent-内部原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-flume-agent-内部原理"}},[e._v("#")]),e._v(" 3.2 Flume Agent 内部原理")]),e._v(" "),s("p",[s("img",{attrs:{src:t(970),alt:"Flume Agent内部原理"}})]),e._v(" "),s("p",[s("strong",[e._v("重要组件：")])]),e._v(" "),s("h5",{attrs:{id:"_1-channelselector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-channelselector"}},[e._v("#")]),e._v(" 1）ChannelSelector")]),e._v(" "),s("p",[e._v("ChannelSelector 的作用就是选出 Event 将要被发往哪个 Channel。其共有两种类型， 分别是 "),s("strong",[e._v("Replicating")]),e._v("（复制）和 "),s("strong",[e._v("Multiplexing")]),e._v("（多路复用）。")]),e._v(" "),s("p",[e._v("ReplicatingSelector 会将同一个 Event 发往所有的 Channel，Multiplexing 会根据相应的原则，将不同的 Event 发往不同Channel。")]),e._v(" "),s("h5",{attrs:{id:"_2-sinkprocessor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-sinkprocessor"}},[e._v("#")]),e._v(" 2）SinkProcessor")]),e._v(" "),s("p",[e._v("SinkProcessor 共 有 三 种 类 型 ， 分 别 是 "),s("strong",[e._v("DefaultSinkProcessor")]),e._v(" 、 "),s("strong",[e._v("LoadBalancingSinkProcessor")]),e._v(" 和 "),s("strong",[e._v("FailoverSinkProcessor")])]),e._v(" "),s("p",[e._v("DefaultSinkProcessor 对 应 的 是 单 个 的 Sink ， LoadBalancingSinkProcessor 和 FailoverSinkProcessor 对应的是 Sink Group，LoadBalancingSinkProcessor 可以实现负载均衡的功能，FailoverSinkProcessor 可以错误恢复的功能。")]),e._v(" "),s("h2",{attrs:{id:"_3-3-flume-拓扑结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-flume-拓扑结构"}},[e._v("#")]),e._v(" 3.3 Flume 拓扑结构")]),e._v(" "),s("h3",{attrs:{id:"_3-3-1-简单串联"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-简单串联"}},[e._v("#")]),e._v(" 3.3.1 简单串联")]),e._v(" "),s("p",[s("img",{attrs:{src:t(971),alt:"简单串联"}})]),e._v(" "),s("p",[e._v("这种模式是将多个 flume 顺序连接起来了，从最初的 source 开始到最终 sink 传送的目的存储系统。此模式不建议桥接过多的 flume 数量， flume 数量过多不仅会影响传输速率，而且一旦传输过程中某个节点 flume 宕机，会影响整个传输系统。")]),e._v(" "),s("h3",{attrs:{id:"_3-3-2-复制和多路复用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-复制和多路复用"}},[e._v("#")]),e._v(" 3.3.2 复制和多路复用")]),e._v(" "),s("p",[s("img",{attrs:{src:t(972),alt:"单 source，多 channel、sink"}})]),e._v(" "),s("p",[e._v("Flume 支持将事件流向一个或者多个目的地。这种模式可以将相同数据复制到多个 channel 中，或者将不同数据分发到不同的 channel 中，sink 可以选择传送到不同的目的地。")]),e._v(" "),s("h3",{attrs:{id:"_3-3-3-负载均衡和故障转移"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-3-负载均衡和故障转移"}},[e._v("#")]),e._v(" 3.3.3 负载均衡和故障转移")]),e._v(" "),s("p",[s("img",{attrs:{src:t(973),alt:"Flume 负载均衡或故障转移"}})]),e._v(" "),s("p",[e._v("Flume支持使用将多个sink逻辑上分到一个sink组，sink组配合不同的SinkProcessor 可以实现负载均衡和错误恢复的功能。")]),e._v(" "),s("h3",{attrs:{id:"_3-3-4-聚合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-4-聚合"}},[e._v("#")]),e._v(" 3.3.4 聚合")]),e._v(" "),s("p",[s("img",{attrs:{src:t(974),alt:"Flume Agent 聚合"}})]),e._v(" "),s("p",[e._v("这种模式是我们最常见的，也非常实用，日常 web 应用通常分布在上百个服务器，大者甚至上千个、上万个服务器。产生的日志，处理起来也非常麻烦。用 flume 的这种组合方式能很好的解决这一问题，每台服务器部署一个 flume 采集日志，传送到一个集中收集日志的flume，再由此 flume 上传到 hdfs、hive、hbase 等，进行日志分析。")]),e._v(" "),s("h2",{attrs:{id:"_3-4-flume-企业开发案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-flume-企业开发案例"}},[e._v("#")]),e._v(" 3.4 Flume 企业开发案例")])])}),[],!1,null,null,null);s.default=r.exports},969:function(e,s,t){e.exports=t.p+"assets/img/image-20230915000709309.87c852a7.png"},970:function(e,s,t){e.exports=t.p+"assets/img/image-20230915000845338.2e864d3b.png"},971:function(e,s,t){e.exports=t.p+"assets/img/image-20230915001129887.6e50a2de.png"},972:function(e,s,t){e.exports=t.p+"assets/img/image-20230915001220280.57250a75.png"},973:function(e,s,t){e.exports=t.p+"assets/img/image-20230915001325858.94f64275.png"},974:function(e,s,t){e.exports=t.p+"assets/img/image-20230915001407526.d21d727c.png"}}]);