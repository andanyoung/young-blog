(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{356:function(s,t,a){"use strict";a.r(t);var n=a(4),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"分布式id解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分布式id解决方案"}},[s._v("#")]),s._v(" 分布式"),t("strong",[s._v("ID")]),s._v("解决方案")]),s._v(" "),t("p",[s._v("为什么需要分布式 ID(分布式集群环境下的全局唯⼀ ID)")]),s._v(" "),t("h2",{attrs:{id:"_1-uuid-可以用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-uuid-可以用"}},[s._v("#")]),s._v(" 1. UUID(可以⽤)")]),s._v(" "),t("p",[t("strong",[s._v("UUID")]),s._v(" 是指 Universally Unique Identififier，翻译为中⽂是通⽤唯⼀识别码")]),s._v(" "),t("p",[s._v("产生重复 UUID 并造成错误的情况⾮常低，是故⼤可不必考虑此问题。")]),s._v(" "),t("p",[s._v("Java 中得到⼀个 UUID，可以使⽤ java.util 包提供的方法")]),s._v(" "),t("p",[t("code",[s._v("java.util.UUID.randomUUID()")])]),s._v(" "),t("h2",{attrs:{id:"_2-独立数据库的自增-id"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-独立数据库的自增-id"}},[s._v("#")]),s._v(" 2. 独立数据库的自增 ID")]),s._v(" "),t("p",[s._v("比如 A 表分表为 A1 表和 A2 表，那么肯定不能让 A1 表和 A2 表的 ID 自增，那么 ID 怎么获取呢？我们可以单独的创建⼀个 Mysql 数据库，在这个数据库中创建⼀张表，这张表的 ID 设置为自增，其他地方需要全局唯⼀ ID 的时候，就模拟向这个 Mysql 数据库的这张表中模拟插⼊⼀条记录，此时 ID 会自增，然后我们可以通过 Mysql 的 select last_insert_id() 获取到刚刚这张表中自增生成的 ID.")]),s._v(" "),t("p",[s._v("比如，我们创建了⼀个数据库实例 global_id_generator，在其中创建了⼀个数据表，表结构如下：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Table")]),s._v(" structure "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DISTRIBUTE_ID")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DROP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IF")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("EXISTS")]),s._v(" `"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DISTRIBUTE_ID")]),s._v("`"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TABLE")]),s._v(" `"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DISTRIBUTE_ID")]),s._v("` "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n `id` "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bigint")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("AUTO_INCREMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'主键'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n `createtime` datetime "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("KEY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("`id`"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ENGINE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InnoDB")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CHARSET")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("当分布式集群环境中哪个应⽤需要获取⼀个全局唯⼀的分布式 ID 的时候，就可以使⽤代码连接这个数据库实例，执⾏如下 sql 语句即可。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("insert into "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("DISTRIBUTE_ID")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("createtime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NOW")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nselect "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("LAST_INSERT_ID")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("；\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("注意：")]),s._v(" "),t("p",[s._v("1）这⾥的 createtime 字段⽆实际意义，是为了随便插⼊⼀条数据以⾄于能够自增 id。")]),s._v(" "),t("p",[s._v("2）使⽤独立的 Mysql 实例生成分布式 id，虽然可⾏，但是性能和可靠性都不够好，因为你需要代码连接到数据库才能获取到 id，性能⽆法保障，另外 mysql 数据库实例挂掉了，那么就⽆法获取分布式 id 了。")]),s._v(" "),t("p",[s._v("3）有⼀些开发者又针对上述的情况将⽤于生成分布式 id 的 mysql 数据库设计成了⼀个集群架构，那么其实这种方式现在基本不⽤，因为过于麻烦了。")]),s._v(" "),t("h2",{attrs:{id:"_3-借助-redis-的-incr-命令获取全局唯一-id-推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-借助-redis-的-incr-命令获取全局唯一-id-推荐"}},[s._v("#")]),s._v(" 3. 借助 Redis 的 Incr 命令获取全局唯⼀ ID（推荐）")]),s._v(" "),t("p",[s._v("Redis Incr 命令将 key 中储存的数字值增⼀。如果 key 不存在，那么 key 的值会先被初始化为 0")]),s._v(" "),t("p",[s._v("，然后再执⾏ INCR 操作。")]),s._v(" "),t("p",[s._v("<key,value>")]),s._v(" "),t("p",[s._v("<id,>")]),s._v(" "),t("p",[s._v(".incr(id) 1 2 3 4")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Redis 安装（示意，我们这⾥安装单节点使⽤⼀下，具体 Redis 自身的内容在后续分布式缓存课程中详细讲解）")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("官网下载 redis-3.2.10.tar.gz")])]),s._v(" "),t("li",[t("p",[s._v("上传到 linux 服务器解压 tar -zxvf redis-3.2.10.tar.gz")])]),s._v(" "),t("li",[t("p",[s._v("cd 解压⽂件⽬录，对解压的 redis 进⾏编译")])]),s._v(" "),t("li",[t("p",[s._v("make")])]),s._v(" "),t("li",[t("p",[s._v("然后 cd 进⼊ src ⽬录，执⾏ make install")])]),s._v(" "),t("li",[t("p",[s._v("修改解压⽬录中的配置⽂件 redis.conf，关掉保护模式")]),s._v(" "),t("p",[s._v("在 src ⽬录下执⾏ ./redis-server ../redis.conf 启动 redis 服务")])])])]),s._v(" "),t("li",[t("p",[s._v("Java 代码中使⽤ Jedis 客户端调⽤ Reids 的 incr 命令获得⼀个全局的 id")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("引⼊ jedis 客户端 jar")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("clients"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("groupId"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("jedis"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("artifactId"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("version"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.9")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("version"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("dependency"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("Java 代码（此处我们就是连接单节点，也不使⽤连接池）")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),s._v(" jedis "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.0.0.1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("incr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"id"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"从redis中获取的分布式id为："')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tjedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])])])])])]),s._v(" "),t("h2",{attrs:{id:"_4-snowflake-雪花算法-可以用-推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-snowflake-雪花算法-可以用-推荐"}},[s._v("#")]),s._v(" 4. "),t("strong",[s._v("SnowFlake 雪花算法")]),s._v("（可以⽤，推荐）")]),s._v(" "),t("p",[s._v("雪花算法是 Twitter 推出的⼀个⽤于生成分布式 ID 的策略。")]),s._v(" "),t("p",[s._v("雪花算法是⼀个算法，基于这个算法可以生成 ID，生成的 ID 是⼀个 long 型，那么在 Java 中⼀个 long 型是 8 个字节，算下来是 64bit，如下是使⽤雪花算法生成的⼀个 ID 的⼆进制形式示意：")]),s._v(" "),t("h3",{attrs:{id:"雪花算法-id-组成结构说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#雪花算法-id-组成结构说明"}},[s._v("#")]),s._v(" 雪花算法 id 组成结构说明：")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://md7.admin4j.com/blog/image-20230328170923416.png",alt:"image-20230328170923416"}})]),s._v(" "),t("p",[s._v("1）符号位：固定为 0，二进制表示最高位是符号位，0 代表证书，1 代表负数。")]),s._v(" "),t("p",[s._v("2）时间戳：41 个二进制数用来记录时间戳，表示某一个毫秒（毫秒级）")]),s._v(" "),t("p",[s._v("3）机器 id：代表当前算法运行机器的 id")]),s._v(" "),t("p",[s._v("4）序列号：12 位，用来记录某个机器同一个毫秒内产生的不同的序列号，代表同一个机器同一个毫秒可以产生的 id 序号")]),s._v(" "),t("p",[s._v("另外，⼀些互联网公司也基于上述的方案封装了⼀些分布式 ID 生成器，比如滴滴的 tinyid（基于数据库实现）、百度的 uidgenerator（基于 SnowFlake）和美团的 leaf（基于数据库和 SnowFlake）等，他们在。")]),s._v(" "),t("h3",{attrs:{id:"snowflake-算法的优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#snowflake-算法的优点"}},[s._v("#")]),s._v(" SnowFlake 算法的优点：")]),s._v(" "),t("p",[s._v("（1）高性能高可用：生成时不依赖于数据库，完全在内存中生成（由于完基于位运算，所以性能比随机数运算要高）。")]),s._v(" "),t("p",[s._v("（2）容量大：每秒中能生成数百万的自增 ID。")]),s._v(" "),t("p",[s._v("（3）ID 自增：存入数据库中，索引效率高。")]),s._v(" "),t("h4",{attrs:{id:"snowflake-算法的缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#snowflake-算法的缺点"}},[s._v("#")]),s._v(" SnowFlake 算法的缺点：")]),s._v(" "),t("p",[s._v("依赖与系统时间的一致性，如果系统时间被回调，或者改变，可能会造成 id 冲突或者重复。")]),s._v(" "),t("p",[s._v("实际中我们的机房并没有那么多，我们可以改进改算法，将 10bit 的机器 id 优化，成业务表或者和我们系统相关的业务。")]),s._v(" "),t("h1",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/agonie201218/article/details/106782335",target:"_blank",rel:"noopener noreferrer"}},[s._v("分布式主键解决方案----Twitter 雪花算法的原理（Java 版）"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/agonie201218/article/details/124880017",target:"_blank",rel:"noopener noreferrer"}},[s._v("深入分析 mysql 为什么不推荐使用 uuid 或者雪花 id 作为主键"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);