(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{637:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"springboot-整合-actuator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springboot-整合-actuator"}},[t._v("#")]),t._v(" SpringBoot 整合 actuator")]),t._v(" "),s("blockquote",[s("p",[t._v("SpringBoot 自带监控功能 Actuator，可以帮助实现对程序内部运行情况监控，比如监控状况、Bean 加载情况、环境变量、日志信息、线程信息等")])]),t._v(" "),s("h2",{attrs:{id:"配置-actuator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-actuator"}},[t._v("#")]),t._v(" 配置 Actuator")]),t._v(" "),s("ul",[s("li",[s("h3",{attrs:{id:"pom-xml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pom-xml"}},[t._v("#")]),t._v(" "),s("code",[t._v("pom.xml")])])])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\x3c!-- web start--\x3e\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-web</artifactId>\n</dependency>\n\x3c!-- web end--\x3e\n\x3c!-- actuator start--\x3e\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-actuator</artifactId>\n</dependency>\n\x3c!-- actuator end--\x3e\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("ul",[s("li",[t._v("浏览器打开链接 http://localhost:8080/actuator/"),s("br"),t._v("\n可以看到所有支持的连接，默认只有")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/actuator\n/actuator/health\n/actuator/health/{component}\n/actuator/health/{component}/{instance}\n/actuator/info\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("ul",[s("li",[t._v("bean 加载情况 http://localhost:8080/actuator/beans")])]),t._v(" "),s("p",[t._v("具体的使用方法：")]),t._v(" "),s("p",[t._v("引入上述的依赖 jar")]),t._v(" "),s("p",[t._v("通过下面的配置启用所有的监控端点，默认情况下，这些端点是禁用的；")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('management:\n  endpoints:\n    web:\n      exposure:\n        include: "*"\n“*”号代表启用所有的监控端点，可以单独启用，例如，`health`，`info`，`metrics`等\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h2",{attrs:{id:"actuator-的-rest-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#actuator-的-rest-接口"}},[t._v("#")]),t._v(" Actuator 的 REST 接口")]),t._v(" "),s("p",[t._v("Actuator 监控分成两类：原生端点和用户自定义端点；自定义端点主要是指扩展性，用户可以根据自己的实际应用，定义一些比较关心的指标，在运行期进行监控。")]),t._v(" "),s("p",[t._v("原生端点是在应用程序里提供众多 Web 接口，通过它们了解应用程序运行时的内部状况。原生端点又可以分成三类：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("应用配置类：可以查看应用在运行期的静态信息：例如自动配置信息、加载的 springbean 信息、yml 文件配置信息、环境信息、请求映射信息；")])]),t._v(" "),s("li",[s("p",[t._v("度量指标类：主要是运行期的动态信息，例如堆栈、请求连、一些健康指标、metrics 信息等；")])]),t._v(" "),s("li",[s("p",[t._v("操作控制类：主要是指 shutdown, 用户可以发送一个请求将应用的监控功能关闭。")])])]),t._v(" "),s("p",[t._v("Actuator 提供了 13 个接口，具体如下表所示。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("GET")]),s("th",[t._v("/auditevents")]),s("th",[t._v("显示应用暴露的审计事件 (比如认证进入、订单失败)")])])]),s("tbody",[s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/beans")]),s("td",[t._v("描述应用程序上下文里全部的 Bean，以及它们的关系")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/conditions")]),s("td",[t._v("就是 1.0 的 /autoconfig ，提供一份自动配置生效的条件情况，记录哪些自动配置条件通过了，哪些没通过")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/configprops")]),s("td",[t._v("描述配置属性 (包含默认值) 如何注入 Bean")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/env")]),s("td",[t._v("获取全部环境属性")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/env/{name}")]),s("td",[t._v("根据名称获取特定的环境属性值")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/flyway")]),s("td",[t._v("提供一份 Flyway 数据库迁移信息")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/liquidbase")]),s("td",[t._v("显示 Liquibase 数据库迁移的纤细信息")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/health")]),s("td",[t._v("报告应用程序的健康指标，这些值由 HealthIndicator 的实现类提供")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/heapdump")]),s("td",[t._v("dump 一份应用的 JVM 堆信息")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/httptrace")]),s("td",[t._v("显示 HTTP 足迹，最近 100 个 HTTP request/repsponse")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/info")]),s("td",[t._v("获取应用程序的定制信息，这些信息由 info 打头的属性提供")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/logfile")]),s("td",[t._v("返回 log file 中的内容 (如果 logging.file 或者 logging.path 被设置)")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/loggers")]),s("td",[t._v("显示和修改配置的 loggers")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/metrics")]),s("td",[t._v("报告各种应用程序度量信息，比如内存用量和 HTTP 请求计数")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/metrics/{name}")]),s("td",[t._v("报告指定名称的应用程序度量值")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/scheduledtasks")]),s("td",[t._v("展示应用中的定时任务信息")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/sessions")]),s("td",[t._v("如果我们使用了 Spring Session 展示应用中的 HTTP sessions 信息")])]),s("tr",[s("td",[t._v("POST")]),s("td",[t._v("/shutdown")]),s("td",[t._v("关闭应用程序，要求 endpoints.shutdown.enabled 设置为 true")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/mappings")]),s("td",[t._v("描述全部的 URI 路径，以及它们和控制器 (包含 Actuator 端点) 的映射关系")])]),s("tr",[s("td",[t._v("GET")]),s("td",[t._v("/threaddump")]),s("td",[t._v("获取线程活动的快照")])])])]),t._v(" "),s("h3",{attrs:{id:"命令详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令详解"}},[t._v("#")]),t._v(" 命令详解")]),t._v(" "),s("p",[t._v("在 Spring Boot 2.x 中为了安全期间，Actuator 只开放了两个端点 /actuator/health 和 /actuator/info。可以在配置文件中设置打开。")]),t._v(" "),s("p",[t._v("可以打开所有的监控点")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('management:\n  endpoints:\n    web:\n      exposure:\n        include: "*"\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("也可以选择打开部分")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("management:\n  endpoints:\n    web:\n      exposure:\n        exclude: beans,trace\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("Actuator 默认所有的监控点路径都在 / actuator/*，当然如果有需要这个路径也支持定制。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("management:\n  endpoints:\n    web:\n      base-path: /manage #记得要加上/\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("设置完重启后，再次访问地址就会变成 / manage/*")]),t._v(" "),s("p",[t._v("Actuator 几乎监控了应用涉及的方方面面，我们重点讲述一些经常在项目中常用的命令。")]),t._v(" "),s("h4",{attrs:{id:"health"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#health"}},[t._v("#")]),t._v(" health")]),t._v(" "),s("p",[t._v("health 主要用来检查应用的运行状态，这是我们使用最高频的一个监控点。通常使用此接口提醒我们应用实例的运行状态，以及应用不” 健康 “的原因，比如数据库连接、磁盘空间不够等。")]),t._v(" "),s("p",[t._v("默认情况下 health 的状态是开放的，添加依赖后启动项目，访问：http://localhost:8080/actuator/health 即可看到应用的状态。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n    "status" : "UP"\n}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("要想查看详细的应用健康信息需要配置 management.endpoint.health.show-details 的值为 always，配置之后我们再次访问 http://localhost:8080/actuator/health，获取的信息如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n    "status": "UP",\n    "components": {\n        "diskSpace": {\n            "status": "UP",\n            "details": {\n                "total": 236510507008,\n                "free": 223361744896,\n                "threshold": 10485760\n            }\n        },\n        "ping": {\n            "status": "UP"\n        }\n    }\n}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[t._v("Spring boot 的健康信息都是从 ApplicationContext 中的各种 HealthIndicator Beans 中收集到的，Spring boot 框架中包含了大量的 HealthIndicators 的实现类，当然你也可以实现自己认为的健康状态。")]),t._v(" "),s("p",[t._v("默认情况下，最终的 Spring Boot 应用的状态是由 HealthAggregator 汇总而成的，汇总的算法是：")]),t._v(" "),s("ul",[s("li",[t._v("1 设置状态码顺序：setStatusOrder(Status.DOWN, Status.OUT_OF_SERVICE, Status.UP, Status.UNKNOWN);。")]),t._v(" "),s("li",[t._v("2 过滤掉不能识别的状态码。")]),t._v(" "),s("li",[t._v("3 如果无任何状态码，整个 Spring Boot 应用的状态是 UNKNOWN。")]),t._v(" "),s("li",[t._v("4 将所有收集到的状态码按照 1 中的顺序排序。")]),t._v(" "),s("li",[t._v("5 返回有序状态码序列中的第一个状态码，作为整个 Spring Boot 应用的状态。")])]),t._v(" "),s("p",[t._v("health 通过合并几个健康指数检查应用的健康情况。Spring boot 框架自带的 "),s("code",[t._v("HealthIndicators")]),t._v(" 目前包括：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("CassandraHealthIndicator")]),s("th",[t._v("Checks that a Cassandra database is up.")])])]),s("tbody",[s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-boot%2Ftree%2Fv2.0.1.RELEASE%2Fspring-boot-project%2Fspring-boot-actuator%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fboot%2Factuate%2Fsystem%2FDiskSpaceHealthIndicator.java"}},[s("code",[t._v("DiskSpaceHealthIndicator")])])]),s("td",[t._v("Checks for low disk space.")])]),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-boot%2Ftree%2Fv2.0.1.RELEASE%2Fspring-boot-project%2Fspring-boot-actuator%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fboot%2Factuate%2Fjdbc%2FDataSourceHealthIndicator.java"}},[s("code",[t._v("DataSourceHealthIndicator")])])]),s("td",[t._v("Checks that a connection to "),s("code",[t._v("DataSource")]),t._v(" can be obtained.")])]),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-boot%2Ftree%2Fv2.0.1.RELEASE%2Fspring-boot-project%2Fspring-boot-actuator%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fboot%2Factuate%2Felasticsearch%2FElasticsearchHealthIndicator.java"}},[s("code",[t._v("ElasticsearchHealthIndicator")])])]),s("td",[t._v("Checks that an Elasticsearch cluster is up.")])]),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-boot%2Ftree%2Fv2.0.1.RELEASE%2Fspring-boot-project%2Fspring-boot-actuator%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fboot%2Factuate%2Finflux%2FInfluxDbHealthIndicator.java"}},[s("code",[t._v("InfluxDbHealthIndicator")])])]),s("td",[t._v("Checks that an InfluxDB server is up.")])]),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-boot%2Ftree%2Fv2.0.1.RELEASE%2Fspring-boot-project%2Fspring-boot-actuator%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fboot%2Factuate%2Fjms%2FJmsHealthIndicator.java"}},[s("code",[t._v("JmsHealthIndicator")])])]),s("td",[t._v("Checks that a JMS broker is up.")])]),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-boot%2Ftree%2Fv2.0.1.RELEASE%2Fspring-boot-project%2Fspring-boot-actuator%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fboot%2Factuate%2Fmail%2FMailHealthIndicator.java"}},[s("code",[t._v("MailHealthIndicator")])])]),s("td",[t._v("Checks that a mail server is up.")])]),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-boot%2Ftree%2Fv2.0.1.RELEASE%2Fspring-boot-project%2Fspring-boot-actuator%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fboot%2Factuate%2Fmongo%2FMongoHealthIndicator.java"}},[s("code",[t._v("MongoHealthIndicator")])])]),s("td",[t._v("Checks that a Mongo database is up.")])]),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-boot%2Ftree%2Fv2.0.1.RELEASE%2Fspring-boot-project%2Fspring-boot-actuator%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fboot%2Factuate%2Fneo4j%2FNeo4jHealthIndicator.java"}},[s("code",[t._v("Neo4jHealthIndicator")])])]),s("td",[t._v("Checks that a Neo4j server is up.")])]),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-boot%2Ftree%2Fv2.0.1.RELEASE%2Fspring-boot-project%2Fspring-boot-actuator%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fboot%2Factuate%2Famqp%2FRabbitHealthIndicator.java"}},[s("code",[t._v("RabbitHealthIndicator")])])]),s("td",[t._v("Checks that a Neo4j server is up.")])]),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-boot%2Ftree%2Fv2.0.1.RELEASE%2Fspring-boot-project%2Fspring-boot-actuator%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fboot%2Factuate%2Fredis%2FRedisHealthIndicator.java"}},[s("code",[t._v("RedisHealthIndicator")])])]),s("td",[t._v("Checks that a Redis server is up.")])]),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-boot%2Ftree%2Fv2.0.1.RELEASE%2Fspring-boot-project%2Fspring-boot-actuator%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fboot%2Factuate%2Fsolr%2FSolrHealthIndicator.java"}},[s("code",[t._v("SolrHealthIndicator")])])]),s("td",[t._v("Checks that a Solr server is up.")])])])]),t._v(" "),s("p",[t._v("举个例子，如果你的应用使用 Redis，RedisHealthindicator 将被当作检查的一部分；如果使用 MongoDB，那么 MongoHealthIndicator 将被当作检查的一部分。")]),t._v(" "),s("p",[t._v("可以在配置文件中关闭特定的健康检查指标，比如关闭 redis 的健康检查：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("management:\n  health:\n    redise:\n      enabled: false\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("默认，所有的这些健康指标被当作健康检查的一部分。"),s("br"),t._v("\n自定义 HealthIndicator 健康检查"),s("br"),t._v("\n有时候需要提供自定义的健康状态检查信息，你可以通过实现 HealthIndicator 的接口来实现，并将该实现类注册为 spring bean。你需要实现其中的 health() 方法，并返回自定义的健康状态响应信息，该响应信息应该包括一个状态码和要展示详细信息。例如，下面就是一个接口 HealthIndicator 的实现类：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('@Component\npublic class MyHealthIndicator implements HealthIndicator {\n\n    @Override\n    public Health health() {\n        int errorCode = check(); // perform some specific health check\n        if (errorCode != 0) {\n            return Health.down().withDetail("Error Code", errorCode).build();\n        }\n        return Health.up().build();\n    }\n\n}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("p",[t._v("另外，除了 Spring boot 定义的几个状态类型，我们也可以自定义状态类型，用来表示一个新的系统状态。在这种情况下，你还需要实现接口 HealthAggregator ，或者通过配置 management.health.status.order 来继续使用 HealthAggregator 的默认实现。")]),t._v(" "),s("p",[t._v("例如，在你自定义的健康检查 HealthIndicator 的实现类中，使用了自定义的状态类型 FATAL，为了配置该状态类型的严重程度，你需要在 application 的配置文件中添加如下配置：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("management:\n  health:\n    status:\n      order: FATAL, DOWN, OUT_OF_SERVICE, UNKNOWN, UP\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("在做健康检查时，响应中的 HTTP 状态码反应了整体的健康状态，（例如，UP 对应 200, 而 OUT_OF_SERVICE 和 DOWN 对应 503）。同样，你也需要为自定义的状态类型设置对应的 HTTP 状态码，例如，下面的配置可以将 FATAL 映射为 503（服务不可用）：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("management:\n  health:\n    status:\n      http-mapping:\n        FATAL: 503\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("下面是内置健康状态类型对应的 HTTP 状态码列表：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Status")]),s("th",[t._v("Mapping")])])]),s("tbody",[s("tr",[s("td",[t._v("OUT_OF_SERVICE")]),s("td",[t._v("SERVICE_UNAVAILABLE (503)")])]),s("tr",[s("td",[t._v("DOWN")]),s("td",[t._v("SERVICE_UNAVAILABLE (503)")])]),s("tr",[s("td",[t._v("UP")]),s("td",[t._v("No mapping by default, so http status is 200")])]),s("tr",[s("td",[t._v("UNKNOWN")]),s("td",[t._v("No mapping by default, so http status is 200")])])])]),t._v(" "),s("h4",{attrs:{id:"info"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#info"}},[t._v("#")]),t._v(" info")]),t._v(" "),s("p",[t._v("info 就是我们自己配置在配置文件中以 info 开头的配置信息，比如我们在示例项目中的配置是：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("info:\n  app:\n    name:\n      spring-boot-actuator\n    version: 1.0.0\n    test: test\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("启动示例项目，访问：http://localhost:8080/actuator/info 返回部分信息如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n  "app": {\n    "name": "spring-boot-actuator",\n    "version": "1.0.0",\n    "test":"test"\n  }\n}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h4",{attrs:{id:"beans"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beans"}},[t._v("#")]),t._v(" beans")]),t._v(" "),s("p",[t._v("根据示例就可以看出，展示了 bean 的别名、类型、是否单例、类的地址、依赖等信息。")]),t._v(" "),s("p",[t._v("启动示例项目，访问："),s("code",[t._v("http://localhost:8080/actuator/beans")]),t._v("返回部分信息如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('[\n  {\n    "context": "application:8080:management",\n    "parent": "application:8080",\n    "beans": [\n      {\n        "bean": "embeddedServletContainerFactory",\n        "aliases": [\n          \n        ],\n        "scope": "singleton",\n        "type": "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory",\n        "resource": "null",\n        "dependencies": [\n          \n        ]\n      },\n      {\n        "bean": "endpointWebMvcChildContextConfiguration",\n        "aliases": [\n          \n        ],\n        "scope": "singleton",\n        "type": "org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration$$EnhancerBySpringCGLIB$$a4a10f9d",\n        "resource": "null",\n        "dependencies": [\n          \n        ]\n      }\n  }\n]\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br")])]),s("h4",{attrs:{id:"conditions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conditions"}},[t._v("#")]),t._v(" conditions")]),t._v(" "),s("p",[t._v("Spring Boot 的自动配置功能非常便利，但有时候也意味着出问题比较难找出具体的原因。使用 conditions 可以在应用运行时查看代码了某个配置在什么条件下生效，或者某个自动配置为什么没有生效。")]),t._v(" "),s("p",[t._v("启动示例项目，访问：http://localhost:8080/actuator/conditions 返回部分信息如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n    "positiveMatches": {\n     "DevToolsDataSourceAutoConfiguration": {\n            "notMatched": [\n                {\n                    "condition": "DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition", \n                    "message": "DevTools DataSource Condition did not find a single DataSource bean"\n                }\n            ], \n            "matched": [ ]\n        }, \n        "RemoteDevToolsAutoConfiguration": {\n            "notMatched": [\n                {\n                    "condition": "OnPropertyCondition", \n                    "message": "@ConditionalOnProperty (spring.devtools.remote.secret) did not find property \'secret\'"\n                }\n            ], \n            "matched": [\n                {\n                    "condition": "OnClassCondition", \n                    "message": "@ConditionalOnClass found required classes \'javax.servlet.Filter\', \'org.springframework.http.server.ServerHttpRequest\'; @ConditionalOnMissingClass did not find unwanted class"\n                }\n            ]\n        }\n    }\n}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br")])]),s("h4",{attrs:{id:"heapdump"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#heapdump"}},[t._v("#")]),t._v(" heapdump")]),t._v(" "),s("p",[t._v("返回一个 GZip 压缩的 JVM 堆 dump")]),t._v(" "),s("p",[t._v("启动示例项目，访问：http://localhost:8080/actuator/heapdump 会自动生成一个 Jvm 的堆文件 heapdump，我们可以使用 JDK 自带的 Jvm 监控工具 VisualVM 打开此文件查看内存快照。类似如下图："),s("br"),t._v("\n![](../.vuepress/public/Spring boot/3d227e0c83d7214283e27d3e20ce015d.png)")]),t._v(" "),s("h4",{attrs:{id:"shutdown"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shutdown"}},[t._v("#")]),t._v(" shutdown")]),t._v(" "),s("p",[t._v("开启接口优雅关闭 Spring Boot 应用，要使用这个功能首先需要在配置文件中开启：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("management:\n  endpoint:\n    shutdown:\n      enabled: true\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("配置完成之后，启动示例项目，使用 curl 模拟 post 请求访问 shutdown 接口。")]),t._v(" "),s("blockquote",[s("p",[t._v("shutdown 接口默认只支持 post 请求。")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('curl -X POST "http://localhost:8080/actuator/shutdown" \n{\n    "message": "Shutting down, bye..."\n}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("此时你会发现应用已经被关闭。")]),t._v(" "),s("h4",{attrs:{id:"mappings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mappings"}},[t._v("#")]),t._v(" mappings")]),t._v(" "),s("p",[t._v("描述全部的 URI 路径，以及它们和控制器的映射关系")]),t._v(" "),s("p",[t._v("启动示例项目，访问："),s("code",[t._v("http://localhost:8080/actuator/mappings")]),t._v("返回部分信息如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n  "/**/favicon.ico": {\n    "bean": "faviconHandlerMapping"\n  },\n  "{[/hello]}": {\n    "bean": "requestMappingHandlerMapping",\n    "method": "public java.lang.String com.neo.controller.HelloController.index()"\n  },\n  "{[/error]}": {\n    "bean": "requestMappingHandlerMapping",\n    "method": "public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"\n  }\n}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("h4",{attrs:{id:"threaddump"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threaddump"}},[t._v("#")]),t._v(" threaddump")]),t._v(" "),s("p",[t._v("/threaddump 接口会生成当前线程活动的快照。这个功能非常好，方便我们在日常定位问题的时候查看线程的情况。 主要展示了线程名、线程 ID、线程的状态、是否等待锁资源等信息。")]),t._v(" "),s("p",[t._v("启动示例项目，访问：http://localhost:8080/actuator/threaddump 返回部分信息如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('[\n  {\n    "threadName": "http-nio-8088-exec-6",\n    "threadId": 49,\n    "blockedTime": -1,\n    "blockedCount": 0,\n    "waitedTime": -1,\n    "waitedCount": 2,\n    "lockName": "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@1630a501",\n    "lockOwnerId": -1,\n    "lockOwnerName": null,\n    "inNative": false,\n    "suspended": false,\n    "threadState": "WAITING",\n    "stackTrace": [\n      {\n        "methodName": "park",\n        "fileName": "Unsafe.java",\n        "lineNumber": -2,\n        "className": "sun.misc.Unsafe",\n        "nativeMethod": true\n      },\n      ...\n      {\n        "methodName": "run",\n        "fileName": "TaskThread.java",\n        "lineNumber": 61,\n        "className": "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable",\n        "nativeMethod": false\n      }\n      ...\n    ],\n    "lockInfo": {\n      "className": "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject",\n      "identityHashCode": 372286721\n    }\n  }\n  ...\n]\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br")])]),s("p",[t._v("生产出现问题的时候，可以通过应用的线程快照来检测应用正在执行的任务。")]),t._v(" "),s("h4",{attrs:{id:"loggers-端点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loggers-端点"}},[t._v("#")]),t._v(" loggers 端点")]),t._v(" "),s("p",[t._v("访问 "),s("code",[t._v("http://localhost:8080/actuator/loggers")]),t._v(" 可以查看当前应用的日志级别等信息：")]),t._v(" "),s("p",[t._v("![](../.vuepress/public/Spring boot/5b69988f044a9bd4123d431c09cf3ac7.png)")]),t._v(" "),s("p",[t._v("这里面本身并不特别，但是有一个功能却非常有用，比如我们生产环境日志级别一般都是 "),s("code",[t._v("info")]),t._v("，但是现在有一个 "),s("code",[t._v("bug")]),t._v(" 通过 "),s("code",[t._v("info")]),t._v(" 级别无法排查，那么我们就可以临时修改 "),s("code",[t._v("log")]),t._v(" 级别。")]),t._v(" "),s("p",[t._v("比如上图中的 "),s("code",[t._v("ROOT")]),t._v(" 节点是 "),s("code",[t._v("info")]),t._v(" 级别，那么我们可以通过 "),s("code",[t._v("postman")]),t._v(" 等工具来发一个 "),s("code",[t._v("post")]),t._v(" 请求修改日志级别。")]),t._v(" "),s("p",[t._v("![](../.vuepress/public/Spring boot/125a150ffd4c1e0c4c78ab68d916d50d.png)")]),t._v(" "),s("p",[t._v("修改之后就会发现，日志由原来的 "),s("code",[t._v("info")]),t._v(" 变成了 "),s("code",[t._v("debug")]),t._v("：")]),t._v(" "),s("p",[t._v("![](../.vuepress/public/Spring boot/7326262f9d9f1892d0dd030fb182c691.png)")]),t._v(" "),s("h4",{attrs:{id:"metrics-端点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#metrics-端点"}},[t._v("#")]),t._v(" metrics 端点")]),t._v(" "),s("p",[s("code",[t._v("metrics")]),t._v(" 是一个非常重要的监控端点，其监控内容覆盖了 "),s("code",[t._v("JVM")]),t._v(" 内存、堆、类加载、处理器和 "),s("code",[t._v("tomcat")]),t._v(" 容器等一些重要指标：")]),t._v(" "),s("p",[t._v("![](../.vuepress/public/Spring boot/88780edd9c9a45dd3a8366f0c2f390da.png)")]),t._v(" "),s("p",[t._v("可以看到这里面包含了非常多的指标，任意访问一个指标就可以查看对应的指标信息：")]),t._v(" "),s("p",[t._v("![](../.vuepress/public/Spring boot/0b648eca193d4498a704e71f1d9e367d.png)")]),t._v(" "),s("h3",{attrs:{id:"自定义-endpoint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义-endpoint"}},[t._v("#")]),t._v(" 自定义 Endpoint")]),t._v(" "),s("p",[t._v("自定义配置来控制是否开启过滤")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("actuator:\n  filter:\n    switch: false\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"自定义监控端点常用注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义监控端点常用注解"}},[t._v("#")]),t._v(" 自定义监控端点常用注解")]),t._v(" "),s("p",[t._v("自定义一个监控端点主要有如下常用注解：")]),t._v(" "),s("ul",[s("li",[t._v("@Endpoint：定义一个监控端点，同时支持 "),s("code",[t._v("HTTP")]),t._v(" 和 "),s("code",[t._v("JMX")]),t._v(" 两种方式。")]),t._v(" "),s("li",[t._v("@WebEndpoint：定义一个监控端点，只支持 "),s("code",[t._v("HTTP")]),t._v(" 方式。")]),t._v(" "),s("li",[t._v("@JmxEndpoint：定义一个监控端点，只支持 "),s("code",[t._v("JMX")]),t._v(" 方式。")])]),t._v(" "),s("p",[t._v("以上三个注解作用在类上，表示当前类是一个监控端点，另外还有一些注解会用在方法和参数上：")]),t._v(" "),s("ul",[s("li",[t._v("@ReadOperation：作用在方法上，可用来返回端点展示的信息（通过 "),s("code",[t._v("Get")]),t._v(" 方法请求）。")]),t._v(" "),s("li",[t._v("@WriteOperation：作用在方法上，可用来修改端点展示的信息（通过 "),s("code",[t._v("Post")]),t._v(" 方法请求）。")]),t._v(" "),s("li",[t._v("@DeleteOperation：作用在方法上，可用来删除对应端点信息（通过 "),s("code",[t._v("Delete")]),t._v(" 方法请求）。")]),t._v(" "),s("li",[t._v("@Selector：作用在参数上，用来定位一个端点的具体指标路由。")])]),t._v(" "),s("p",[t._v("一般情况下，是没必要自定义 Endpoint 的，但是也不排除特殊情况，我这里自定义一个 Endpoint，用来往 request 里放一个 user 对象，这个 user 是用来做测试的，用于下面突破 filter 用的（下面再说），这里先说怎么增查这个 user。")]),t._v(" "),s("p",[t._v("过程如下： - 使用 @Endpoint 注解相应的类，作为 Actuator 的一个 endpoint。注解要指定 id，这个 id 作为访问路径，比如这里是 / actuator/super； - @ReadOperation 来注解查询接口，如果要根据路径做查询，要用 @Selector 注解方法参数；"),s("strong",[t._v("注意这地方是"),s("code",[t._v("@Selector String arg0")]),t._v("，这个 arg0 不能改变，改成其他的，开放出去的接口还是 /{arg0}，这就导致你的方法无法正常获取参数值。")]),t._v(" - @WriteOperation 来注解修改接口，注意请求数据必须是 json，而且参数不像 controller 中那么灵活，不能将实体作为参数，要把实体中相应的属性拿出来做参数。 - 这里在增加用户时，往 request 里放一个 user 对象。")]),t._v(" "),s("p",[t._v("SuperEndPoint :")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('package com.cff.springbootwork.actuator.endpoint;\n\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.concurrent.ConcurrentHashMap;\n\nimport javax.servlet.http.HttpServletRequest;\n\nimport org.springframework.boot.actuate.endpoint.annotation.Endpoint;\nimport org.springframework.boot.actuate.endpoint.annotation.ReadOperation;\nimport org.springframework.boot.actuate.endpoint.annotation.Selector;\nimport org.springframework.boot.actuate.endpoint.annotation.WriteOperation;\nimport org.springframework.web.context.request.RequestContextHolder;\nimport org.springframework.web.context.request.ServletRequestAttributes;\n\n@Endpoint(id = "super")\npublic class SuperEndPoint {\n    private Map<String, SuperUser> users = new ConcurrentHashMap<>();\n\n    @ReadOperation\n    public Set<String> users() {\n        return users.keySet();\n    }\n\n    @ReadOperation\n    public SuperUser usersIdentify(@Selector String arg0) {\n        return users.get(arg0);\n    }\n\n    @WriteOperation\n    public Set<String> set(String userName, String passwd) {\n        HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes())\n                .getRequest();\n        if (request != null) {\n            SuperUser superUser = new SuperUser();\n            superUser.setUserName(userName);\n            superUser.setPasswd(passwd);\n            request.getSession().setAttribute("superUser", superUser);\n\n            users.put(superUser.getUserName(), superUser);\n        }\n\n        return users.keySet();\n    }\n\n    public static class SuperUser {\n        private String userName;\n        private String passwd;\n\n        public String getUserName() {\n            return userName;\n        }\n\n        public void setUserName(String userName) {\n            this.userName = userName;\n        }\n\n        public String getPasswd() {\n            return passwd;\n        }\n\n        public void setPasswd(String passwd) {\n            this.passwd = passwd;\n        }\n    }\n}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br"),s("span",{staticClass:"line-number"},[t._v("61")]),s("br"),s("span",{staticClass:"line-number"},[t._v("62")]),s("br"),s("span",{staticClass:"line-number"},[t._v("63")]),s("br"),s("span",{staticClass:"line-number"},[t._v("64")]),s("br"),s("span",{staticClass:"line-number"},[t._v("65")]),s("br"),s("span",{staticClass:"line-number"},[t._v("66")]),s("br")])]),s("p",[s("strong",[t._v("还要将 Endpoint 注册为 bean")])]),t._v(" "),s("p",[t._v("MvcEndPointConfig:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("package com.cff.springbootwork.actuator;\n\nimport org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnEnabledEndpoint;\nimport org.springframework.boot.web.servlet.ServletComponentScan;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\nimport com.cff.springbootwork.actuator.endpoint.SuperEndPoint;\n\n@Configuration\n@ServletComponentScan \npublic class MvcEndPointConfig {\n\n    @Bean\n    @ConditionalOnEnabledEndpoint\n    public SuperEndPoint superEndPoint() {\n        return new SuperEndPoint();\n    }\n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br")])]),s("h1",{attrs:{id:"使用-filter-对访问-actuator-做限制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-filter-对访问-actuator-做限制"}},[t._v("#")]),t._v(" 使用 Filter 对访问 actuator 做限制")]),t._v(" "),s("p",[t._v("上面已经说了，actuator 的接口要做保护，我这里就用 filter 对接口做最简单的保护。")]),t._v(" "),s("ul",[s("li",[t._v("对 / actuator/* 下所有路径做过滤, 并用 actuator.filter.switch 属性对 filter 做开关；")]),t._v(" "),s("li",[t._v("如果时 /actuator/super 路径的 post 操作，放行它，它将会往 request 中放一个对象；")]),t._v(" "),s("li",[t._v("其他 / actuator/* 下路径要判断 request 中有没有 user 对象，没有就返回错误提示。")])]),t._v(" "),s("p",[t._v("ActuatorPermissionFilter ：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('package com.cff.springbootwork.actuator.filter;\n\nimport java.io.IOException;\n\nimport javax.servlet.Filter;\nimport javax.servlet.FilterChain;\nimport javax.servlet.FilterConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.ServletRequest;\nimport javax.servlet.ServletResponse;\nimport javax.servlet.annotation.WebFilter;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.http.HttpMethod;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.MediaType;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\n@WebFilter(urlPatterns = "/actuator/*", filterName = "actuatorPermissionFilter")\n@Order(1) // 指定过滤器的执行顺序,值越大越靠后执行\npublic class ActuatorPermissionFilter implements Filter {\n    private String excludePath = "actuator/super";\n    @Value("${actuator.filter.switch}")\n    Boolean actuatorSwitch;\n\n    @Override\n    public void init(FilterConfig filterConfig) {\n\n    }\n\n    @Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)\n            throws IOException, ServletException {\n        HttpServletRequest request = (HttpServletRequest) servletRequest;\n        HttpServletResponse response = (HttpServletResponse) servletResponse;\n        if (actuatorSwitch && !(request.getRequestURI().endsWith(excludePath)\n                && request.getMethod().equals(HttpMethod.POST.toString()))) {\n            Object user = request.getSession().getAttribute("superUser");\n            if (user == null) {\n                // 未登录,返回数据\n                ObjectMapper mapper = new ObjectMapper();\n                response.setStatus(HttpStatus.OK.value());\n                response.setContentType(MediaType.APPLICATION_JSON_UTF8_VALUE);\n                mapper.writeValue(response.getWriter(), "您没有权限访问该接口，请使用自定义的登录接口设置superUser后使用！");\n                return;\n            }\n        }\n        filterChain.doFilter(servletRequest, servletResponse);\n\n    }\n\n    @Override\n    public void destroy() {\n    }\n\n}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br")])]),s("h3",{attrs:{id:"spring-boot-monitor-做监控页面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-monitor-做监控页面"}},[t._v("#")]),t._v(" Spring Boot Monitor 做监控页面")]),t._v(" "),s("p",[t._v("额外引入依赖")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<dependency>\n    <groupId>cn.pomit</groupId>\n    <artifactId>spring-boot-monitor</artifactId>\n    <version>0.0.1</version>\n</dependency>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//www.pomit.cn/SpringBootMonitor/%23/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Boot Monitor"),s("OutboundLink")],1),t._v(" 是一个对 Spring boot admin 监控工具做修改并适配单机的监控工具，完美继承了 Spring boot admin 的风格，直接使用 actuator 的指标进行显示。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//www.pomit.cn/SpringBootMonitor/%23/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Boot Monitor"),s("OutboundLink")],1),t._v(" 官网："),s("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//www.pomit.cn/SpringBootMonitor/%23/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.pomit.cn/SpringBootMonitor"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("前面 maven 依赖中，已经说明依赖"),s("code",[t._v("spring-boot-monitor")]),t._v("，这时，无需其他配置.")]),t._v(" "),s("p",[t._v("访问"),s("code",[t._v("http://127.0.0.1:8080/monitor")]),t._v("， 自动跳转到 Spring Boot Monitor 的监控页面。")]),t._v(" "),s("p",[t._v("![](../.vuepress/public/Spring boot/97f762464c0fde7daab14c7d1ee85b25.png)")]),t._v(" "),s("p",[t._v("Spring Boot Monitor 的监控页面和 Spring boot admin 的一模一样，前端的功能也一模一样。")]),t._v(" "),s("p",[t._v("![](../.vuepress/public/Spring boot/2eda616356aa0437d327e6c388b012f1.png)")]),t._v(" "),s("p",[t._v("可以对 Spring boot 的各项指标一目了然，还可以进行简单的操作。")]),t._v(" "),s("p",[t._v("当然，如果 Spring boot actuator 的指标被限制了，它也拿不到相应的指标了，因为它是直接请求 actuator 接口的。")]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://my.oschina.net/iyinghui/blog/1835220",target:"_blank",rel:"noopener noreferrer"}},[t._v("spring boot 2 使用 actuator 404 的问题"),s("OutboundLink")],1),s("br"),t._v("\n使用 actuator 的指标进行显示。")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//www.pomit.cn/SpringBootMonitor/%23/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Boot Monitor"),s("OutboundLink")],1),t._v(" 官网："),s("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//www.pomit.cn/SpringBootMonitor/%23/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.pomit.cn/SpringBootMonitor"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("前面 maven 依赖中，已经说明依赖"),s("code",[t._v("spring-boot-monitor")]),t._v("，这时，无需其他配置.")]),t._v(" "),s("p",[t._v("访问"),s("code",[t._v("http://127.0.0.1:8080/monitor")]),t._v("， 自动跳转到 Spring Boot Monitor 的监控页面。")]),t._v(" "),s("p",[t._v("[外链图片转存中…(img-Naa3Zjvk-1642576052461)]")]),t._v(" "),s("p",[t._v("Spring Boot Monitor 的监控页面和 Spring boot admin 的一模一样，前端的功能也一模一样。")]),t._v(" "),s("p",[t._v("[外链图片转存中…(img-EaAoMOpX-1642576052462)]")]),t._v(" "),s("p",[t._v("可以对 Spring boot 的各项指标一目了然，还可以进行简单的操作。")]),t._v(" "),s("p",[t._v("当然，如果 Spring boot actuator 的指标被限制了，它也拿不到相应的指标了，因为它是直接请求 actuator 接口的。")]),t._v(" "),s("h2",{attrs:{id:"参考-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考-2"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://my.oschina.net/iyinghui/blog/1835220",target:"_blank",rel:"noopener noreferrer"}},[t._v("spring boot 2 使用 actuator 404 的问题"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/alinyua/article/details/80009435",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Boot 2.0 官方文档之 Actuator"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);