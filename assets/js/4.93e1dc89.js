(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{1101:function(a,e,s){a.exports=s.p+"assets/img/image-20231018213022705.14557636.png"},1102:function(a,e,s){a.exports=s.p+"assets/img/image-20231018213343661.f956adf4.png"},1103:function(a,e,s){a.exports=s.p+"assets/img/image-20231018213720969.f88d1a86.png"},1104:function(a,e,s){a.exports=s.p+"assets/img/image-20231018213809282.7fc47142.png"},1105:function(a,e,s){a.exports=s.p+"assets/img/image-20231018213935354.1776d4b6.png"},1106:function(a,e,s){a.exports=s.p+"assets/img/image-20231018214156479.aa06154d.png"},1107:function(a,e,s){a.exports=s.p+"assets/img/image-20231018214442255.d4ad3816.png"},1108:function(a,e,s){a.exports=s.p+"assets/img/image-20231018214757169.be77d28f.png"},1109:function(a,e,s){a.exports=s.p+"assets/img/image-20231018215103225.82dc6e17.png"},1110:function(a,e,s){a.exports=s.p+"assets/img/image-20231018215118634.048cfcff.png"},1111:function(a,e,s){a.exports=s.p+"assets/img/image-20231018215322636.f46526d6.png"},1112:function(a,e,s){a.exports=s.p+"assets/img/image-20231018215524645.cd3f4e91.png"},1113:function(a,e,s){a.exports=s.p+"assets/img/image-20231018215635419.55348bd6.png"},1114:function(a,e,s){a.exports=s.p+"assets/img/image-20231018215841189.840dddc3.png"},1115:function(a,e,s){a.exports=s.p+"assets/img/image-20231018220037705.6af903cd.png"},1116:function(a,e,s){a.exports=s.p+"assets/img/image-20231018220240966.c7b712fa.png"},1117:function(a,e,s){a.exports=s.p+"assets/img/image-20231018220529632.a8eed827.png"},1118:function(a,e,s){a.exports=s.p+"assets/img/image-20231018223008124.68891ace.png"},1119:function(a,e,s){a.exports=s.p+"assets/img/image-20231018223102543.bc482023.png"},1120:function(a,e,s){a.exports=s.p+"assets/img/image-20231018223226338.7accde9c.png"},1121:function(a,e,s){a.exports=s.p+"assets/img/image-20231018223320448.1e5e1bdf.png"},1122:function(a,e,s){a.exports=s.p+"assets/img/image-20231018223441743.2e0ce40b.png"},1123:function(a,e,s){a.exports=s.p+"assets/img/image-20231018223556086.b5c19f93.png"},1124:function(a,e,s){a.exports=s.p+"assets/img/image-20231018223604733.67d90b2d.png"},1125:function(a,e,s){a.exports=s.p+"assets/img/wps1-1212123012012102102.ccd1611c.jpg"},1126:function(a,e,s){a.exports=s.p+"assets/img/wps2-20131010118iwheqijeq.c5a1b07d.jpg"},1127:function(a,e,s){a.exports=s.p+"assets/img/image-20231018224209311.dff34eb5.png"},1128:function(a,e,s){a.exports=s.p+"assets/img/image-20231018224538034.0d5a5457.png"},1129:function(a,e,s){a.exports=s.p+"assets/img/image-20231018224640214.c3fec45b.png"},1130:function(a,e,s){a.exports=s.p+"assets/img/image-20231018224904768.a9b22df4.png"},1131:function(a,e,s){a.exports=s.p+"assets/img/image-20231018224941114.06b89c67.png"},1132:function(a,e,s){a.exports=s.p+"assets/img/image-20231018225115330.94cf64e0.png"},1133:function(a,e,s){a.exports=s.p+"assets/img/image-20231018230009065.f4f32b89.png"},1134:function(a,e,s){a.exports=s.p+"assets/img/image-20231018230015070.1ba522e7.png"},1519:function(a,e,s){"use strict";s.r(e);var n=s(4),t=Object(n.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"第-12-章-企业级调优"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第-12-章-企业级调优"}},[a._v("#")]),a._v(" 第 12 章 企业级调优")]),a._v(" "),e("h2",{attrs:{id:"_12-1-计算资源配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-计算资源配置"}},[a._v("#")]),a._v(" 12.1 计算资源配置")]),a._v(" "),e("p",[a._v("本教程的计算环境为 Hive on MR。计算资源的调整主要包括 Yarn 和 MR。")]),a._v(" "),e("h3",{attrs:{id:"_12-1-1-yarn-资源配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-1-yarn-资源配置"}},[a._v("#")]),a._v(" 12.1.1 Yarn 资源配置")]),a._v(" "),e("h4",{attrs:{id:"_1-yarn-配置说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-yarn-配置说明"}},[a._v("#")]),a._v(" 1）Yarn 配置说明")]),a._v(" "),e("p",[a._v("需要调整的 Yarn 参数均与 CPU、内存等资源有关，核心配置参数如下")]),a._v(" "),e("p",[a._v("（1）yarn.nodemanager.resource.memory-mb")]),a._v(" "),e("p",[a._v("该参数的含义是，一个 NodeManager 节点分配给 Container 使用的总内存（默认8G）。该参数的配置，取决于 NodeManager 所在节点的总内存容量和该节点运行的其他服务的数量。\n考虑上述因素，此处可将该参数设置为 "),e("strong",[a._v("64G(总内存的1/2 ~ 1/3)具体要看其他服务占用")]),a._v("，如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("<property>\n    <name>yarn.nodemanager.resource.memory-mb</name>\n    <value>65536</value>\n</property>\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("（2）yarn.nodemanager.resource.cpu-vcores")]),a._v(" "),e("p",[a._v("该参数的含义是，一个 NodeManager 节点分配给 Container 使用的 CPU 核数**（默认每台8核）**。该参数的配置，同样取决于 NodeManager 所在节点的总 CPU 核数和该节点运行的其他服务。\n考虑上述因素，此处可将该参数设置为 16（"),e("strong",[a._v("考虑具体node核心数，以及其他程序占比）。一般 cpu比内存为 1:4")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("<property>\n    <name>yarn.nodemanager.resource.cpu-vcores</name>\n    <value>16</value>\n</property>\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("（3）yarn.scheduler.maximum-allocation-mb")]),a._v(" "),e("p",[a._v("该参数的含义是，"),e("strong",[a._v("单个")]),a._v(" Container 能够使用的最大内存。推荐配置如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("<property>\n    <name>yarn.scheduler.maximum-allocation-mb</name>\n    <value>16384</value>\n</property>\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("（4）yarn.scheduler.minimum-allocation-mb")]),a._v(" "),e("p",[a._v("该参数的含义是，单个 Container 能够使用的最小内存，推荐配置如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("<property>\n    <name>yarn.scheduler.minimum-allocation-mb</name>\n    <value>512</value>\n</property>\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("h4",{attrs:{id:"_2-yarn-配置实操"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-yarn-配置实操"}},[a._v("#")]),a._v(" 2）Yarn 配置实操")]),a._v(" "),e("p",[a._v("（1）修改$HADOOP_HOME/etc/hadoop/yarn-site.xml 文件")]),a._v(" "),e("p",[a._v("（2）修改如下参数")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("<property>\n    <name>yarn.nodemanager.resource.memory-mb</name>\n    <value>65536</value>\n</property>\n<property>\n    <name>yarn.nodemanager.resource.cpu-vcores</name>\n    <value>16</value>\n</property>\n<property>\n    <name>yarn.scheduler.maximum-allocation-mb</name>\n    <value>16384</value>\n</property>\n<property>\n    <name>yarn.scheduler.minimum-allocation-mb</name>\n    <value>512</value>\n</property>\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br")])]),e("p",[a._v("（3）分发该配置文件\n（4）重启 Yarn。")]),a._v(" "),e("h3",{attrs:{id:"_12-1-2-mapreduce-资源配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-2-mapreduce-资源配置"}},[a._v("#")]),a._v(" 12.1.2 MapReduce 资源配置")]),a._v(" "),e("p",[a._v("MapReduce 资源配置主要包括 Map Task 的内存和 CPU 核数，以及 Reduce Task 的内存和 CPU 核数。核心配置参数如下：")]),a._v(" "),e("h4",{attrs:{id:"_1-mapreduce-map-memory-mb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-mapreduce-map-memory-mb"}},[a._v("#")]),a._v(" 1）mapreduce.map.memory.mb")]),a._v(" "),e("p",[a._v("该参数的含义是，单个 Map Task 申请的 container 容器内存大小，"),e("strong",[a._v("其默认值为 1024")]),a._v("。该值不能超出"),e("code",[a._v("yarn.scheduler.maximum-allocation-mb")]),a._v("和"),e("code",[a._v("yarn.scheduler.minimum-allocation-mb")]),a._v("规定的范围。")]),a._v(" "),e("p",[a._v("该参数需要根据不同的计算任务单独进行配置，在 hive 中，可直接使用如下方式为每个 SQL 语句单独进行配置：（hive-site.xml）")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("set  mapreduce.map.memory.mb=2048;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h4",{attrs:{id:"_2-mapreduce-map-cpu-vcores"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-mapreduce-map-cpu-vcores"}},[a._v("#")]),a._v(" 2）mapreduce.map.cpu.vcores")]),a._v(" "),e("p",[a._v("该参数的含义是，单个 Map Task 申请的 container 容器 cpu 核数，其默认值为 1。该值一般无需调整。")]),a._v(" "),e("h4",{attrs:{id:"_3-mapreduce-reduce-memory-mb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-mapreduce-reduce-memory-mb"}},[a._v("#")]),a._v(" 3）mapreduce.reduce.memory.mb")]),a._v(" "),e("p",[a._v("该参数的含义是，单个 Reduce Task 申请的 container 容器内存大小，"),e("strong",[a._v("其默认值为 1024")]),a._v("。该值同样不能超出"),e("code",[a._v("yarn.scheduler.maximum-allocation-mb")]),a._v("和"),e("code",[a._v("yarn.scheduler.minimum-allocation-mb")]),a._v("规定的范围。")]),a._v(" "),e("p",[a._v("该参数需要根据不同的计算任务单独进行配置，在 hive 中，可直接使用如下方式为每个 SQL 语句单独进行配置：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("set  mapreduce.reduce.memory.mb=2048;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h4",{attrs:{id:"_4-mapreduce-reduce-cpu-vcores"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-mapreduce-reduce-cpu-vcores"}},[a._v("#")]),a._v(" 4）mapreduce.reduce.cpu.vcores")]),a._v(" "),e("p",[a._v("该参数的含义是，单个 Reduce Task 申请的 container 容器 cpu 核数，其默认值为 1。该值一般无需调整。")]),a._v(" "),e("h2",{attrs:{id:"_12-2-测试用表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-测试用表"}},[a._v("#")]),a._v(" 12.2 测试用表")]),a._v(" "),e("h3",{attrs:{id:"_12-2-1-订单表-2000w-条数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-1-订单表-2000w-条数据"}},[a._v("#")]),a._v(" 12.2.1 订单表(2000w 条数据)")]),a._v(" "),e("p",[e("strong",[a._v("1）表结构")])]),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[a._v("id(订单 id)")])]),a._v(" "),e("th",[e("strong",[a._v("user_id(用户 id)")])]),a._v(" "),e("th",[e("strong",[a._v("product_id(商品 id)")])]),a._v(" "),e("th",[e("strong",[a._v("province_id(省份 id)")])]),a._v(" "),e("th",[e("strong",[a._v("create_time(下单时间)")])]),a._v(" "),e("th",[e("strong",[a._v("product_num(商品 id)")])]),a._v(" "),e("th",[e("strong",[a._v("total_amount(订单金额)")])])])]),a._v(" "),e("tbody",[e("tr",[e("td",[e("strong",[a._v("10000001")])]),a._v(" "),e("td",[a._v("125442354")]),a._v(" "),e("td",[a._v("15003199")]),a._v(" "),e("td",[a._v("1")]),a._v(" "),e("td",[a._v("2020-06-14 03:54:29")]),a._v(" "),e("td",[a._v("3")]),a._v(" "),e("td",[a._v("100.58")])]),a._v(" "),e("tr",[e("td",[e("strong",[a._v("10000002")])]),a._v(" "),e("td",[a._v("192758405")]),a._v(" "),e("td",[a._v("17210367")]),a._v(" "),e("td",[a._v("1")]),a._v(" "),e("td",[a._v("2020-06-14 01:19:47")]),a._v(" "),e("td",[a._v("8")]),a._v(" "),e("td",[a._v("677.18")])])])]),a._v(" "),e("p",[e("strong",[a._v("2）建表语句")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\ndrop table if exists order_detail;\ncreate table order_detail(\n    id           string comment '订单id',\n    user_id      string comment '用户id',\n    product_id   string comment '商品id',\n    province_id  string comment '省份id',\n    create_time  string comment '下单时间',\n    product_num  int comment '商品件数',\n    total_amount decimal(16, 2) comment '下单金额'\n)\npartitioned by (dt string)\nrow format delimited fields terminated by '\\t';\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br")])]),e("p",[e("strong",[a._v("3）数据装载")])]),a._v(" "),e("p",[a._v("将 order_detail.txt 文件上传到 hadoop102 节点的/opt/module/hive/datas/目录，并执行以下导入语句。")]),a._v(" "),e("blockquote",[e("p",[a._v("注：文件较大，请耐心等待。")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nload data local inpath '/opt/module/hive/datas/order_detail.txt' overwrite into table order_detail partition(dt='2020-06-14');\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("12.2.2 支付表(600w 条数据)")]),a._v(" "),e("p",[e("strong",[a._v("1）表结构")])]),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[a._v("id(支付 id)")])]),a._v(" "),e("th",[e("strong",[a._v("order_detail_id(订单 id)")])]),a._v(" "),e("th",[e("strong",[a._v("user_id(用户 id)")])]),a._v(" "),e("th",[e("strong",[a._v("payment_time(支付时间)")])]),a._v(" "),e("th",[e("strong",[a._v("total_amount(订单金额)")])])])]),a._v(" "),e("tbody",[e("tr",[e("td",[e("strong",[a._v("10000001")])]),a._v(" "),e("td",[a._v("17403042")]),a._v(" "),e("td",[a._v("131508758")]),a._v(" "),e("td",[a._v("2020-06-14 13:55:44")]),a._v(" "),e("td",[a._v("391.72")])]),a._v(" "),e("tr",[e("td",[e("strong",[a._v("10000002")])]),a._v(" "),e("td",[a._v("19198884")]),a._v(" "),e("td",[a._v("133018075")]),a._v(" "),e("td",[a._v("2020-06-14 08:46:23")]),a._v(" "),e("td",[a._v("657.10")])])])]),a._v(" "),e("p",[e("strong",[a._v("2）建表语句")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\ndrop table if exists payment_detail;\ncreate table payment_detail(\n    id              string comment '支付id',\n    order_detail_id string comment '订单明细id',\n    user_id         string comment '用户id',\n    payment_time    string comment '支付时间',\n    total_amount    decimal(16, 2) comment '支付金额'\n)\npartitioned by (dt string)\nrow format delimited fields terminated by '\\t';\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br")])]),e("p",[e("strong",[a._v("3）数据装载")])]),a._v(" "),e("p",[a._v("将 payment_detail.txt 文件上传到 hadoop102 节点的/opt/module/hive/datas/目录，并执行以下导入语句。")]),a._v(" "),e("blockquote",[e("p",[a._v("注：文件较大，请耐心等待。")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nload data local inpath '/opt/module/hive/datas/payment_detail.txt' overwrite into table payment_detail partition(dt='2020-06-14');\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h3",{attrs:{id:"_12-2-3-商品信息表-100w-条数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-3-商品信息表-100w-条数据"}},[a._v("#")]),a._v(" 12.2.3 商品信息表(100w 条数据)")]),a._v(" "),e("p",[e("strong",[a._v("1）表结构")])]),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[a._v("id(商品 id)")])]),a._v(" "),e("th",[e("strong",[a._v("product_name(商品名称)")])]),a._v(" "),e("th",[e("strong",[a._v("price(价格)")])]),a._v(" "),e("th",[e("strong",[a._v("category_id(分类 id)")])])])]),a._v(" "),e("tbody",[e("tr",[e("td",[e("strong",[a._v("1000001")])]),a._v(" "),e("td",[e("strong",[a._v("CuisW")])]),a._v(" "),e("td",[e("strong",[a._v("4517.00")])]),a._v(" "),e("td",[e("strong",[a._v("219")])])]),a._v(" "),e("tr",[e("td",[e("strong",[a._v("1000002")])]),a._v(" "),e("td",[e("strong",[a._v("TBtbp")])]),a._v(" "),e("td",[e("strong",[a._v("9357.00")])]),a._v(" "),e("td",[e("strong",[a._v("208")])])])])]),a._v(" "),e("p",[e("strong",[a._v("2）建表语句")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\ndrop table if exists product_info;\ncreate table product_info(\n    id           string comment '商品id',\n    product_name string comment '商品名称',\n    price        decimal(16, 2) comment '价格',\n    category_id  string comment '分类id'\n)\nrow format delimited fields terminated by '\\t';\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br")])]),e("p",[e("strong",[a._v("3）数据装载")])]),a._v(" "),e("p",[a._v("将 product_info.txt 文件上传到 hadoop102 节点的/opt/module/hive/datas/目录，并执行以下导入语句")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nload data local inpath '/opt/module/hive/datas/product_info.txt' overwrite into table product_info;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h3",{attrs:{id:"_12-2-4-省份信息表-34-条数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-4-省份信息表-34-条数据"}},[a._v("#")]),a._v(" 12.2.4 省份信息表(34 条数据)")]),a._v(" "),e("p",[e("strong",[a._v("1）表结构")])]),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[a._v("id(省份 id)")])]),a._v(" "),e("th",[e("strong",[a._v("province_name(省份名称)")])])])]),a._v(" "),e("tbody",[e("tr",[e("td",[e("strong",[a._v("1")])]),a._v(" "),e("td",[e("strong",[a._v("北京")])])]),a._v(" "),e("tr",[e("td",[e("strong",[a._v("2")])]),a._v(" "),e("td",[e("strong",[a._v("天津")])])])])]),a._v(" "),e("p",[e("strong",[a._v("2）建表语句")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\ndrop table if exists province_info;\ncreate table province_info(\n    id            string comment '省份id',\n    province_name string comment '省份名称'\n)\nrow format delimited fields terminated by '\\t';\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("p",[a._v("3）数据装载\n将 province_info.txt 文件上传到 hadoop102 节点的/opt/module/hive/datas/目录，并执行以下导入语句。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nload data local inpath '/opt/module/hive/datas/province_info.txt' overwrite into table province_info;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h2",{attrs:{id:"_12-3-explain-查看执行计划-重点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-explain-查看执行计划-重点"}},[a._v("#")]),a._v(" 12.3 Explain 查看执行计划（重点）")]),a._v(" "),e("h3",{attrs:{id:"_12-3-1-explain-执行计划概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-1-explain-执行计划概述"}},[a._v("#")]),a._v(" 12.3.1 Explain 执行计划概述")]),a._v(" "),e("p",[a._v("Explain 呈现的执行计划，"),e("strong",[a._v("由一系列 Stage 组成")]),a._v("，这一系列 Stage 具有依赖关系，"),e("strong",[a._v("每个 Stage 对应一个 MapReduce Job")]),a._v("，或者一个文件系统操作等。\n若某个 Stage 对应的一个 MapReduce Job，其 Map 端和 Reduce 端的计算逻辑分别由 Map Operator Tree 和 Reduce Operator Tree 进行描述，Operator Tree 由一系列的 Operator 组成，一个 Operator 代表在 Map 或 Reduce 阶段的一个单一的逻辑操作，例如 TableScan Operator，Select Operator，Join Operator 等。")]),a._v(" "),e("p",[a._v("下图是由一个执行计划绘制而成：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1101),alt:"Explain执行计划概述"}})]),a._v(" "),e("p",[a._v("常见的 Operator 及其作用如下：")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("TableScan：表扫描操作，通常 map 端第一个操作肯定是表扫描操作")])]),a._v(" "),e("li",[e("p",[a._v("Select Operator：选取操作")])]),a._v(" "),e("li",[e("p",[a._v("Group By Operator：分组聚合操作")])]),a._v(" "),e("li",[e("p",[a._v("Reduce Output Operator：输出到 reduce 操作")])]),a._v(" "),e("li",[e("p",[a._v("Filter Operator：过滤操作")])]),a._v(" "),e("li",[e("p",[a._v("Join Operator：join 操作")])]),a._v(" "),e("li",[e("p",[a._v("File Output Operator：文件输出操作")])]),a._v(" "),e("li",[e("p",[a._v("Fetch Operator 客户端获取数据操作")])])]),a._v(" "),e("h3",{attrs:{id:"_12-3-2-基本语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-2-基本语法"}},[a._v("#")]),a._v(" 12.3.2 基本语法")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("EXPLAIN [FORMATTED | EXTENDED | DEPENDENCY] query-sql\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("注：FORMATTED、EXTENDED、DEPENDENCY 关键字为可选项，各自作用如下。")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("FORMATTED：将执行计划以 JSON 字符串的形式输出")])]),a._v(" "),e("li",[e("p",[a._v("EXTENDED：输出执行计划中的额外信息，通常是读写的文件名等信息")])]),a._v(" "),e("li",[e("p",[a._v("DEPENDENCY：输出执行计划读取的表及分区")])])]),a._v(" "),e("h3",{attrs:{id:"_12-3-3-案例实操"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-3-案例实操"}},[a._v("#")]),a._v(" 12.3.3 案例实操")]),a._v(" "),e("h4",{attrs:{id:"_1-查看下面这条语句的执行计划"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-查看下面这条语句的执行计划"}},[a._v("#")]),a._v(" 1）查看下面这条语句的执行计划")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nexplain\nselect\n    user_id,\n    count(*)\nfrom order_detail\ngroup by user_id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("h4",{attrs:{id:"_2-执行计划如下图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-执行计划如下图"}},[a._v("#")]),a._v(" 2）执行计划如下图")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1102),alt:"执行计划"}})]),a._v(" "),e("h2",{attrs:{id:"_12-4-hql-语法优化之分组聚合优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-hql-语法优化之分组聚合优化"}},[a._v("#")]),a._v(" 12.4 HQL 语法优化之分组聚合优化")]),a._v(" "),e("h3",{attrs:{id:"_12-4-1-优化说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-1-优化说明"}},[a._v("#")]),a._v(" 12.4.1 优化说明")]),a._v(" "),e("p",[a._v("Hive 中未经优化的分组聚合，是通过一个 MapReduce Job 实现的。Map 端负责读取数据，并按照分组字段分区，通过 Shuffle，将数据发往 Reduce 端，各组数据在 Reduce 端完成最终的聚合运算。")]),a._v(" "),e("p",[e("strong",[a._v("Hive 对分组聚合的优化")]),a._v("主要围绕着减少 Shuffle 数据量进行，具体做法是 map-side 聚合。所谓 map-side 聚合，就是在 map 端维护一个 hash table，利用其完成部分的聚合，然后将部分聚合的结果，按照分组字段分区，发送至 reduce 端，完成最终的聚合。map-side 聚合能有效减少 shuffle 的数据量，提高分组聚合运算的效率。")]),a._v(" "),e("p",[a._v("map-side 聚合相关的参数如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--启用map-side聚合\nset hive.map.aggr=true;\n\n--用于检测源表数据是否适合进行map-side聚合。检测的方法是：先对若干条数据进行map-side聚合，若聚合后的条数和聚合前的条数比值小于该值，则认为该表适合进行map-side聚合；否则，认为该表数据不适合进行map-side聚合，后续数据便不再进行map-side聚合。\nset hive.map.aggr.hash.min.reduction=0.5;\n\n--用于检测源表是否适合map-side聚合的条数。\nset hive.groupby.mapaggr.checkinterval=100000;\n\n--map-side聚合所用的hash table，占用map task堆内存的最大比例，若超出该值，则会对hash table进行一次flush。\nset hive.map.aggr.hash.force.flush.memory.threshold=0.9;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br")])]),e("h4",{attrs:{id:"_12-4-2-优化案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-2-优化案例"}},[a._v("#")]),a._v(" 12.4.2 优化案例")]),a._v(" "),e("h4",{attrs:{id:"_1-示例-sql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-示例-sql"}},[a._v("#")]),a._v(" 1）示例 SQL")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect\n    product_id,\n    count(*)\nfrom order_detail\ngroup by product_id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("h4",{attrs:{id:"_2-优化前"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-优化前"}},[a._v("#")]),a._v(" 2）优化前")]),a._v(" "),e("p",[a._v("未经优化的分组聚合，执行计划如下图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1103),alt:"image-20231018213720969"}})]),a._v(" "),e("h4",{attrs:{id:"_3-优化思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-优化思路"}},[a._v("#")]),a._v(" 3）优化思路")]),a._v(" "),e("p",[a._v("可以考虑开启 map-side 聚合，配置以下参数：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--启用map-side聚合，默认是true\nset hive.map.aggr=true;\n\n--用于检测源表数据是否适合进行map-side聚合。检测的方法是：先对若干条数据进行map-side聚合，若聚合后的条数和聚合前的条数比值小于该值，则认为该表适合进行map-side聚合；否则，认为该表数据不适合进行map-side聚合，后续数据便不再进行map-side聚合。\nset hive.map.aggr.hash.min.reduction=0.5;\n\n--用于检测源表是否适合map-side聚合的条数。\nset hive.groupby.mapaggr.checkinterval=100000;\n\n--map-side聚合所用的hash table，占用map task堆内存的最大比例，若超出该值，则会对hash table进行一次flush。\nset hive.map.aggr.hash.force.flush.memory.threshold=0.9;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br")])]),e("p",[a._v("优化后的执行计划如图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1104),alt:"image-20231018213809282"}})]),a._v(" "),e("h2",{attrs:{id:"_12-5-hql-语法优化之-join-优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-hql-语法优化之-join-优化"}},[a._v("#")]),a._v(" 12.5 HQL 语法优化之 Join 优化")]),a._v(" "),e("h3",{attrs:{id:"_12-5-1-join-算法概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-1-join-算法概述"}},[a._v("#")]),a._v(" 12.5.1 Join 算法概述")]),a._v(" "),e("p",[a._v("Hive 拥有多种 join 算法，包括 Common Join，Map Join，Bucket Map Join，Sort Merge Buckt Map Join 等，下面对每种 join 算法做简要说明：")]),a._v(" "),e("h4",{attrs:{id:"_1-common-join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-common-join"}},[a._v("#")]),a._v(" 1）Common Join")]),a._v(" "),e("p",[a._v("Common Join 是 Hive 中最稳定的 join 算法，其通过一个 MapReduce Job 完成一个 join 操作。Map 端负责读取 join 操作所需表的数据，并按照关联字段进行分区，通过 Shuffle，将其发送到 Reduce 端，相同 key 的数据在 Reduce 端完成最终的 Join 操作。如下图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1105),alt:"image-20231018213935354"}})]),a._v(" "),e("p",[a._v("需要"),e("strong",[a._v("注意")]),a._v("的是，sql 语句中的 join 操作和执行计划中的 Common Join 任务并非一对一的关系，一个 sql 语句中的"),e("strong",[a._v("相邻")]),a._v("的且"),e("strong",[a._v("关联字段相同")]),a._v("的多个 join 操作可以合并为一个 Common Join 任务。")]),a._v(" "),e("p",[a._v("例如：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect\n    a.val,\n    b.val,\n    c.val\nfrom a\njoin b on (a.key = b.key1)\njoin c on (c.key = b.key1)\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br")])]),e("p",[a._v("上述 sql 语句中两个 join 操作的关联字段均为 b 表的 key1 字段，则该语句中的两个 join 操作可由一个 Common Join 任务实现，也就是可通过一个 Map Reduce 任务实现。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect\n    a.val,\n    b.val,\n    c.val\nfrom a\njoin b on (a.key = b.key1)\njoin c on (c.key = b.key2)\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br")])]),e("p",[a._v("上述 sql 语句中的两个 join 操作关联字段各不相同，则该语句的两个 join 操作需要各自通过一个 Common Join 任务实现，也就是通过两个 Map Reduce 任务实现。")]),a._v(" "),e("h4",{attrs:{id:"_2-map-join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-map-join"}},[a._v("#")]),a._v(" 2）Map Join")]),a._v(" "),e("p",[a._v("Map Join 算法可以通过两个只有 map 阶段的 Job 完成一个 join 操作。其适用场景为大表 join 小表。若某 join 操作满足要求，则第一个 Job 会读取小表数据，将其制作为 hash table，并上传至 Hadoop 分布式缓存（本质上是上传至 HDFS）。第二个 Job 会先从分布式缓存中读取小表数据，并缓存在 Map Task 的内存中，然后扫描大表数据，这样在 map 端即可完成关联操作。如下图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1106),alt:"image-20231018214156479"}})]),a._v(" "),e("p",[a._v("3）Bucket Map Join")]),a._v(" "),e("p",[a._v("Bucket Map Join 是对 Map Join 算法的改进，其打破了 Map Join 只适用于大表 join 小表的限制，可用于大表 join 大表的场景。")]),a._v(" "),e("p",[a._v("Bucket Map Join 的核心思想是："),e("strong",[a._v("若能保证参与 join 的表均为分桶表")]),a._v("，且关联字段为分桶字段，且其中一张表的分桶数量是另外一张表分桶数量的整数倍，就能保证参与 join 的两张表的分桶之间具有明确的关联关系，所以就可以在两表的分桶间进行 Map Join 操作了。这样一来，第二个 Job 的 Map 端就无需再缓存小表的全表数据了，而只需缓存其所需的分桶即可。其原理如图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1107),alt:"image-20231018214442255"}})]),a._v(" "),e("h4",{attrs:{id:"_4-sort-merge-bucket-map-join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-sort-merge-bucket-map-join"}},[a._v("#")]),a._v(" 4）Sort Merge Bucket Map Join")]),a._v(" "),e("p",[a._v("Sort Merge Bucket Map Join（简称 SMB Map Join）基于 Bucket Map Join。SMB Map Join 要求，参与 join 的表均为分桶表，且需保证分桶内的数据是有序的，且分桶字段、排序字段和关联字段为相同字段，且其中一张表的分桶数量是另外一张表分桶数量的整数倍。")]),a._v(" "),e("p",[a._v("SMB Map Join 同 Bucket Join 一样，同样是利用两表各分桶之间的关联关系，在分桶之间进行 join 操作，不同的是，分桶之间的 join 操作的实现原理。Bucket Map Join，两个分桶之间的 join 实现原理为 Hash Join 算法；而 SMB Map Join，两个分桶之间的 join 实现原理为 Sort Merge Join 算法。")]),a._v(" "),e("p",[a._v("Hash Join 和 Sort Merge Join 均为关系型数据库中常见的 Join 实现算法。Hash Join 的原理相对简单，就是对参与 join 的一张表构建 hash table，然后扫描另外一张表，然后进行逐行匹配。Sort Merge Join 需要在两张按照关联字段排好序的表中进行，其原理如图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1108),alt:"image-20231018214757169"}})]),a._v(" "),e("p",[a._v("Hive 中的 SMB Map Join 就是对两个分桶的数据按照上述思路进行 Join 操作。可以看出，SMB Map Join 与 Bucket Map Join 相比，在进行 Join 操作时，Map 端是无需对整个 Bucket 构建 hash table，也无需在 Map 端缓存整个 Bucket 数据的，每个 Mapper 只需按顺序逐个 key 读取两个分桶的数据进行 join 即可。")]),a._v(" "),e("h3",{attrs:{id:"_12-5-2-map-join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-2-map-join"}},[a._v("#")]),a._v(" 12.5.2 Map Join")]),a._v(" "),e("h4",{attrs:{id:"_12-5-2-1-优化说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-2-1-优化说明"}},[a._v("#")]),a._v(" "),e("strong",[a._v("12.5.2.1 优化说明")])]),a._v(" "),e("p",[a._v("Map Join 有两种触发方式，一种是用户在 SQL 语句中增加 hint 提示，另外一种是 Hive 优化器根据参与 join 表的数据量大小，自动触发。")]),a._v(" "),e("h5",{attrs:{id:"_1-hint-提示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-hint-提示"}},[a._v("#")]),a._v(" 1）Hint 提示")]),a._v(" "),e("p",[a._v("用户可通过如下方式，指定通过 map join 算法，并且 ta 将作为 map join 中的小表。这种方式已经过时，不推荐使用。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect /*+ mapjoin(ta) */\n    ta.id,\n    tb.id\nfrom table_a ta\njoin table_b tb\non ta.id=tb.id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("h5",{attrs:{id:"_2-自动触发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-自动触发"}},[a._v("#")]),a._v(" 2）自动触发")]),a._v(" "),e("p",[a._v("Hive 在编译 SQL 语句阶段，起初所有的 join 操作均采用 Common Join 算法实现。")]),a._v(" "),e("p",[a._v("之后在物理优化阶段，Hive 会根据每个 Common Join 任务所需表的大小判断该 Common Join 任务是否能够转换为 Map Join 任务，若满足要求，便将 Common Join 任务自动转换为 Map Join 任务。")]),a._v(" "),e("p",[a._v("但有些 Common Join 任务所需的表大小，在 SQL 的编译阶段是未知的（例如对子查询进行 join 操作），所以这种 Common Join 任务是否能转换成 Map Join 任务在编译阶是无法确定的。")]),a._v(" "),e("p",[a._v("针对这种情况，Hive 会在编译阶段生成一个条件任务（Conditional Task），其下会包含一个计划列表，计划列表中包含转换后的 Map Join 任务以及原有的 Common Join 任务。最终具体采用哪个计划，是在运行时决定的。大致思路如下图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1109),alt:"image-20231018215103225"}})]),a._v(" "),e("p",[a._v("Map join 自动转换的具体判断逻辑如下图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1110),alt:"image-20231018215118634"}})]),a._v(" "),e("p",[a._v("图中涉及到的参数如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--启动Map Join自动转换\nset hive.auto.convert.join=true;\n\n--一个Common Join operator转为Map Join operator的判断条件,若该Common Join相关的表中,存在n-1张表的已知大小总和<=该值,则生成一个Map Join计划,此时可能存在多种n-1张表的组合均满足该条件,则hive会为每种满足条件的组合均生成一个Map Join计划,同时还会保留原有的Common Join计划作为后备(back up)计划,实际运行时,优先执行Map Join计划，若不能执行成功，则启动Common Join后备计划。\nset hive.mapjoin.smalltable.filesize=250000;\n\n--开启无条件转Map Join\nset hive.auto.convert.join.noconditionaltask=true;\n\n--无条件转Map Join时的小表之和阈值,若一个Common Join operator相关的表中，存在n-1张表的大小总和<=该值,此时hive便不会再为每种n-1张表的组合均生成Map Join计划,同时也不会保留Common Join作为后备计划。而是只生成一个最优的Map Join计划。\nset hive.auto.convert.join.noconditionaltask.size=10000000;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br")])]),e("ul",[e("li",[a._v("hive.mapjoin.smalltable.filesize 建议使用map的1/2 ~ 2/3 内存 再除以10 （filesize  文件大小转内存大小）")])]),a._v(" "),e("h3",{attrs:{id:"_12-5-2-2-优化案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-2-2-优化案例"}},[a._v("#")]),a._v(" 12.5.2.2 优化案例")]),a._v(" "),e("p",[a._v("1）示例 SQL")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect\n    *\nfrom order_detail od\njoin product_info product on od.product_id = product.id\njoin province_info province on od.province_id = province.id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("p",[a._v("2）优化前")]),a._v(" "),e("p",[a._v("上述 SQL 语句共有三张表进行两次 join 操作，且两次 join 操作的关联字段不同。故优化前的执行计划应该包含两个 Common Join operator，也就是由两个 MapReduce 任务实现。执行计划如下图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1111),alt:"image-20231018215322636"}})]),a._v(" "),e("p",[a._v("3）优化思路")]),a._v(" "),e("p",[a._v("经分析，参与 join 的三张表，数据量如下")]),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[a._v("表名")])]),a._v(" "),e("th",[e("strong",[a._v("大小")])])])]),a._v(" "),e("tbody",[e("tr",[e("td",[e("strong",[a._v("order_detail")])]),a._v(" "),e("td",[a._v("1176009934（约 1122M）")])]),a._v(" "),e("tr",[e("td",[e("strong",[a._v("product_info")])]),a._v(" "),e("td",[a._v("25285707（约 24M）")])]),a._v(" "),e("tr",[e("td",[e("strong",[a._v("province_info")])]),a._v(" "),e("td",[a._v("369（约 0.36K）")])])])]),a._v(" "),e("p",[e("strong",[a._v("注：可使用如下语句获取表/分区的大小信息")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\ndesc formatted table_name partition(partition_col='partition');\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("三张表中，product_info 和 province_info 数据量较小，可考虑将其作为小表，进行 Map Join 优化")]),a._v(" "),e("p",[a._v("根据前文 Common Join 任务转 Map Join 任务的判断逻辑图，可得出以下优化方案：")]),a._v(" "),e("p",[e("strong",[a._v("方案一：")]),a._v("\n启用 Map Join 自动转换。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nset hive.auto.convert.join=true;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("不使用无条件转 Map Join。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("不使用无条件转Map Join。\nhive (default)>\nset hive.auto.convert.join.noconditionaltask=false;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[a._v("调整 hive.mapjoin.smalltable.filesize 参数，使其大于等于 product_info。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nset hive.mapjoin.smalltable.filesize=25285707;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("这样可保证将两个 Common Join operator 均可转为 Map Join operator，并保留 Common Join 作为后备计划，保证计算任务的稳定。调整完的执行计划如下图：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1112),alt:"image-20231018215524645"}})]),a._v(" "),e("p",[e("strong",[a._v("方案二：")])]),a._v(" "),e("p",[a._v("启用 Map Join 自动转换。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nset hive.auto.convert.join=true;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("使用无条件转 Map Join。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nset hive.auto.convert.join.noconditionaltask=true;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("调整 hive.auto.convert.join.noconditionaltask.size 参数，使其大于等于 product_info 和 province_info 之和。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nset hive.auto.convert.join.noconditionaltask.size=25286076;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("这样可直接将两个 Common Join operator 转为两个 Map Join operator，并且由于两个 Map Join operator 的小表大小之和小于等于 hive.auto.convert.join.noconditionaltask.size，故两个 Map Join operator 任务可合并为同一个。这个方案计算效率最高，但需要的内存也是最多的。")]),a._v(" "),e("p",[a._v("调整完的执行计划如下图：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1113),alt:"image-20231018215635419"}})]),a._v(" "),e("p",[e("strong",[a._v("方案三：")])]),a._v(" "),e("p",[a._v("启用 Map Join 自动转换。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nset hive.auto.convert.join=true;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("使用无条件转 Map Join。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nset hive.auto.convert.join.noconditionaltask=true;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("调整 hive.auto.convert.join.noconditionaltask.size 参数，使其等于 product_info。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nset hive.auto.convert.join.noconditionaltask.size=25285707;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("这样可直接将两个 Common Join operator 转为 Map Join operator，但不会将两个 Map Join 的任务合并。该方案计算效率比方案二低，但需要的内存也更少。")]),a._v(" "),e("p",[a._v("调整完的执行计划如下图：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1114),alt:"image-20231018215841189"}})]),a._v(" "),e("h3",{attrs:{id:"_12-5-3-bucket-map-join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-3-bucket-map-join"}},[a._v("#")]),a._v(" "),e("strong",[a._v("12.5.3")]),a._v(" "),e("strong",[a._v("Bucket Map Join")])]),a._v(" "),e("h4",{attrs:{id:"_12-5-3-1-优化说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-3-1-优化说明"}},[a._v("#")]),a._v(" 12.5.3.1 优化说明")]),a._v(" "),e("p",[a._v("Bucket Map Join 不支持自动转换，发须通过用户在 SQL 语句中提供如下 Hint 提示，并配置如下相关参数，方可使用。")]),a._v(" "),e("p",[e("strong",[a._v("1）Hint 提示")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect /*+ mapjoin(ta) */\n    ta.id,\n    tb.id\nfrom table_a ta\njoin table_b tb on ta.id=tb.id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("p",[e("strong",[a._v("2）相关参数")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--关闭cbo优化，cbo会导致hint信息被忽略\nset hive.cbo.enable=false;\n--map join hint默认会被忽略(因为已经过时)，需将如下参数设置为false\nset hive.ignore.mapjoin.hint=false;\n--启用bucket map join优化功能\nset hive.optimize.bucketmapjoin = true;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("h4",{attrs:{id:"_12-5-3-2-优化案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-3-2-优化案例"}},[a._v("#")]),a._v(" 12.5.3.2 优化案例")]),a._v(" "),e("p",[e("strong",[a._v("1）示例 SQL")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect\n    *\nfrom(\n    select\n        *\n    from order_detail\n    where dt='2020-06-14'\n)od\njoin(\n    select\n        *\n    from payment_detail\n    where dt='2020-06-14'\n)pd\non od.id=pd.order_detail_id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br")])]),e("p",[e("strong",[a._v("2）优化前")])]),a._v(" "),e("p",[a._v("上述 SQL 语句共有两张表一次 join 操作，故优化前的执行计划应包含一个 Common Join 任务，通过一个 MapReduce Job 实现。执行计划如下图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1115),alt:"image-20231018220037705"}})]),a._v(" "),e("p",[e("strong",[a._v("3）优化思路")])]),a._v(" "),e("p",[a._v("经分析，参与 join 的两张表，数据量如下")]),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[a._v("表名")])]),a._v(" "),e("th",[e("strong",[a._v("大小")])])])]),a._v(" "),e("tbody",[e("tr",[e("td",[e("strong",[a._v("order**")]),a._v("_detail**")]),a._v(" "),e("td",[a._v("1176009934（约 1122M）")])]),a._v(" "),e("tr",[e("td",[e("strong",[a._v("payment**")]),a._v("_detail**")]),a._v(" "),e("td",[a._v("334198480（约 319M）")])])])]),a._v(" "),e("p",[a._v("两张表都相对较大，若采用普通的 Map Join 算法，则 Map 端需要较多的内存来缓存数据，当然可以选择为 Map 段分配更多的内存，来保证任务运行成功。但是，Map 端的内存不可能无上限的分配，所以当参与 Join 的表数据量均过大时，就可以考虑采用 Bucket Map Join 算法。下面演示如何使用 Bucket Map Join。")]),a._v(" "),e("p",[a._v("首先需要依据源表创建两个分桶表，order_detail 建议分 16 个 bucket，payment_detail 建议分 8 个 bucket,注意"),e("strong",[a._v("分桶个数")]),a._v("的倍数关系以及"),e("strong",[a._v("分桶字段")]),a._v("。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--订单表\nhive (default)>\ndrop table if exists order_detail_bucketed;\ncreate table order_detail_bucketed(\n    id           string comment '订单id',\n    user_id      string comment '用户id',\n    product_id   string comment '商品id',\n    province_id  string comment '省份id',\n    create_time  string comment '下单时间',\n    product_num  int comment '商品件数',\n    total_amount decimal(16, 2) comment '下单金额'\n)\nclustered by (id) into 16 buckets\nrow format delimited fields terminated by '\\t';\n\n--支付表\nhive (default)>\ndrop table if exists payment_detail_bucketed;\ncreate table payment_detail_bucketed(\n    id              string comment '支付id',\n    order_detail_id string comment '订单明细id',\n    user_id         string comment '用户id',\n    payment_time    string comment '支付时间',\n    total_amount    decimal(16, 2) comment '支付金额'\n)\nclustered by (order_detail_id) into 8 buckets\nrow format delimited fields terminated by '\\t';\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br"),e("span",{staticClass:"line-number"},[a._v("27")]),e("br")])]),e("p",[a._v("然后向两个分桶表导入数据。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--订单表\nhive (default)>\ninsert overwrite table order_detail_bucketed\nselect\n    id,\n    user_id,\n    product_id,\n    province_id,\n    create_time,\n    product_num,\n    total_amount\nfrom order_detail\nwhere dt='2020-06-14';\n\n--分桶表\nhive (default)>\ninsert overwrite table payment_detail_bucketed\nselect\n    id,\n    order_detail_id,\n    user_id,\n    payment_time,\n    total_amount\nfrom payment_detail\nwhere dt='2020-06-14';\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br")])]),e("p",[a._v("然后设置以下参数：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--关闭cbo优化，cbo会导致hint信息被忽略，需将如下参数修改为false\nset hive.cbo.enable=false;\n--map join hint默认会被忽略(因为已经过时)，需将如下参数修改为false\nset hive.ignore.mapjoin.hint=false;\n--启用bucket map join优化功能,默认不启用，需将如下参数修改为true\nset hive.optimize.bucketmapjoin = true;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("p",[a._v("最后在重写 SQL 语句，如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect /*+ mapjoin(pd) */\n    *\nfrom order_detail_bucketed od\njoin payment_detail_bucketed pd on od.id = pd.order_detail_id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("p",[a._v("优化后的执行计划如图所示："),e("img",{attrs:{src:s(1116),alt:"image-20231018220240966"}})]),a._v(" "),e("p",[a._v("需要注意的是，Bucket Map Join 的执行计划的基本信息和普通的 Map Join 无异，若想看到差异，可执行如下语句，查看执行计划的详细信息。详细执行计划中，如在 Map Join Operator 中看到 “BucketMapJoin: true”，则表明使用的 Join 算法为 Bucket Map Join。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nexplain extended select /*+ mapjoin(pd) */\n    *\nfrom order_detail_bucketed od\njoin payment_detail_bucketed pd on od.id = pd.order_detail_id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("h3",{attrs:{id:"_12-5-4-sort-merge-bucket-map-join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-4-sort-merge-bucket-map-join"}},[a._v("#")]),a._v(" 12.5.4 Sort Merge Bucket Map Join")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--启动Sort Merge Bucket Map Join优化\nset hive.optimize.bucketmapjoin.sortedmerge=true;\n--使用自动转换SMB Join\nset hive.auto.convert.sortmerge.join=true;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("h4",{attrs:{id:"_12-5-4-2-优化案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-4-2-优化案例"}},[a._v("#")]),a._v(" 12.5.4.2 优化案例")]),a._v(" "),e("p",[e("strong",[a._v("1）示例 SQL 语句")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect\n    *\nfrom(\n    select\n        *\n    from order_detail\n    where dt='2020-06-14'\n)od\njoin(\n    select\n        *\n    from payment_detail\n    where dt='2020-06-14'\n)pd\non od.id=pd.order_detail_id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br")])]),e("p",[e("strong",[a._v("2）优化前")])]),a._v(" "),e("p",[a._v("上述 SQL 语句共有两张表一次 join 操作，故优化前的执行计划应包含一个 Common Join 任务，通过一个 MapReduce Job 实现。")]),a._v(" "),e("p",[e("strong",[a._v("3）优化思路")]),a._v("\n经分析，参与 join 的两张表，数据量如下")]),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[a._v("表名")])]),a._v(" "),e("th",[e("strong",[a._v("大小")])])])]),a._v(" "),e("tbody",[e("tr",[e("td",[e("strong",[a._v("order**")]),a._v("_detail**")]),a._v(" "),e("td",[a._v("1176009934（约 1122M）")])]),a._v(" "),e("tr",[e("td",[e("strong",[a._v("payment**")]),a._v("_detail**")]),a._v(" "),e("td",[a._v("334198480（约 319M）")])])])]),a._v(" "),e("p",[a._v("张表都相对较大，除了可以考虑采用 Bucket Map Join 算法，还可以考虑 SMB Join。相较于 Bucket Map Join，SMB Map Join 对分桶大小是没有要求的。下面演示如何使用 SMB Map Join。")]),a._v(" "),e("p",[a._v("首先需要依据源表创建两个的有序的分桶表，order_detail 建议分 16 个 bucket，payment_detail 建议分 8 个 bucket,注意"),e("strong",[a._v("分桶个数")]),a._v("的倍数关系以及"),e("strong",[a._v("分桶字段和排序字段")]),a._v("。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--订单表\nhive (default)>\ndrop table if exists order_detail_sorted_bucketed;\ncreate table order_detail_sorted_bucketed(\n    id           string comment '订单id',\n    user_id      string comment '用户id',\n    product_id   string comment '商品id',\n    province_id  string comment '省份id',\n    create_time  string comment '下单时间',\n    product_num  int comment '商品件数',\n    total_amount decimal(16, 2) comment '下单金额'\n)\nclustered by (id) sorted by(id) into 16 buckets\nrow format delimited fields terminated by '\\t';\n\n--支付表\nhive (default)>\ndrop table if exists payment_detail_sorted_bucketed;\ncreate table payment_detail_sorted_bucketed(\n    id              string comment '支付id',\n    order_detail_id string comment '订单明细id',\n    user_id         string comment '用户id',\n    payment_time    string comment '支付时间',\n    total_amount    decimal(16, 2) comment '支付金额'\n)\nclustered by (order_detail_id) sorted by(order_detail_id) into 8 buckets\nrow format delimited fields terminated by '\\t';\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br"),e("span",{staticClass:"line-number"},[a._v("27")]),e("br")])]),e("p",[a._v("然后向两个分桶表导入数据。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--订单表\nhive (default)>\ninsert overwrite table order_detail_sorted_bucketed\nselect\n    id,\n    user_id,\n    product_id,\n    province_id,\n    create_time,\n    product_num,\n    total_amount\nfrom order_detail\nwhere dt='2020-06-14';\n\n--分桶表\nhive (default)>\ninsert overwrite table payment_detail_sorted_bucketed\nselect\n    id,\n    order_detail_id,\n    user_id,\n    payment_time,\n    total_amount\nfrom payment_detail\nwhere dt='2020-06-14';\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br")])]),e("p",[a._v("然后设置以下参数：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--启动Sort Merge Bucket Map Join优化\nset hive.optimize.bucketmapjoin.sortedmerge=true;\n--使用自动转换SMB Join\nset hive.auto.convert.sortmerge.join=true;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("最后在重写 SQL 语句，如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect\n    *\nfrom order_detail_sorted_bucketed od\njoin payment_detail_sorted_bucketed pd\non od.id = pd.order_detail_id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("p",[a._v("优化后的执行计如图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1117),alt:"image-20231018220529632"}})]),a._v(" "),e("h2",{attrs:{id:"_12-6-hql-语法优化之数据倾斜"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-hql-语法优化之数据倾斜"}},[a._v("#")]),a._v(" 12.6 HQL 语法优化之数据倾斜")]),a._v(" "),e("h3",{attrs:{id:"_12-6-1-数据倾斜概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-1-数据倾斜概述"}},[a._v("#")]),a._v(" 12.6.1 数据倾斜概述")]),a._v(" "),e("p",[a._v("数据倾斜问题，通常是指参与计算的数据分布不均，即某个 key 或者某些 key 的数据量远超其他 key，导致在 shuffle 阶段，大量相同 key 的数据被发往同一个 Reduce，进而导致该 Reduce 所需的时间远超其他 Reduce，成为整个任务的瓶颈。\nHive 中的数据倾斜常出现在分组聚合和 join 操作的场景中，下面分别介绍在上述两种场景下的优化思路。")]),a._v(" "),e("h3",{attrs:{id:"_12-6-2-分组聚合导致的数据倾斜"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-2-分组聚合导致的数据倾斜"}},[a._v("#")]),a._v(" 12.6.2 分组聚合导致的数据倾斜")]),a._v(" "),e("h4",{attrs:{id:"_12-6-2-1-优化说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-2-1-优化说明"}},[a._v("#")]),a._v(" 12.6.2.1 优化说明")]),a._v(" "),e("p",[a._v("前文提到过，Hive 中未经优化的分组聚合，是通过一个 MapReduce Job 实现的。Map 端负责读取数据，并按照分组字段分区，通过 Shuffle，将数据发往 Reduce 端，各组数据在 Reduce 端完成最终的聚合运算。")]),a._v(" "),e("p",[a._v("如果 group by 分组字段的值分布不均，就可能导致大量相同的 key 进入同一 Reduce，从而导致数据倾斜问题。")]),a._v(" "),e("p",[a._v("由分组聚合导致的数据倾斜问题，有以下两种解决思路：")]),a._v(" "),e("p",[e("strong",[a._v("1）Map-Side 聚合")])]),a._v(" "),e("p",[a._v("开启 Map-Side 聚合后，数据会现在 Map 端完成部分聚合工作。这样一来即便原始数据是倾斜的，经过 Map 端的初步聚合后，发往 Reduce 的数据也就不再倾斜了。最佳状态下，Map-端聚合能完全屏蔽数据倾斜问题。")]),a._v(" "),e("p",[a._v("相关参数如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--启用map-side聚合\nset hive.map.aggr=true;\n\n--用于检测源表数据是否适合进行map-side聚合。检测的方法是：先对若干条数据进行map-side聚合，若聚合后的条数和聚合前的条数比值小于该值，则认为该表适合进行map-side聚合；否则，认为该表数据不适合进行map-side聚合，后续数据便不再进行map-side聚合。\nset hive.map.aggr.hash.min.reduction=0.5;\n\n--用于检测源表是否适合map-side聚合的条数。\nset hive.groupby.mapaggr.checkinterval=100000;\n\n--map-side聚合所用的hash table，占用map task堆内存的最大比例，若超出该值，则会对hash table进行一次flush。\nset hive.map.aggr.hash.force.flush.memory.threshold=0.9;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br")])]),e("p",[e("strong",[a._v("2）Skew-GroupBy 优化")])]),a._v(" "),e("p",[a._v("Skew-GroupBy 的原理是启动两个 MR 任务，第一个 MR 按照随机数分区，将数据分散发送到 Reduce，完成部分聚合，第二个 MR 按照分组字段分区，完成最终聚合。")]),a._v(" "),e("p",[a._v("相关参数如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--启用分组聚合数据倾斜优化\nset hive.groupby.skewindata=true;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h4",{attrs:{id:"_12-6-2-2-优化案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-2-2-优化案例"}},[a._v("#")]),a._v(" 12.6.2.2 优化案例")]),a._v(" "),e("p",[e("strong",[a._v("1）示例 SQL 语句")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect\n    province_id,\n    count(*)\nfrom order_detail\ngroup by province_id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("blockquote",[e("p",[a._v("需要注意的是，hive 中的 map-side 聚合是默认开启的，若想看到数据倾斜的现象，需要先将 hive.map.aggr 参数设置为 false")])]),a._v(" "),e("p",[e("strong",[a._v("（2）Skew-GroupBy 优化")])]),a._v(" "),e("p",[a._v("设置如下参数")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--启用skew-groupby\nset hive.groupby.skewindata=true;\n--关闭map-side聚合\nset hive.map.aggr=false;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("开启 Skew-GroupBy 优化后，可以很明显看到该 sql 执行在 yarn 上启动了两个 mr 任务，第一个 mr 打散数据，第二个 mr 按照打散后的数据进行分组聚合。")]),a._v(" "),e("h3",{attrs:{id:"_12-6-3-join-导致的数据倾斜"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-3-join-导致的数据倾斜"}},[a._v("#")]),a._v(" 12.6.3 Join 导致的数据倾斜")]),a._v(" "),e("h4",{attrs:{id:"_12-6-3-1-优化说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-3-1-优化说明"}},[a._v("#")]),a._v(" 12.6.3.1 优化说明")]),a._v(" "),e("p",[a._v("前文提到过，未经优化的 join 操作，默认是使用 common join 算法，也就是通过一个 MapReduce Job 完成计算。Map 端负责读取 join 操作所需表的数据，并按照关联字段进行分区，通过 Shuffle，将其发送到 Reduce 端，相同 key 的数据在 Reduce 端完成最终的 Join 操作。")]),a._v(" "),e("p",[a._v("如果关联字段的值分布不均，就可能导致大量相同的 key 进入同一 Reduce，从而导致数据倾斜问题。")]),a._v(" "),e("p",[a._v("由 join 导致的数据倾斜问题，有如下三种解决方案：")]),a._v(" "),e("p",[e("strong",[a._v("1）map join")])]),a._v(" "),e("p",[a._v("使用 map join 算法，join 操作仅在 map 端就能完成，没有 shuffle 操作，没有 reduce 阶段，自然不会产生 reduce 端的数据倾斜。该方案适用于大表 join 小表时发生数据倾斜的场景。")]),a._v(" "),e("p",[a._v("相关参数如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--启动Map Join自动转换\nset hive.auto.convert.join=true;\n\n--一个Common Join operator转为Map Join operator的判断条件,若该Common Join相关的表中,存在n-1张表的大小总和<=该值,则生成一个Map Join计划,此时可能存在多种n-1张表的组合均满足该条件,则hive会为每种满足条件的组合均生成一个Map Join计划,同时还会保留原有的Common Join计划作为后备(back up)计划,实际运行时,优先执行Map Join计划，若不能执行成功，则启动Common Join后备计划。\nset hive.mapjoin.smalltable.filesize=250000;\n\n--开启无条件转Map Join\nset hive.auto.convert.join.noconditionaltask=true;\n\n--无条件转Map Join时的小表之和阈值,若一个Common Join operator相关的表中，存在n-1张表的大小总和<=该值,此时hive便不会再为每种n-1张表的组合均生成Map Join计划,同时也不会保留Common Join作为后备计划。而是只生成一个最优的Map Join计划。\nset hive.auto.convert.join.noconditionaltask.size=10000000;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br")])]),e("p",[e("strong",[a._v("2）skew join")])]),a._v(" "),e("p",[a._v("skew join 的原理是，为倾斜的大 key 单独启动一个 map join 任务进行计算，其余 key 进行正常的 common join。原理图如下：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1118),alt:"image-20231018223008124"}})]),a._v(" "),e("p",[a._v("相关参数如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--启用skew join优化\nset hive.optimize.skewjoin=true;\n--触发skew join的阈值，若某个key的行数超过该参数值，则触发\nset hive.skewjoin.key=100000;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("这种方案对参与 join 的源表大小没有要求，但是对两表中倾斜的 key 的数据量有要求，要求一张表中的倾斜 key 的数据量比较小（方便走 mapjoin）。")]),a._v(" "),e("p",[e("strong",[a._v("3）调整 SQL 语句")])]),a._v(" "),e("p",[a._v("若参与 join 的两表均为大表，其中一张表的数据是倾斜的，此时也可通过以下方式对 SQL 语句进行相应的调整。\n假设原始 SQL 语句如下：A，B 两表均为大表，且其中一张表的数据是倾斜的。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect\n    *\nfrom A\njoin B\non A.id=B.id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("p",[a._v("其 join 过程如下：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1119),alt:"image-20231018223102543"}})]),a._v(" "),e("p",[a._v("图中 1001 为倾斜的大 key，可以看到，其被发往了同一个 Reduce 进行处理。\n调整 SQL 语句如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect\n    *\nfrom(\n    select --打散操作\n        concat(id,'_',cast(rand()*2 as int)) id,\n        value\n    from A\n)ta\njoin(\n    select --扩容操作\n        concat(id,'_',0) id,\n        value\n    from B\n    union all\n    select\n        concat(id,'_',1) id,\n        value\n    from B\n)tb\non ta.id=tb.id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br")])]),e("p",[a._v("调整之后的 SQL 语句执行计划如下图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1120),alt:"image-20231018223226338"}})]),a._v(" "),e("h4",{attrs:{id:"_12-6-3-2-优化案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-3-2-优化案例"}},[a._v("#")]),a._v(" 12.6.3.2 优化案例")]),a._v(" "),e("p",[e("strong",[a._v("1）示例 SQL 语句")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect\n    *\nfrom order_detail od\njoin province_info pi\non od.province_id=pi.id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("p",[e("strong",[a._v("2）优化前")])]),a._v(" "),e("p",[a._v("order_detail 表中的 province_id 字段是存在倾斜的，若不经过优化，通过观察任务的执行过程，是能够看出数据倾斜现象的。")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1121),alt:"image-20231018223320448"}})]),a._v(" "),e("p",[a._v("需要注意的是，hive 中的 map join 自动转换是默认开启的，若想看到数据倾斜的现象，需要先将 hive.auto.convert.join 参数设置为 false。")]),a._v(" "),e("p",[e("strong",[a._v("3）优化思路")])]),a._v(" "),e("p",[a._v("上述两种优化思路均可解决该数据倾斜问题，下面分别进行说明：")]),a._v(" "),e("p",[e("strong",[a._v("（1）map join")])]),a._v(" "),e("p",[a._v("设置如下参数")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--启用map join\nset hive.auto.convert.join=true;\n--关闭skew join\nset hive.optimize.skewjoin=false;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("可以很明显看到开启 map join 以后，mr 任务只有 map 阶段，没有 reduce 阶段，自然也就不会有数据倾斜发生。")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1122),alt:"image-20231018223441743"}})]),a._v(" "),e("p",[e("strong",[a._v("（2）skew join")])]),a._v(" "),e("p",[a._v("设置如下参数")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--启动skew join\nset hive.optimize.skewjoin=true;\n--关闭map join\nset hive.auto.convert.join=false;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("开启 skew join 后，使用 explain 可以很明显看到执行计划如下图所示，说明 skew join 生效，任务既有 common join，又有部分 key 走了 map join。")]),a._v(" "),e("p",[a._v("并且该 sql 在 yarn 上最终启动了两个 mr 任务，而且第二个任务只有 map 没有 reduce 阶段，说明第二个任务是对倾斜的 key 进行了 map join。")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1123),alt:"image-20231018223556086"}})]),a._v(" "),e("p",[e("img",{attrs:{src:s(1124),alt:"image-20231018223604733"}})]),a._v(" "),e("h2",{attrs:{id:"_12-7-hql-语法优化之任务并行度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-7-hql-语法优化之任务并行度"}},[a._v("#")]),a._v(" 12.7 HQL 语法优化之任务并行度")]),a._v(" "),e("h4",{attrs:{id:"_12-7-1-优化说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-7-1-优化说明"}},[a._v("#")]),a._v(" 12.7.1 优化说明")]),a._v(" "),e("p",[a._v("对于一个分布式的计算任务而言，设置一个合适的并行度十分重要。Hive 的计算任务由 MapReduce 完成，故并行度的调整需要分为 Map 端和 Reduce 端。")]),a._v(" "),e("h3",{attrs:{id:"_12-7-1-1-map-端并行度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-7-1-1-map-端并行度"}},[a._v("#")]),a._v(" 12.7.1.1 Map 端并行度")]),a._v(" "),e("p",[a._v("Map 端的并行度，也就是 Map 的个数。是由输入文件的切片数决定的。一般情况下，Map 端的并行度无需手动调整。\n以下特殊情况可考虑调整 map 端并行度：")]),a._v(" "),e("p",[e("strong",[a._v("1）查询的表中存在大量小文件")])]),a._v(" "),e("p",[a._v("按照 Hadoop 默认的切片策略，一个小文件会单独启动一个 map task 负责计算。若查询的表中存在大量小文件，则会启动大量 map task，造成计算资源的浪费。这种情况下，可以使用 Hive 提供的 CombineHiveInputFormat，多个小文件合并为一个切片，从而控制 map task 个数。相关参数如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("set hive.input.format=org.apache.hadoop.hive.ql.io.CombineHiveInputFormat;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[e("strong",[a._v("2）map 端有复杂的查询逻辑")])]),a._v(" "),e("p",[a._v("若 SQL 语句中有正则替换、json 解析等复杂耗时的查询逻辑时，map 端的计算会相对慢一些。若想加快计算速度，在计算资源充足的情况下，可考虑增大 map 端的并行度，令 map task 多一些，每个 map task 计算的数据少一些。相关参数如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--一个切片的最大值\nset mapreduce.input.fileinputformat.split.maxsize=256000000;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h4",{attrs:{id:"_12-7-1-2-reduce-端并行度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-7-1-2-reduce-端并行度"}},[a._v("#")]),a._v(" 12.7.1.2 Reduce 端并行度")]),a._v(" "),e("p",[a._v("Reduce 端的并行度，也就是 Reduce 个数。相对来说，更需要关注。Reduce 端的并行度，可由用户自己指定，也可由 Hive 自行根据该 MR Job 输入的文件大小进行估算。")]),a._v(" "),e("p",[a._v("Reduce 端的并行度的相关参数如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--指定Reduce端并行度，默认值为-1，表示用户未指定\nset mapreduce.job.reduces;\n--Reduce端并行度最大值\nset hive.exec.reducers.max;\n--单个Reduce Task计算的数据量，用于估算Reduce并行度\nset hive.exec.reducers.bytes.per.reducer;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("p",[a._v("Reduce 端并行度的确定逻辑如下：")]),a._v(" "),e("p",[a._v("若指定参数"),e("strong",[a._v("mapreduce.job.reduces")]),a._v("的值为一个非负整数，则 Reduce 并行度为指定值。否则，Hive 自行估算 Reduce 并行度，估算逻辑如下：")]),a._v(" "),e("p",[a._v("假设 Job 输入的文件大小为"),e("strong",[a._v("totalInputBytes")])]),a._v(" "),e("p",[a._v("参数"),e("strong",[a._v("hive.exec.reducers.bytes.per.reducer")]),a._v("的值为 bytesPerReducer。")]),a._v(" "),e("p",[a._v("参数"),e("strong",[a._v("hive.exec.reducers.max")]),a._v("的值为 maxReducers。")]),a._v(" "),e("p",[a._v("则 Reduce 端的并行度为：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1125),alt:"img"}})]),a._v(" "),e("p",[a._v("根据上述描述，可以看出，Hive 自行估算 Reduce 并行度时，是以整个 MR Job 输入的文件大小作为依据的。因此，在某些情况下其估计的并行度很可能并不准确，此时就需要用户根据实际情况来指定 Reduce 并行度了。")]),a._v(" "),e("h3",{attrs:{id:"_12-7-2-优化案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-7-2-优化案例"}},[a._v("#")]),a._v(" 12.7.2 优化案例")]),a._v(" "),e("p",[e("strong",[a._v("1）示例 SQL 语句")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect\n    province_id,\n    count(*)\nfrom order_detail\ngroup by province_id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("p",[e("strong",[a._v("2）优化前")])]),a._v(" "),e("p",[a._v("上述 sql 语句，在不指定 Reduce 并行度时，Hive 自行估算并行度的逻辑如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("totalInputBytes= 1136009934\nbytesPerReducer=256000000\nmaxReducers=1009\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[a._v("经计算，Reduce 并行度为")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1126),alt:"img"}})]),a._v(" "),e("p",[e("strong",[a._v("3）优化思路")])]),a._v(" "),e("p",[a._v("上述 sql 语句，在默认情况下，是会进行 map-side 聚合的，也就是 Reduce 端接收的数据，实际上是 map 端完成聚合之后的结果。观察任务的执行过程，会发现，每个 map 端输出的数据只有 34 条记录，共有 5 个 map task。")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1127),alt:"image-20231018224209311"}})]),a._v(" "),e("p",[a._v("也就是说 Reduce 端实际只会接收 170（34*5）条记录，故理论上 Reduce 端并行度设置为 1 就足够了。这种情况下，用户可通过以下参数，自行设置 Reduce 端并行度为 1。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--指定Reduce端并行度，默认值为-1，表示用户未指定\nset mapreduce.job.reduces=1;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h2",{attrs:{id:"_12-8-hql-语法优化之小文件合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-8-hql-语法优化之小文件合并"}},[a._v("#")]),a._v(" "),e("strong",[a._v("12.8 HQL 语法优化之小文件合并")])]),a._v(" "),e("h3",{attrs:{id:"_12-8-1-优化说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-8-1-优化说明"}},[a._v("#")]),a._v(" 12.8.1 优化说明")]),a._v(" "),e("p",[a._v("小文件合并优化，分为两个方面，分别是 Map 端输入的小文件合并，和 Reduce 端输出的小文件合并。")]),a._v(" "),e("h4",{attrs:{id:"_12-8-1-1-map-端输入文件合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-8-1-1-map-端输入文件合并"}},[a._v("#")]),a._v(" 12.8.1.1 Map 端输入文件合并")]),a._v(" "),e("p",[a._v("合并 Map 端输入的小文件，是指将多个小文件划分到一个切片中，进而由一个 Map Task 去处理。目的是防止为单个小文件启动一个 Map Task，浪费计算资源。")]),a._v(" "),e("p",[a._v("相关参数为：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--可将多个小文件切片，合并为一个切片，进而由一个map任务处理\nset hive.input.format=org.apache.hadoop.hive.ql.io.CombineHiveInputFormat;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h4",{attrs:{id:"_12-8-1-2-reduce-输出文件合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-8-1-2-reduce-输出文件合并"}},[a._v("#")]),a._v(" 12.8.1.2 Reduce 输出文件合并")]),a._v(" "),e("p",[a._v("合并 Reduce 端输出的小文件，是指将多个小文件合并成大文件。目的是减少 HDFS 小文件数量。其原理是根据计算任务输出文件的平均大小进行判断，若符合条件，则单独启动一个额外的任务进行合并。")]),a._v(" "),e("p",[a._v("相关参数为：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--开启合并map only任务输出的小文件\nset hive.merge.mapfiles=true;\n\n--开启合并map reduce任务输出的小文件\nset hive.merge.mapredfiles=true;\n\n--合并后的文件大小\nset hive.merge.size.per.task=256000000;\n\n--触发小文件合并任务的阈值，若某计算任务输出的文件平均大小低于该值，则触发合并\nset hive.merge.smallfiles.avgsize=16000000;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br")])]),e("h3",{attrs:{id:"_12-8-2-优化案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-8-2-优化案例"}},[a._v("#")]),a._v(" 12.8.2 优化案例")]),a._v(" "),e("p",[e("strong",[a._v("1）示例用表")])]),a._v(" "),e("p",[a._v("现有一个需求，计算各省份订单金额总和，下表为结果表。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\ndrop table if exists order_amount_by_province;\ncreate table order_amount_by_province(\n    province_id string comment '省份id',\n    order_amount decimal(16,2) comment '订单金额'\n)\nlocation '/order_amount_by_province';\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("p",[e("strong",[a._v("2）示例 SQL 语句")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\ninsert overwrite table order_amount_by_province\nselect\n    province_id,\n    sum(total_amount)\nfrom order_detail\ngroup by province_id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("p",[e("strong",[a._v("3）优化前")])]),a._v(" "),e("p",[a._v("根据任务并行度一节所需内容，可分析出，默认情况下，该 sql 语句的 Reduce 端并行度为 5，故最终输出文件个数也为 5，下图为输出文件，可以看出，5 个均为小文件。")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1128),alt:"image-20231018224538034"}})]),a._v(" "),e("p",[e("strong",[a._v("4）优化思路")])]),a._v(" "),e("p",[a._v("若想避免小文件的产生，可采取方案有两个。")]),a._v(" "),e("p",[a._v("（1）合理设置任务的 Reduce 端并行度")]),a._v(" "),e("p",[a._v("若将上述计算任务的并行度设置为 1，就能保证其输出结果只有一个文件。")]),a._v(" "),e("p",[a._v("（2）启用 Hive 合并小文件优化")]),a._v(" "),e("p",[a._v("设置以下参数：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--开启合并map reduce任务输出的小文件\nset hive.merge.mapredfiles=true;\n\n--合并后的文件大小\nset hive.merge.size.per.task=256000000;\n\n--触发小文件合并任务的阈值，若某计算任务输出的文件平均大小低于该值，则触发合并\nset hive.merge.smallfiles.avgsize=16000000;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br")])]),e("p",[a._v("再次执行上述的 insert 语句，观察结果表中的文件，只剩一个了。")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1129),alt:"image-20231018224640214"}})]),a._v(" "),e("h2",{attrs:{id:"_12-9-其他优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-9-其他优化"}},[a._v("#")]),a._v(" 12.9 其他优化")]),a._v(" "),e("h3",{attrs:{id:"_12-9-1-cbo-优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-9-1-cbo-优化"}},[a._v("#")]),a._v(" 12.9.1 CBO 优化")]),a._v(" "),e("h4",{attrs:{id:"_12-9-1-1-优化说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-9-1-1-优化说明"}},[a._v("#")]),a._v(" 12.9.1.1 优化说明")]),a._v(" "),e("p",[a._v("CBO 是指 Cost based Optimizer，即基于计算成本的优化。")]),a._v(" "),e("p",[a._v("在 Hive 中，计算成本模型考虑到了：数据的行数、CPU、本地 IO、HDFS IO、网络 IO 等方面。Hive 会计算同一 SQL 语句的不同执行计划的计算成本，并选出成本最低的执行计划。目前 CBO 在 hive 的 MR 引擎下主要用于 join 的优化，例如多表 join 的 join 顺序。")]),a._v(" "),e("p",[a._v("相关参数为：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--是否启用cbo优化\nset hive.cbo.enable=true;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h4",{attrs:{id:"_12-9-2-2-优化案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-9-2-2-优化案例"}},[a._v("#")]),a._v(" 12.9.2.2 优化案例")]),a._v(" "),e("p",[a._v("1）示例 SQL 语句")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)>\nselect\n    *\nfrom order_detail od\njoin product_info product on od.product_id=product.id\njoin province_info province on od.province_id=province.id;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("p",[e("strong",[a._v("2）关闭 CBO 优化")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--关闭cbo优化\nset hive.cbo.enable=false;\n\n--为了测试效果更加直观，关闭map join自动转换\nset hive.auto.convert.join=false;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("p",[a._v("根据执行计划，可以看出，三张表的 join 顺序如下：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1130),alt:"image-20231018224904768"}})]),a._v(" "),e("p",[e("strong",[a._v("3）开启 CBO 优化")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--开启cbo优化\nset hive.cbo.enable=true;\n--为了测试效果更加直观，关闭map join自动转换\nset hive.auto.convert.join=false;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("根据执行计划，可以看出，三张表的 join 顺序如下：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1131),alt:"image-20231018224941114"}})]),a._v(" "),e("p",[e("strong",[a._v("4）总结")])]),a._v(" "),e("p",[a._v("根据上述案例可以看出，CBO 优化对于执行计划中 join 顺序是有影响的，其之所以会将 province_info 的 join 顺序提前，是因为 province info 的数据量较小，将其提前，会有更大的概率使得中间结果的数据量变小，从而使整个计算任务的数据量减小，也就是使计算成本变小。")]),a._v(" "),e("h3",{attrs:{id:"_12-9-2-谓词下推"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-9-2-谓词下推"}},[a._v("#")]),a._v(" 12.9.2 谓词下推")]),a._v(" "),e("h4",{attrs:{id:"_12-9-2-1-优化说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-9-2-1-优化说明"}},[a._v("#")]),a._v(" 12.9.2.1 优化说明")]),a._v(" "),e("p",[a._v("谓词下推（predicate pushdown）是指，尽量将过滤操作前移，以减少后续计算步骤的数据量。")]),a._v(" "),e("p",[a._v("相关参数为：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--是否启动谓词下推（predicate pushdown）优化\nset hive.optimize.ppd = true;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("需要注意的是：")]),a._v(" "),e("p",[a._v("CBO 优化也会完成一部分的谓词下推优化工作，因为在执行计划中，谓词越靠前，整个计划的计算成本就会越低。")]),a._v(" "),e("h3",{attrs:{id:"_12-9-3-矢量化查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-9-3-矢量化查询"}},[a._v("#")]),a._v(" 12.9.3 矢量化查询")]),a._v(" "),e("p",[a._v("Hive 的矢量化查询优化，依赖于 CPU 的矢量化计算，CPU 的矢量化计算的基本原理如下图：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1132),alt:"image-20231018225115330"}})]),a._v(" "),e("p",[a._v("Hive 的矢量化查询，可以极大的提高一些典型查询场景（例如 scans, filters, aggregates, and joins）下的 CPU 使用效率。")]),a._v(" "),e("p",[a._v("相关参数如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("set hive.vectorized.execution.enabled=true;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("若执行计划中，出现“Execution mode: vectorized”字样，即表明使用了矢量化计算。")]),a._v(" "),e("p",[a._v("官网参考连接：")]),a._v(" "),e("p",[a._v("https://cwiki.apache.org/confluence/display/Hive/Vectorized+Query+Execution#VectorizedQueryExecution-Limitations")]),a._v(" "),e("h4",{attrs:{id:"_12-9-4-fetch-抓取"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-9-4-fetch-抓取"}},[a._v("#")]),a._v(" 12.9.4 Fetch 抓取")]),a._v(" "),e("p",[a._v("Fetch 抓取是指，Hive 中对某些情况的查询可以不必使用 MapReduce 计算。例如：select * from emp;在这种情况下，Hive 可以简单地读取 emp 对应的存储目录下的文件，然后输出查询结果到控制台。")]),a._v(" "),e("p",[a._v("相关参数如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--是否在特定场景转换为fetch 任务\n--设置为none表示不转换\n--设置为minimal表示支持select *，分区字段过滤，Limit等\n--设置为more表示支持select 任意字段,包括函数，过滤，和limit等\nset hive.fetch.task.conversion=more;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("h3",{attrs:{id:"_12-9-5-本地模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-9-5-本地模式"}},[a._v("#")]),a._v(" 12.9.5 本地模式")]),a._v(" "),e("h4",{attrs:{id:"_12-9-5-1-优化说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-9-5-1-优化说明"}},[a._v("#")]),a._v(" 12.9.5.1 优化说明")]),a._v(" "),e("p",[a._v("大多数的 Hadoop Job 是需要 Hadoop 提供的完整的可扩展性来处理大数据集的。不过，有时 Hive 的输入数据量是非常小的。在这种情况下，为查询触发执行任务消耗的时间可能会比实际 job 的执行时间要多的多。对于大多数这种情况，"),e("strong",[a._v("Hive 可以通过本地模式在单台机器上处理所有的任务。对于小数据集，执行时间可以明显被缩短。")])]),a._v(" "),e("p",[a._v("相关参数如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--开启自动转换为本地模式\nset hive.exec.mode.local.auto=true; \n\n--设置local MapReduce的最大输入数据量，当输入数据量小于这个值时采用local  MapReduce的方式，默认为134217728，即128M\nset hive.exec.mode.local.auto.inputbytes.max=50000000;\n\n--设置local MapReduce的最大输入文件个数，当输入文件个数小于这个值时采用local MapReduce的方式，默认为4\nset hive.exec.mode.local.auto.input.files.max=10;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br")])]),e("h3",{attrs:{id:"_12-9-6-并行执行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-9-6-并行执行"}},[a._v("#")]),a._v(" 12.9.6 并行执行")]),a._v(" "),e("p",[a._v("Hive 会将一个 SQL 语句转化成一个或者多个 Stage，每个 Stage 对应一个 MR Job。默认情况下，Hive 同时只会执行一个 Stage。但是某 SQL 语句可能会包含多个 Stage，但这多个 Stage 可能并非完全互相依赖，也就是说有些 Stage 是可以并行执行的。此处提到的并行执行就是指这些 Stage 的并行执行。相关参数如下：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("--启用并行执行优化\nset hive.exec.parallel=true;  \n\n--同一个sql允许最大并行度，默认为8\nset hive.exec.parallel.thread.number=8;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("h3",{attrs:{id:"_12-9-7-严格模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-9-7-严格模式"}},[a._v("#")]),a._v(" "),e("strong",[a._v("12.9.7 严格模式")])]),a._v(" "),e("p",[a._v("Hive 可以通过设置某些参数防止危险操作：")]),a._v(" "),e("p",[e("strong",[a._v("1）分区表不使用分区过滤")])]),a._v(" "),e("p",[a._v("将"),e("code",[a._v("hive.strict.checks.no.partition.filter")]),a._v("设置为 true 时，对于分区表，除非 where 语句中含有分区字段过滤条件来限制范围，否则不允许执行。换句话说，就是用户不允许扫描所有分区。进行这个限制的原因是，通常分区表都拥有非常大的数据集，而且数据增加迅速。没有进行分区限制的查询可能会消耗令人不可接受的巨大资源来处理这个表。")]),a._v(" "),e("p",[e("strong",[a._v("2）使用 order by 没有 limit 过滤")])]),a._v(" "),e("p",[a._v("将"),e("code",[a._v("hive.strict.checks.orderby.no.limit")]),a._v("设置为 true 时，对于"),e("strong",[a._v("使用了 order by 语句的查询，要求必须使用 limit 语句")]),a._v("。因为 order by 为了执行排序过程会将所有的结果数据分发到同一个 Reduce 中进行处理，强制要求用户增加这个 limit 语句可以防止 Reduce 额外执行很长一段时间（开启了 limit 可以在数据进入到 Reduce 之前就减少一部分数据）。")]),a._v(" "),e("p",[e("strong",[a._v("3）笛卡尔积")])]),a._v(" "),e("p",[a._v("将"),e("code",[a._v("hive.strict.checks.cartesian.product")]),a._v("设置为 true 时，"),e("strong",[a._v("会限制笛卡尔积的查询")]),a._v("。对关系型数据库非常了解的用户可能期望在执行 JOIN 查询的时候不使用 ON 语句而是使用 where 语句，这样关系数据库的执行优化器就可以高效地将 WHERE 语句转化成那个 ON 语句。不幸的是，Hive 并不会执行这种优化，因此，如果表足够大，那么这个查询就会出现不可控的情况。")]),a._v(" "),e("h1",{attrs:{id:"附录-常见错误及解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#附录-常见错误及解决方案"}},[a._v("#")]),a._v(" 附录：常见错误及解决方案")]),a._v(" "),e("h2",{attrs:{id:"_1-连接不上-mysql-数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-连接不上-mysql-数据库"}},[a._v("#")]),a._v(" 1）连接不上 MySQL 数据库")]),a._v(" "),e("p",[a._v("（1）导错驱动包，应该把 mysql-connector-java-5.1.27-bin.jar 导入/opt/module/hive/lib 的不是这个包。错把 mysql-connector-java-5.1.27.tar.gz 导入 hive/lib 包下。")]),a._v(" "),e("p",[a._v("（2）修改 user 表中的主机名称没有都修改为%，而是修改为 localhost")]),a._v(" "),e("h2",{attrs:{id:"_2-hive-默认的输入格式处理是-combinehiveinputformat-会对小文件进行合并。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-hive-默认的输入格式处理是-combinehiveinputformat-会对小文件进行合并。"}},[a._v("#")]),a._v(" 2）Hive 默认的输入格式处理是 CombineHiveInputFormat，会对小文件进行合并。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)> set hive.input.format;\nhive.input.format=org.apache.hadoop.hive.ql.io.CombineHiveInputFormat\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("可以采用 HiveInputFormat 就会根据分区数输出相应的文件。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hive (default)> set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h2",{attrs:{id:"_3-不能执行-mapreduce-程序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-不能执行-mapreduce-程序"}},[a._v("#")]),a._v(" 3）不能执行 MapReduce 程序")]),a._v(" "),e("p",[a._v("可能是 Hadoop 的 Yarn 没开启。")]),a._v(" "),e("h2",{attrs:{id:"_4-启动-mysql-服务时-报-mysql-server-pid-file-could-not-be-found-异常。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-启动-mysql-服务时-报-mysql-server-pid-file-could-not-be-found-异常。"}},[a._v("#")]),a._v(" 4）启动 MySQL 服务时，报 MySQL server PID file could not be found! 异常。")]),a._v(" "),e("p",[a._v("在/var/lock/subsys/mysql 路径下创建 hadoop102.pid，并在文件中添加内容：4396")]),a._v(" "),e("h2",{attrs:{id:"_5-报-service-mysql-status-mysql-is-not-running-but-lock-file-var-lock-subsys-mysql-失败-异常。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-报-service-mysql-status-mysql-is-not-running-but-lock-file-var-lock-subsys-mysql-失败-异常。"}},[a._v("#")]),a._v(" "),e("strong",[a._v("5）报 service mysql status MySQL is not running, but lock file (/var/lock/subsys/mysql[失败])异常。")])]),a._v(" "),e("p",[a._v("解决方案：在/var/lib/mysql 目录下创建：-rw-rw----. 1 mysql mysql 5 12 月 22 16:41 hadoop102.pid 文件，并修改权限为 777。")]),a._v(" "),e("h2",{attrs:{id:"_6-jvm-堆内存溢出-hive-集群运行模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-jvm-堆内存溢出-hive-集群运行模式"}},[a._v("#")]),a._v(" 6）JVM 堆内存溢出（Hive 集群运行模式）")]),a._v(" "),e("p",[a._v("描述：java.lang.OutOfMemoryError: Java heap space")]),a._v(" "),e("p",[a._v("解决：在 yarn-site.xml 中加入如下代码。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("<property>\n\t<name>yarn.scheduler.maximum-allocation-mb</name>\n\t<value>2048</value>\n</property>\n<property>\n  \t<name>yarn.scheduler.minimum-allocation-mb</name>\n  \t<value>2048</value>\n</property>\n<property>\n\t<name>yarn.nodemanager.vmem-pmem-ratio</name>\n\t<value>2.1</value>\n</property>\n<property>\n\t<name>mapred.child.java.opts</name>\n\t<value>-Xmx1024m</value>\n</property>\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br")])]),e("p",[a._v("7）JVM 堆内存溢出（Hive 本地运行模式）")]),a._v(" "),e("p",[a._v("描述：在启用 Hive 本地模式后，hive.log 报错 java.lang.OutOfMemoryError: Java heap space")]),a._v(" "),e("p",[a._v("解决方案 1（临时）：")]),a._v(" "),e("p",[a._v("在 Hive 客户端临时设置 io.sort.mb 和 mapreduce.task.io.sort.mb 两个参数的值为 10")]),a._v(" "),e("p",[a._v("解决方案 2（永久生效）：\n在$HIVE_HOME/conf 下添加 hive-env.sh。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("[atguigu@hadoop102 conf]$ pwd\n/opt/module/hive/conf\n[atguigu@hadoop102 conf]$ cp hive-env.sh.template hive-env.sh\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[a._v("然后将其中的参数 export HADOOP_HEAPSIZE=1024 的注释放开，然后重启 Hive。")]),a._v(" "),e("p",[e("img",{attrs:{src:s(1133),alt:"image-20231018230009065"}})]),a._v(" "),e("p",[e("img",{attrs:{src:s(1134),alt:"image-20231018230015070"}})]),a._v(" "),e("p",[a._v("8）虚拟内存限制")]),a._v(" "),e("p",[a._v("在 yarn-site.xml 中添加如下配置:")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("<property>\n    <name>yarn.nodemanager.vmem-check-enabled</name>\n    <value>false</value>\n </property>\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("h1",{attrs:{id:"建议配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#建议配置"}},[a._v("#")]),a._v(" 建议配置")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("set hive.exec.mode.local.auto;\nset hive.exec.parallel;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("map 端 CUP 内存 默认8G 8C")]),a._v(" "),e("p",[a._v("yarn 关闭虚拟内存限制检查 内存添加")])])}),[],!1,null,null,null);e.default=t.exports}}]);